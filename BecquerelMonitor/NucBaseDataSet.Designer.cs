//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BecquerelMonitor {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NucBaseDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NucBaseDataSet : global::System.Data.DataSet {
        
        private cumulative_fissionDataTable tablecumulative_fission;
        
        private decay_chainDataTable tabledecay_chain;
        
        private decay_radiationsDataTable tabledecay_radiations;
        
        private l_decaysDataTable tablel_decays;
        
        private nuclidesDataTable tablenuclides;
        
        private thermal_cross_sectDataTable tablethermal_cross_sect;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public NucBaseDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected NucBaseDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["cumulative_fission"] != null)) {
                    base.Tables.Add(new cumulative_fissionDataTable(ds.Tables["cumulative_fission"]));
                }
                if ((ds.Tables["decay_chain"] != null)) {
                    base.Tables.Add(new decay_chainDataTable(ds.Tables["decay_chain"]));
                }
                if ((ds.Tables["decay_radiations"] != null)) {
                    base.Tables.Add(new decay_radiationsDataTable(ds.Tables["decay_radiations"]));
                }
                if ((ds.Tables["l_decays"] != null)) {
                    base.Tables.Add(new l_decaysDataTable(ds.Tables["l_decays"]));
                }
                if ((ds.Tables["nuclides"] != null)) {
                    base.Tables.Add(new nuclidesDataTable(ds.Tables["nuclides"]));
                }
                if ((ds.Tables["thermal_cross_sect"] != null)) {
                    base.Tables.Add(new thermal_cross_sectDataTable(ds.Tables["thermal_cross_sect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cumulative_fissionDataTable cumulative_fission {
            get {
                return this.tablecumulative_fission;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public decay_chainDataTable decay_chain {
            get {
                return this.tabledecay_chain;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public decay_radiationsDataTable decay_radiations {
            get {
                return this.tabledecay_radiations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public l_decaysDataTable l_decays {
            get {
                return this.tablel_decays;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nuclidesDataTable nuclides {
            get {
                return this.tablenuclides;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public thermal_cross_sectDataTable thermal_cross_sect {
            get {
                return this.tablethermal_cross_sect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NucBaseDataSet cln = ((NucBaseDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["cumulative_fission"] != null)) {
                    base.Tables.Add(new cumulative_fissionDataTable(ds.Tables["cumulative_fission"]));
                }
                if ((ds.Tables["decay_chain"] != null)) {
                    base.Tables.Add(new decay_chainDataTable(ds.Tables["decay_chain"]));
                }
                if ((ds.Tables["decay_radiations"] != null)) {
                    base.Tables.Add(new decay_radiationsDataTable(ds.Tables["decay_radiations"]));
                }
                if ((ds.Tables["l_decays"] != null)) {
                    base.Tables.Add(new l_decaysDataTable(ds.Tables["l_decays"]));
                }
                if ((ds.Tables["nuclides"] != null)) {
                    base.Tables.Add(new nuclidesDataTable(ds.Tables["nuclides"]));
                }
                if ((ds.Tables["thermal_cross_sect"] != null)) {
                    base.Tables.Add(new thermal_cross_sectDataTable(ds.Tables["thermal_cross_sect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablecumulative_fission = ((cumulative_fissionDataTable)(base.Tables["cumulative_fission"]));
            if ((initTable == true)) {
                if ((this.tablecumulative_fission != null)) {
                    this.tablecumulative_fission.InitVars();
                }
            }
            this.tabledecay_chain = ((decay_chainDataTable)(base.Tables["decay_chain"]));
            if ((initTable == true)) {
                if ((this.tabledecay_chain != null)) {
                    this.tabledecay_chain.InitVars();
                }
            }
            this.tabledecay_radiations = ((decay_radiationsDataTable)(base.Tables["decay_radiations"]));
            if ((initTable == true)) {
                if ((this.tabledecay_radiations != null)) {
                    this.tabledecay_radiations.InitVars();
                }
            }
            this.tablel_decays = ((l_decaysDataTable)(base.Tables["l_decays"]));
            if ((initTable == true)) {
                if ((this.tablel_decays != null)) {
                    this.tablel_decays.InitVars();
                }
            }
            this.tablenuclides = ((nuclidesDataTable)(base.Tables["nuclides"]));
            if ((initTable == true)) {
                if ((this.tablenuclides != null)) {
                    this.tablenuclides.InitVars();
                }
            }
            this.tablethermal_cross_sect = ((thermal_cross_sectDataTable)(base.Tables["thermal_cross_sect"]));
            if ((initTable == true)) {
                if ((this.tablethermal_cross_sect != null)) {
                    this.tablethermal_cross_sect.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NucBaseDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NucBaseDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecumulative_fission = new cumulative_fissionDataTable();
            base.Tables.Add(this.tablecumulative_fission);
            this.tabledecay_chain = new decay_chainDataTable();
            base.Tables.Add(this.tabledecay_chain);
            this.tabledecay_radiations = new decay_radiationsDataTable();
            base.Tables.Add(this.tabledecay_radiations);
            this.tablel_decays = new l_decaysDataTable();
            base.Tables.Add(this.tablel_decays);
            this.tablenuclides = new nuclidesDataTable();
            base.Tables.Add(this.tablenuclides);
            this.tablethermal_cross_sect = new thermal_cross_sectDataTable();
            base.Tables.Add(this.tablethermal_cross_sect);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializecumulative_fission() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializedecay_chain() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializedecay_radiations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializel_decays() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializenuclides() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializethermal_cross_sect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NucBaseDataSet ds = new NucBaseDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void cumulative_fissionRowChangeEventHandler(object sender, cumulative_fissionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void decay_chainRowChangeEventHandler(object sender, decay_chainRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void decay_radiationsRowChangeEventHandler(object sender, decay_radiationsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void l_decaysRowChangeEventHandler(object sender, l_decaysRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void nuclidesRowChangeEventHandler(object sender, nuclidesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void thermal_cross_sectRowChangeEventHandler(object sender, thermal_cross_sectRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cumulative_fissionDataTable : global::System.Data.TypedTableBase<cumulative_fissionRow> {
            
            private global::System.Data.DataColumn columnparent_nucid;
            
            private global::System.Data.DataColumn columnnucid;
            
            private global::System.Data.DataColumn columnl_seqno;
            
            private global::System.Data.DataColumn columnther_yield_num;
            
            private global::System.Data.DataColumn columnther_yield_unc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionDataTable() {
                this.TableName = "cumulative_fission";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal cumulative_fissionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected cumulative_fissionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn parent_nucidColumn {
                get {
                    return this.columnparent_nucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nucidColumn {
                get {
                    return this.columnnucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn l_seqnoColumn {
                get {
                    return this.columnl_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ther_yield_numColumn {
                get {
                    return this.columnther_yield_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ther_yield_uncColumn {
                get {
                    return this.columnther_yield_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRow this[int index] {
                get {
                    return ((cumulative_fissionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event cumulative_fissionRowChangeEventHandler cumulative_fissionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event cumulative_fissionRowChangeEventHandler cumulative_fissionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event cumulative_fissionRowChangeEventHandler cumulative_fissionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event cumulative_fissionRowChangeEventHandler cumulative_fissionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addcumulative_fissionRow(cumulative_fissionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRow Addcumulative_fissionRow(string parent_nucid, string nucid, long l_seqno, string ther_yield_num, string ther_yield_unc) {
                cumulative_fissionRow rowcumulative_fissionRow = ((cumulative_fissionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        parent_nucid,
                        nucid,
                        l_seqno,
                        ther_yield_num,
                        ther_yield_unc};
                rowcumulative_fissionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcumulative_fissionRow);
                return rowcumulative_fissionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRow FindByparent_nucidnucidl_seqno(string parent_nucid, string nucid, long l_seqno) {
                return ((cumulative_fissionRow)(this.Rows.Find(new object[] {
                            parent_nucid,
                            nucid,
                            l_seqno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                cumulative_fissionDataTable cln = ((cumulative_fissionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new cumulative_fissionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnparent_nucid = base.Columns["parent_nucid"];
                this.columnnucid = base.Columns["nucid"];
                this.columnl_seqno = base.Columns["l_seqno"];
                this.columnther_yield_num = base.Columns["ther_yield_num"];
                this.columnther_yield_unc = base.Columns["ther_yield_unc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnparent_nucid = new global::System.Data.DataColumn("parent_nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_nucid);
                this.columnnucid = new global::System.Data.DataColumn("nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnucid);
                this.columnl_seqno = new global::System.Data.DataColumn("l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnl_seqno);
                this.columnther_yield_num = new global::System.Data.DataColumn("ther_yield_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnther_yield_num);
                this.columnther_yield_unc = new global::System.Data.DataColumn("ther_yield_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnther_yield_unc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnparent_nucid,
                                this.columnnucid,
                                this.columnl_seqno}, true));
                this.columnparent_nucid.AllowDBNull = false;
                this.columnnucid.AllowDBNull = false;
                this.columnl_seqno.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRow Newcumulative_fissionRow() {
                return ((cumulative_fissionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new cumulative_fissionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(cumulative_fissionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cumulative_fissionRowChanged != null)) {
                    this.cumulative_fissionRowChanged(this, new cumulative_fissionRowChangeEvent(((cumulative_fissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cumulative_fissionRowChanging != null)) {
                    this.cumulative_fissionRowChanging(this, new cumulative_fissionRowChangeEvent(((cumulative_fissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cumulative_fissionRowDeleted != null)) {
                    this.cumulative_fissionRowDeleted(this, new cumulative_fissionRowChangeEvent(((cumulative_fissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cumulative_fissionRowDeleting != null)) {
                    this.cumulative_fissionRowDeleting(this, new cumulative_fissionRowChangeEvent(((cumulative_fissionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removecumulative_fissionRow(cumulative_fissionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cumulative_fissionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class decay_chainDataTable : global::System.Data.TypedTableBase<decay_chainRow> {
            
            private global::System.Data.DataColumn columnnucid;
            
            private global::System.Data.DataColumn columnl_seqno;
            
            private global::System.Data.DataColumn columndaughter_nucid;
            
            private global::System.Data.DataColumn columndec_type;
            
            private global::System.Data.DataColumn columnperc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainDataTable() {
                this.TableName = "decay_chain";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal decay_chainDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected decay_chainDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nucidColumn {
                get {
                    return this.columnnucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn l_seqnoColumn {
                get {
                    return this.columnl_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn daughter_nucidColumn {
                get {
                    return this.columndaughter_nucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dec_typeColumn {
                get {
                    return this.columndec_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn percColumn {
                get {
                    return this.columnperc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRow this[int index] {
                get {
                    return ((decay_chainRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_chainRowChangeEventHandler decay_chainRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_chainRowChangeEventHandler decay_chainRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_chainRowChangeEventHandler decay_chainRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_chainRowChangeEventHandler decay_chainRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Adddecay_chainRow(decay_chainRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRow Adddecay_chainRow(string nucid, long l_seqno, string daughter_nucid, string dec_type, string perc) {
                decay_chainRow rowdecay_chainRow = ((decay_chainRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nucid,
                        l_seqno,
                        daughter_nucid,
                        dec_type,
                        perc};
                rowdecay_chainRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdecay_chainRow);
                return rowdecay_chainRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRow FindBynucidl_seqnodaughter_nuciddec_type(string nucid, long l_seqno, string daughter_nucid, string dec_type) {
                return ((decay_chainRow)(this.Rows.Find(new object[] {
                            nucid,
                            l_seqno,
                            daughter_nucid,
                            dec_type})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                decay_chainDataTable cln = ((decay_chainDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new decay_chainDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnnucid = base.Columns["nucid"];
                this.columnl_seqno = base.Columns["l_seqno"];
                this.columndaughter_nucid = base.Columns["daughter_nucid"];
                this.columndec_type = base.Columns["dec_type"];
                this.columnperc = base.Columns["perc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnnucid = new global::System.Data.DataColumn("nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnucid);
                this.columnl_seqno = new global::System.Data.DataColumn("l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnl_seqno);
                this.columndaughter_nucid = new global::System.Data.DataColumn("daughter_nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaughter_nucid);
                this.columndec_type = new global::System.Data.DataColumn("dec_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndec_type);
                this.columnperc = new global::System.Data.DataColumn("perc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnucid,
                                this.columnl_seqno,
                                this.columndaughter_nucid,
                                this.columndec_type}, true));
                this.columnnucid.AllowDBNull = false;
                this.columnl_seqno.AllowDBNull = false;
                this.columndaughter_nucid.AllowDBNull = false;
                this.columndec_type.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRow Newdecay_chainRow() {
                return ((decay_chainRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new decay_chainRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(decay_chainRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.decay_chainRowChanged != null)) {
                    this.decay_chainRowChanged(this, new decay_chainRowChangeEvent(((decay_chainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.decay_chainRowChanging != null)) {
                    this.decay_chainRowChanging(this, new decay_chainRowChangeEvent(((decay_chainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.decay_chainRowDeleted != null)) {
                    this.decay_chainRowDeleted(this, new decay_chainRowChangeEvent(((decay_chainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.decay_chainRowDeleting != null)) {
                    this.decay_chainRowDeleting(this, new decay_chainRowChangeEvent(((decay_chainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removedecay_chainRow(decay_chainRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "decay_chainDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class decay_radiationsDataTable : global::System.Data.TypedTableBase<decay_radiationsRow> {
            
            private global::System.Data.DataColumn columnparent_l_seqno;
            
            private global::System.Data.DataColumn columnparent_nucid;
            
            private global::System.Data.DataColumn columndec_type;
            
            private global::System.Data.DataColumn columntype_a;
            
            private global::System.Data.DataColumn columntype_c;
            
            private global::System.Data.DataColumn columnlogft;
            
            private global::System.Data.DataColumn columnlogft_unc;
            
            private global::System.Data.DataColumn columnlogft_num;
            
            private global::System.Data.DataColumn columnintensity;
            
            private global::System.Data.DataColumn columnintensity_unc;
            
            private global::System.Data.DataColumn columnintensity_num;
            
            private global::System.Data.DataColumn columnenergy_num;
            
            private global::System.Data.DataColumn columnenergy;
            
            private global::System.Data.DataColumn columnenergy_unc;
            
            private global::System.Data.DataColumn columnendpoint;
            
            private global::System.Data.DataColumn columnendpoint_unc;
            
            private global::System.Data.DataColumn columndr_pk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsDataTable() {
                this.TableName = "decay_radiations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal decay_radiationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected decay_radiationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn parent_l_seqnoColumn {
                get {
                    return this.columnparent_l_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn parent_nucidColumn {
                get {
                    return this.columnparent_nucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dec_typeColumn {
                get {
                    return this.columndec_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn type_aColumn {
                get {
                    return this.columntype_a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn type_cColumn {
                get {
                    return this.columntype_c;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn logftColumn {
                get {
                    return this.columnlogft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn logft_uncColumn {
                get {
                    return this.columnlogft_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn logft_numColumn {
                get {
                    return this.columnlogft_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn intensityColumn {
                get {
                    return this.columnintensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn intensity_uncColumn {
                get {
                    return this.columnintensity_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn intensity_numColumn {
                get {
                    return this.columnintensity_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn energy_numColumn {
                get {
                    return this.columnenergy_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn energyColumn {
                get {
                    return this.columnenergy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn energy_uncColumn {
                get {
                    return this.columnenergy_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn endpointColumn {
                get {
                    return this.columnendpoint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn endpoint_uncColumn {
                get {
                    return this.columnendpoint_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dr_pkColumn {
                get {
                    return this.columndr_pk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRow this[int index] {
                get {
                    return ((decay_radiationsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_radiationsRowChangeEventHandler decay_radiationsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_radiationsRowChangeEventHandler decay_radiationsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_radiationsRowChangeEventHandler decay_radiationsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event decay_radiationsRowChangeEventHandler decay_radiationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Adddecay_radiationsRow(decay_radiationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRow Adddecay_radiationsRow(
                        long parent_l_seqno, 
                        string parent_nucid, 
                        string dec_type, 
                        string type_a, 
                        string type_c, 
                        string logft, 
                        string logft_unc, 
                        double logft_num, 
                        string intensity, 
                        string intensity_unc, 
                        double intensity_num, 
                        double energy_num, 
                        string energy, 
                        string energy_unc, 
                        string endpoint, 
                        string endpoint_unc, 
                        long dr_pk) {
                decay_radiationsRow rowdecay_radiationsRow = ((decay_radiationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        parent_l_seqno,
                        parent_nucid,
                        dec_type,
                        type_a,
                        type_c,
                        logft,
                        logft_unc,
                        logft_num,
                        intensity,
                        intensity_unc,
                        intensity_num,
                        energy_num,
                        energy,
                        energy_unc,
                        endpoint,
                        endpoint_unc,
                        dr_pk};
                rowdecay_radiationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdecay_radiationsRow);
                return rowdecay_radiationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRow FindBydr_pk(long dr_pk) {
                return ((decay_radiationsRow)(this.Rows.Find(new object[] {
                            dr_pk})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                decay_radiationsDataTable cln = ((decay_radiationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new decay_radiationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnparent_l_seqno = base.Columns["parent_l_seqno"];
                this.columnparent_nucid = base.Columns["parent_nucid"];
                this.columndec_type = base.Columns["dec_type"];
                this.columntype_a = base.Columns["type_a"];
                this.columntype_c = base.Columns["type_c"];
                this.columnlogft = base.Columns["logft"];
                this.columnlogft_unc = base.Columns["logft_unc"];
                this.columnlogft_num = base.Columns["logft_num"];
                this.columnintensity = base.Columns["intensity"];
                this.columnintensity_unc = base.Columns["intensity_unc"];
                this.columnintensity_num = base.Columns["intensity_num"];
                this.columnenergy_num = base.Columns["energy_num"];
                this.columnenergy = base.Columns["energy"];
                this.columnenergy_unc = base.Columns["energy_unc"];
                this.columnendpoint = base.Columns["endpoint"];
                this.columnendpoint_unc = base.Columns["endpoint_unc"];
                this.columndr_pk = base.Columns["dr_pk"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnparent_l_seqno = new global::System.Data.DataColumn("parent_l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_l_seqno);
                this.columnparent_nucid = new global::System.Data.DataColumn("parent_nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_nucid);
                this.columndec_type = new global::System.Data.DataColumn("dec_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndec_type);
                this.columntype_a = new global::System.Data.DataColumn("type_a", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_a);
                this.columntype_c = new global::System.Data.DataColumn("type_c", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_c);
                this.columnlogft = new global::System.Data.DataColumn("logft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogft);
                this.columnlogft_unc = new global::System.Data.DataColumn("logft_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogft_unc);
                this.columnlogft_num = new global::System.Data.DataColumn("logft_num", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogft_num);
                this.columnintensity = new global::System.Data.DataColumn("intensity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintensity);
                this.columnintensity_unc = new global::System.Data.DataColumn("intensity_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintensity_unc);
                this.columnintensity_num = new global::System.Data.DataColumn("intensity_num", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintensity_num);
                this.columnenergy_num = new global::System.Data.DataColumn("energy_num", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenergy_num);
                this.columnenergy = new global::System.Data.DataColumn("energy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenergy);
                this.columnenergy_unc = new global::System.Data.DataColumn("energy_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenergy_unc);
                this.columnendpoint = new global::System.Data.DataColumn("endpoint", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendpoint);
                this.columnendpoint_unc = new global::System.Data.DataColumn("endpoint_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendpoint_unc);
                this.columndr_pk = new global::System.Data.DataColumn("dr_pk", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndr_pk);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndr_pk}, true));
                this.columndr_pk.AllowDBNull = false;
                this.columndr_pk.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRow Newdecay_radiationsRow() {
                return ((decay_radiationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new decay_radiationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(decay_radiationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.decay_radiationsRowChanged != null)) {
                    this.decay_radiationsRowChanged(this, new decay_radiationsRowChangeEvent(((decay_radiationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.decay_radiationsRowChanging != null)) {
                    this.decay_radiationsRowChanging(this, new decay_radiationsRowChangeEvent(((decay_radiationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.decay_radiationsRowDeleted != null)) {
                    this.decay_radiationsRowDeleted(this, new decay_radiationsRowChangeEvent(((decay_radiationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.decay_radiationsRowDeleting != null)) {
                    this.decay_radiationsRowDeleting(this, new decay_radiationsRowChangeEvent(((decay_radiationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removedecay_radiationsRow(decay_radiationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "decay_radiationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class l_decaysDataTable : global::System.Data.TypedTableBase<l_decaysRow> {
            
            private global::System.Data.DataColumn columnnucid;
            
            private global::System.Data.DataColumn columnl_seqno;
            
            private global::System.Data.DataColumn columnperc;
            
            private global::System.Data.DataColumn columnperc_num;
            
            private global::System.Data.DataColumn columnunc;
            
            private global::System.Data.DataColumn columnperc_oper;
            
            private global::System.Data.DataColumn columndec_type;
            
            private global::System.Data.DataColumn columndaughter_nucid;
            
            private global::System.Data.DataColumn columndecay_label;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysDataTable() {
                this.TableName = "l_decays";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal l_decaysDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected l_decaysDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nucidColumn {
                get {
                    return this.columnnucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn l_seqnoColumn {
                get {
                    return this.columnl_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn percColumn {
                get {
                    return this.columnperc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn perc_numColumn {
                get {
                    return this.columnperc_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn uncColumn {
                get {
                    return this.columnunc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn perc_operColumn {
                get {
                    return this.columnperc_oper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dec_typeColumn {
                get {
                    return this.columndec_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn daughter_nucidColumn {
                get {
                    return this.columndaughter_nucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn decay_labelColumn {
                get {
                    return this.columndecay_label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRow this[int index] {
                get {
                    return ((l_decaysRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event l_decaysRowChangeEventHandler l_decaysRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event l_decaysRowChangeEventHandler l_decaysRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event l_decaysRowChangeEventHandler l_decaysRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event l_decaysRowChangeEventHandler l_decaysRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addl_decaysRow(l_decaysRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRow Addl_decaysRow(string nucid, long l_seqno, string perc, double perc_num, string unc, string perc_oper, long dec_type, string daughter_nucid, string decay_label) {
                l_decaysRow rowl_decaysRow = ((l_decaysRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nucid,
                        l_seqno,
                        perc,
                        perc_num,
                        unc,
                        perc_oper,
                        dec_type,
                        daughter_nucid,
                        decay_label};
                rowl_decaysRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowl_decaysRow);
                return rowl_decaysRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRow FindBynucidl_seqnodec_type(string nucid, long l_seqno, long dec_type) {
                return ((l_decaysRow)(this.Rows.Find(new object[] {
                            nucid,
                            l_seqno,
                            dec_type})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                l_decaysDataTable cln = ((l_decaysDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new l_decaysDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnnucid = base.Columns["nucid"];
                this.columnl_seqno = base.Columns["l_seqno"];
                this.columnperc = base.Columns["perc"];
                this.columnperc_num = base.Columns["perc_num"];
                this.columnunc = base.Columns["unc"];
                this.columnperc_oper = base.Columns["perc_oper"];
                this.columndec_type = base.Columns["dec_type"];
                this.columndaughter_nucid = base.Columns["daughter_nucid"];
                this.columndecay_label = base.Columns["decay_label"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnnucid = new global::System.Data.DataColumn("nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnucid);
                this.columnl_seqno = new global::System.Data.DataColumn("l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnl_seqno);
                this.columnperc = new global::System.Data.DataColumn("perc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperc);
                this.columnperc_num = new global::System.Data.DataColumn("perc_num", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperc_num);
                this.columnunc = new global::System.Data.DataColumn("unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunc);
                this.columnperc_oper = new global::System.Data.DataColumn("perc_oper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperc_oper);
                this.columndec_type = new global::System.Data.DataColumn("dec_type", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndec_type);
                this.columndaughter_nucid = new global::System.Data.DataColumn("daughter_nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaughter_nucid);
                this.columndecay_label = new global::System.Data.DataColumn("decay_label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndecay_label);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnucid,
                                this.columnl_seqno,
                                this.columndec_type}, true));
                this.columnnucid.AllowDBNull = false;
                this.columnl_seqno.AllowDBNull = false;
                this.columndec_type.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRow Newl_decaysRow() {
                return ((l_decaysRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new l_decaysRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(l_decaysRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.l_decaysRowChanged != null)) {
                    this.l_decaysRowChanged(this, new l_decaysRowChangeEvent(((l_decaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.l_decaysRowChanging != null)) {
                    this.l_decaysRowChanging(this, new l_decaysRowChangeEvent(((l_decaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.l_decaysRowDeleted != null)) {
                    this.l_decaysRowDeleted(this, new l_decaysRowChangeEvent(((l_decaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.l_decaysRowDeleting != null)) {
                    this.l_decaysRowDeleting(this, new l_decaysRowChangeEvent(((l_decaysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removel_decaysRow(l_decaysRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "l_decaysDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nuclidesDataTable : global::System.Data.TypedTableBase<nuclidesRow> {
            
            private global::System.Data.DataColumn columnnucid;
            
            private global::System.Data.DataColumn columnz;
            
            private global::System.Data.DataColumn columnn;
            
            private global::System.Data.DataColumn columnsymbol;
            
            private global::System.Data.DataColumn columnl_seqno;
            
            private global::System.Data.DataColumn columnjp;
            
            private global::System.Data.DataColumn columnhalf_life;
            
            private global::System.Data.DataColumn columnhalf_life_unc;
            
            private global::System.Data.DataColumn columnhalf_life_unit;
            
            private global::System.Data.DataColumn columnhalf_life_sec;
            
            private global::System.Data.DataColumn columnmass_excess;
            
            private global::System.Data.DataColumn columnmass_excess_unc;
            
            private global::System.Data.DataColumn columnbinding;
            
            private global::System.Data.DataColumn columnbinding_unc;
            
            private global::System.Data.DataColumn columnatomic_mass;
            
            private global::System.Data.DataColumn columnatomic_mass_unc;
            
            private global::System.Data.DataColumn columnbeta_decay_en;
            
            private global::System.Data.DataColumn columnbeta_decay_en_unc;
            
            private global::System.Data.DataColumn columnqa;
            
            private global::System.Data.DataColumn columnqa_unc;
            
            private global::System.Data.DataColumn columnqec;
            
            private global::System.Data.DataColumn columnqec_unc;
            
            private global::System.Data.DataColumn columnsn;
            
            private global::System.Data.DataColumn columnsn_unc;
            
            private global::System.Data.DataColumn columnsp;
            
            private global::System.Data.DataColumn columnsp_unc;
            
            private global::System.Data.DataColumn columnradii_val;
            
            private global::System.Data.DataColumn columnradii_del;
            
            private global::System.Data.DataColumn columnel_mom;
            
            private global::System.Data.DataColumn columnmag_mom;
            
            private global::System.Data.DataColumn columnabundance;
            
            private global::System.Data.DataColumn columnabundance_unc;
            
            private global::System.Data.DataColumn columnther_capture;
            
            private global::System.Data.DataColumn columnther_capture_unc;
            
            private global::System.Data.DataColumn columnwestcott_g;
            
            private global::System.Data.DataColumn columnresonance_integ;
            
            private global::System.Data.DataColumn columnresonance_integ_unc;
            
            private global::System.Data.DataColumn columntentative;
            
            private global::System.Data.DataColumn columnpk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesDataTable() {
                this.TableName = "nuclides";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal nuclidesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected nuclidesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nucidColumn {
                get {
                    return this.columnnucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn zColumn {
                get {
                    return this.columnz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nColumn {
                get {
                    return this.columnn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn symbolColumn {
                get {
                    return this.columnsymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn l_seqnoColumn {
                get {
                    return this.columnl_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn jpColumn {
                get {
                    return this.columnjp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn half_lifeColumn {
                get {
                    return this.columnhalf_life;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn half_life_uncColumn {
                get {
                    return this.columnhalf_life_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn half_life_unitColumn {
                get {
                    return this.columnhalf_life_unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn half_life_secColumn {
                get {
                    return this.columnhalf_life_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mass_excessColumn {
                get {
                    return this.columnmass_excess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mass_excess_uncColumn {
                get {
                    return this.columnmass_excess_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn bindingColumn {
                get {
                    return this.columnbinding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn binding_uncColumn {
                get {
                    return this.columnbinding_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn atomic_massColumn {
                get {
                    return this.columnatomic_mass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn atomic_mass_uncColumn {
                get {
                    return this.columnatomic_mass_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn beta_decay_enColumn {
                get {
                    return this.columnbeta_decay_en;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn beta_decay_en_uncColumn {
                get {
                    return this.columnbeta_decay_en_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn qaColumn {
                get {
                    return this.columnqa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn qa_uncColumn {
                get {
                    return this.columnqa_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn qecColumn {
                get {
                    return this.columnqec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn qec_uncColumn {
                get {
                    return this.columnqec_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn snColumn {
                get {
                    return this.columnsn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn sn_uncColumn {
                get {
                    return this.columnsn_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn spColumn {
                get {
                    return this.columnsp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn sp_uncColumn {
                get {
                    return this.columnsp_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn radii_valColumn {
                get {
                    return this.columnradii_val;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn radii_delColumn {
                get {
                    return this.columnradii_del;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn el_momColumn {
                get {
                    return this.columnel_mom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn mag_momColumn {
                get {
                    return this.columnmag_mom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn abundanceColumn {
                get {
                    return this.columnabundance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn abundance_uncColumn {
                get {
                    return this.columnabundance_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ther_captureColumn {
                get {
                    return this.columnther_capture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ther_capture_uncColumn {
                get {
                    return this.columnther_capture_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn westcott_gColumn {
                get {
                    return this.columnwestcott_g;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn resonance_integColumn {
                get {
                    return this.columnresonance_integ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn resonance_integ_uncColumn {
                get {
                    return this.columnresonance_integ_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tentativeColumn {
                get {
                    return this.columntentative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn pkColumn {
                get {
                    return this.columnpk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRow this[int index] {
                get {
                    return ((nuclidesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event nuclidesRowChangeEventHandler nuclidesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event nuclidesRowChangeEventHandler nuclidesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event nuclidesRowChangeEventHandler nuclidesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event nuclidesRowChangeEventHandler nuclidesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddnuclidesRow(nuclidesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRow AddnuclidesRow(
                        string nucid, 
                        long z, 
                        long n, 
                        string symbol, 
                        long l_seqno, 
                        string jp, 
                        string half_life, 
                        string half_life_unc, 
                        string half_life_unit, 
                        double half_life_sec, 
                        string mass_excess, 
                        string mass_excess_unc, 
                        string binding, 
                        string binding_unc, 
                        string atomic_mass, 
                        string atomic_mass_unc, 
                        string beta_decay_en, 
                        string beta_decay_en_unc, 
                        string qa, 
                        string qa_unc, 
                        string qec, 
                        long qec_unc, 
                        string sn, 
                        string sn_unc, 
                        string sp, 
                        string sp_unc, 
                        string radii_val, 
                        string radii_del, 
                        string el_mom, 
                        string mag_mom, 
                        string abundance, 
                        string abundance_unc, 
                        string ther_capture, 
                        string ther_capture_unc, 
                        string westcott_g, 
                        string resonance_integ, 
                        string resonance_integ_unc, 
                        string tentative, 
                        string pk) {
                nuclidesRow rownuclidesRow = ((nuclidesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nucid,
                        z,
                        n,
                        symbol,
                        l_seqno,
                        jp,
                        half_life,
                        half_life_unc,
                        half_life_unit,
                        half_life_sec,
                        mass_excess,
                        mass_excess_unc,
                        binding,
                        binding_unc,
                        atomic_mass,
                        atomic_mass_unc,
                        beta_decay_en,
                        beta_decay_en_unc,
                        qa,
                        qa_unc,
                        qec,
                        qec_unc,
                        sn,
                        sn_unc,
                        sp,
                        sp_unc,
                        radii_val,
                        radii_del,
                        el_mom,
                        mag_mom,
                        abundance,
                        abundance_unc,
                        ther_capture,
                        ther_capture_unc,
                        westcott_g,
                        resonance_integ,
                        resonance_integ_unc,
                        tentative,
                        pk};
                rownuclidesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownuclidesRow);
                return rownuclidesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRow FindBypk(string pk) {
                return ((nuclidesRow)(this.Rows.Find(new object[] {
                            pk})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                nuclidesDataTable cln = ((nuclidesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nuclidesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnnucid = base.Columns["nucid"];
                this.columnz = base.Columns["z"];
                this.columnn = base.Columns["n"];
                this.columnsymbol = base.Columns["symbol"];
                this.columnl_seqno = base.Columns["l_seqno"];
                this.columnjp = base.Columns["jp"];
                this.columnhalf_life = base.Columns["half_life"];
                this.columnhalf_life_unc = base.Columns["half_life_unc"];
                this.columnhalf_life_unit = base.Columns["half_life_unit"];
                this.columnhalf_life_sec = base.Columns["half_life_sec"];
                this.columnmass_excess = base.Columns["mass_excess"];
                this.columnmass_excess_unc = base.Columns["mass_excess_unc"];
                this.columnbinding = base.Columns["binding"];
                this.columnbinding_unc = base.Columns["binding_unc"];
                this.columnatomic_mass = base.Columns["atomic_mass"];
                this.columnatomic_mass_unc = base.Columns["atomic_mass_unc"];
                this.columnbeta_decay_en = base.Columns["beta_decay_en"];
                this.columnbeta_decay_en_unc = base.Columns["beta_decay_en_unc"];
                this.columnqa = base.Columns["qa"];
                this.columnqa_unc = base.Columns["qa_unc"];
                this.columnqec = base.Columns["qec"];
                this.columnqec_unc = base.Columns["qec_unc"];
                this.columnsn = base.Columns["sn"];
                this.columnsn_unc = base.Columns["sn_unc"];
                this.columnsp = base.Columns["sp"];
                this.columnsp_unc = base.Columns["sp_unc"];
                this.columnradii_val = base.Columns["radii_val"];
                this.columnradii_del = base.Columns["radii_del"];
                this.columnel_mom = base.Columns["el_mom"];
                this.columnmag_mom = base.Columns["mag_mom"];
                this.columnabundance = base.Columns["abundance"];
                this.columnabundance_unc = base.Columns["abundance_unc"];
                this.columnther_capture = base.Columns["ther_capture"];
                this.columnther_capture_unc = base.Columns["ther_capture_unc"];
                this.columnwestcott_g = base.Columns["westcott_g"];
                this.columnresonance_integ = base.Columns["resonance_integ"];
                this.columnresonance_integ_unc = base.Columns["resonance_integ_unc"];
                this.columntentative = base.Columns["tentative"];
                this.columnpk = base.Columns["pk"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnnucid = new global::System.Data.DataColumn("nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnucid);
                this.columnz = new global::System.Data.DataColumn("z", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnz);
                this.columnn = new global::System.Data.DataColumn("n", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnn);
                this.columnsymbol = new global::System.Data.DataColumn("symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsymbol);
                this.columnl_seqno = new global::System.Data.DataColumn("l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnl_seqno);
                this.columnjp = new global::System.Data.DataColumn("jp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjp);
                this.columnhalf_life = new global::System.Data.DataColumn("half_life", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhalf_life);
                this.columnhalf_life_unc = new global::System.Data.DataColumn("half_life_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhalf_life_unc);
                this.columnhalf_life_unit = new global::System.Data.DataColumn("half_life_unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhalf_life_unit);
                this.columnhalf_life_sec = new global::System.Data.DataColumn("half_life_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhalf_life_sec);
                this.columnmass_excess = new global::System.Data.DataColumn("mass_excess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmass_excess);
                this.columnmass_excess_unc = new global::System.Data.DataColumn("mass_excess_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmass_excess_unc);
                this.columnbinding = new global::System.Data.DataColumn("binding", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbinding);
                this.columnbinding_unc = new global::System.Data.DataColumn("binding_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbinding_unc);
                this.columnatomic_mass = new global::System.Data.DataColumn("atomic_mass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatomic_mass);
                this.columnatomic_mass_unc = new global::System.Data.DataColumn("atomic_mass_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatomic_mass_unc);
                this.columnbeta_decay_en = new global::System.Data.DataColumn("beta_decay_en", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbeta_decay_en);
                this.columnbeta_decay_en_unc = new global::System.Data.DataColumn("beta_decay_en_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbeta_decay_en_unc);
                this.columnqa = new global::System.Data.DataColumn("qa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqa);
                this.columnqa_unc = new global::System.Data.DataColumn("qa_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqa_unc);
                this.columnqec = new global::System.Data.DataColumn("qec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqec);
                this.columnqec_unc = new global::System.Data.DataColumn("qec_unc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqec_unc);
                this.columnsn = new global::System.Data.DataColumn("sn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsn);
                this.columnsn_unc = new global::System.Data.DataColumn("sn_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsn_unc);
                this.columnsp = new global::System.Data.DataColumn("sp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsp);
                this.columnsp_unc = new global::System.Data.DataColumn("sp_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsp_unc);
                this.columnradii_val = new global::System.Data.DataColumn("radii_val", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnradii_val);
                this.columnradii_del = new global::System.Data.DataColumn("radii_del", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnradii_del);
                this.columnel_mom = new global::System.Data.DataColumn("el_mom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnel_mom);
                this.columnmag_mom = new global::System.Data.DataColumn("mag_mom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmag_mom);
                this.columnabundance = new global::System.Data.DataColumn("abundance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabundance);
                this.columnabundance_unc = new global::System.Data.DataColumn("abundance_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabundance_unc);
                this.columnther_capture = new global::System.Data.DataColumn("ther_capture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnther_capture);
                this.columnther_capture_unc = new global::System.Data.DataColumn("ther_capture_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnther_capture_unc);
                this.columnwestcott_g = new global::System.Data.DataColumn("westcott_g", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwestcott_g);
                this.columnresonance_integ = new global::System.Data.DataColumn("resonance_integ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresonance_integ);
                this.columnresonance_integ_unc = new global::System.Data.DataColumn("resonance_integ_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresonance_integ_unc);
                this.columntentative = new global::System.Data.DataColumn("tentative", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntentative);
                this.columnpk = new global::System.Data.DataColumn("pk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpk);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpk}, true));
                this.columnpk.AllowDBNull = false;
                this.columnpk.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRow NewnuclidesRow() {
                return ((nuclidesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nuclidesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(nuclidesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nuclidesRowChanged != null)) {
                    this.nuclidesRowChanged(this, new nuclidesRowChangeEvent(((nuclidesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nuclidesRowChanging != null)) {
                    this.nuclidesRowChanging(this, new nuclidesRowChangeEvent(((nuclidesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nuclidesRowDeleted != null)) {
                    this.nuclidesRowDeleted(this, new nuclidesRowChangeEvent(((nuclidesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nuclidesRowDeleting != null)) {
                    this.nuclidesRowDeleting(this, new nuclidesRowChangeEvent(((nuclidesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovenuclidesRow(nuclidesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nuclidesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class thermal_cross_sectDataTable : global::System.Data.TypedTableBase<thermal_cross_sectRow> {
            
            private global::System.Data.DataColumn columnnucid;
            
            private global::System.Data.DataColumn columnz;
            
            private global::System.Data.DataColumn columnn;
            
            private global::System.Data.DataColumn columniso;
            
            private global::System.Data.DataColumn columnl_seqno;
            
            private global::System.Data.DataColumn columnjp;
            
            private global::System.Data.DataColumn columnmaxw_ng;
            
            private global::System.Data.DataColumn columnmaxw_ng_unc;
            
            private global::System.Data.DataColumn columnng;
            
            private global::System.Data.DataColumn columnng_unc;
            
            private global::System.Data.DataColumn columnnel;
            
            private global::System.Data.DataColumn columnnel_unc;
            
            private global::System.Data.DataColumn columnna;
            
            private global::System.Data.DataColumn columnna_unc;
            
            private global::System.Data.DataColumn columnnp;
            
            private global::System.Data.DataColumn columnnp_unc;
            
            private global::System.Data.DataColumn columnnf;
            
            private global::System.Data.DataColumn columnnf_unc;
            
            private global::System.Data.DataColumn columnr;
            
            private global::System.Data.DataColumn columnr_unc;
            
            private global::System.Data.DataColumn columndd0d1;
            
            private global::System.Data.DataColumn columndd0d1_unc;
            
            private global::System.Data.DataColumn columnic;
            
            private global::System.Data.DataColumn columnic_unc;
            
            private global::System.Data.DataColumn columnia;
            
            private global::System.Data.DataColumn columnia_unc;
            
            private global::System.Data.DataColumn columnip;
            
            private global::System.Data.DataColumn columnip_unc;
            
            private global::System.Data.DataColumn columniff;
            
            private global::System.Data.DataColumn columniff_unc;
            
            private global::System.Data.DataColumn columniabs;
            
            private global::System.Data.DataColumn columniabs_unc;
            
            private global::System.Data.DataColumn columnmacs30;
            
            private global::System.Data.DataColumn columnmacs30_unc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectDataTable() {
                this.TableName = "thermal_cross_sect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal thermal_cross_sectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected thermal_cross_sectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nucidColumn {
                get {
                    return this.columnnucid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn zColumn {
                get {
                    return this.columnz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nColumn {
                get {
                    return this.columnn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn isoColumn {
                get {
                    return this.columniso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn l_seqnoColumn {
                get {
                    return this.columnl_seqno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn jpColumn {
                get {
                    return this.columnjp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn maxw_ngColumn {
                get {
                    return this.columnmaxw_ng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn maxw_ng_uncColumn {
                get {
                    return this.columnmaxw_ng_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ngColumn {
                get {
                    return this.columnng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ng_uncColumn {
                get {
                    return this.columnng_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nelColumn {
                get {
                    return this.columnnel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nel_uncColumn {
                get {
                    return this.columnnel_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn naColumn {
                get {
                    return this.columnna;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn na_uncColumn {
                get {
                    return this.columnna_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn npColumn {
                get {
                    return this.columnnp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn np_uncColumn {
                get {
                    return this.columnnp_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nfColumn {
                get {
                    return this.columnnf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nf_uncColumn {
                get {
                    return this.columnnf_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn rColumn {
                get {
                    return this.columnr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn r_uncColumn {
                get {
                    return this.columnr_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dd0d1Column {
                get {
                    return this.columndd0d1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dd0d1_uncColumn {
                get {
                    return this.columndd0d1_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn icColumn {
                get {
                    return this.columnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ic_uncColumn {
                get {
                    return this.columnic_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn iaColumn {
                get {
                    return this.columnia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ia_uncColumn {
                get {
                    return this.columnia_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ipColumn {
                get {
                    return this.columnip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ip_uncColumn {
                get {
                    return this.columnip_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn iffColumn {
                get {
                    return this.columniff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn iff_uncColumn {
                get {
                    return this.columniff_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn iabsColumn {
                get {
                    return this.columniabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn iabs_uncColumn {
                get {
                    return this.columniabs_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn macs30Column {
                get {
                    return this.columnmacs30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn macs30_uncColumn {
                get {
                    return this.columnmacs30_unc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRow this[int index] {
                get {
                    return ((thermal_cross_sectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event thermal_cross_sectRowChangeEventHandler thermal_cross_sectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event thermal_cross_sectRowChangeEventHandler thermal_cross_sectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event thermal_cross_sectRowChangeEventHandler thermal_cross_sectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event thermal_cross_sectRowChangeEventHandler thermal_cross_sectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addthermal_cross_sectRow(thermal_cross_sectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRow Addthermal_cross_sectRow(
                        string nucid, 
                        long z, 
                        long n, 
                        long iso, 
                        long l_seqno, 
                        string jp, 
                        string maxw_ng, 
                        string maxw_ng_unc, 
                        string ng, 
                        string ng_unc, 
                        string nel, 
                        string nel_unc, 
                        string na, 
                        string na_unc, 
                        string np, 
                        string np_unc, 
                        string nf, 
                        string nf_unc, 
                        string r, 
                        string r_unc, 
                        string dd0d1, 
                        string dd0d1_unc, 
                        string ic, 
                        string ic_unc, 
                        string ia, 
                        string ia_unc, 
                        string ip, 
                        string ip_unc, 
                        string iff, 
                        string iff_unc, 
                        string iabs, 
                        string iabs_unc, 
                        string macs30, 
                        string macs30_unc) {
                thermal_cross_sectRow rowthermal_cross_sectRow = ((thermal_cross_sectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nucid,
                        z,
                        n,
                        iso,
                        l_seqno,
                        jp,
                        maxw_ng,
                        maxw_ng_unc,
                        ng,
                        ng_unc,
                        nel,
                        nel_unc,
                        na,
                        na_unc,
                        np,
                        np_unc,
                        nf,
                        nf_unc,
                        r,
                        r_unc,
                        dd0d1,
                        dd0d1_unc,
                        ic,
                        ic_unc,
                        ia,
                        ia_unc,
                        ip,
                        ip_unc,
                        iff,
                        iff_unc,
                        iabs,
                        iabs_unc,
                        macs30,
                        macs30_unc};
                rowthermal_cross_sectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowthermal_cross_sectRow);
                return rowthermal_cross_sectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRow FindBynucidiso(string nucid, long iso) {
                return ((thermal_cross_sectRow)(this.Rows.Find(new object[] {
                            nucid,
                            iso})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                thermal_cross_sectDataTable cln = ((thermal_cross_sectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new thermal_cross_sectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnnucid = base.Columns["nucid"];
                this.columnz = base.Columns["z"];
                this.columnn = base.Columns["n"];
                this.columniso = base.Columns["iso"];
                this.columnl_seqno = base.Columns["l_seqno"];
                this.columnjp = base.Columns["jp"];
                this.columnmaxw_ng = base.Columns["maxw_ng"];
                this.columnmaxw_ng_unc = base.Columns["maxw_ng_unc"];
                this.columnng = base.Columns["ng"];
                this.columnng_unc = base.Columns["ng_unc"];
                this.columnnel = base.Columns["nel"];
                this.columnnel_unc = base.Columns["nel_unc"];
                this.columnna = base.Columns["na"];
                this.columnna_unc = base.Columns["na_unc"];
                this.columnnp = base.Columns["np"];
                this.columnnp_unc = base.Columns["np_unc"];
                this.columnnf = base.Columns["nf"];
                this.columnnf_unc = base.Columns["nf_unc"];
                this.columnr = base.Columns["r"];
                this.columnr_unc = base.Columns["r_unc"];
                this.columndd0d1 = base.Columns["dd0d1"];
                this.columndd0d1_unc = base.Columns["dd0d1_unc"];
                this.columnic = base.Columns["ic"];
                this.columnic_unc = base.Columns["ic_unc"];
                this.columnia = base.Columns["ia"];
                this.columnia_unc = base.Columns["ia_unc"];
                this.columnip = base.Columns["ip"];
                this.columnip_unc = base.Columns["ip_unc"];
                this.columniff = base.Columns["iff"];
                this.columniff_unc = base.Columns["iff_unc"];
                this.columniabs = base.Columns["iabs"];
                this.columniabs_unc = base.Columns["iabs_unc"];
                this.columnmacs30 = base.Columns["macs30"];
                this.columnmacs30_unc = base.Columns["macs30_unc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnnucid = new global::System.Data.DataColumn("nucid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnucid);
                this.columnz = new global::System.Data.DataColumn("z", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnz);
                this.columnn = new global::System.Data.DataColumn("n", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnn);
                this.columniso = new global::System.Data.DataColumn("iso", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniso);
                this.columnl_seqno = new global::System.Data.DataColumn("l_seqno", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnl_seqno);
                this.columnjp = new global::System.Data.DataColumn("jp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjp);
                this.columnmaxw_ng = new global::System.Data.DataColumn("maxw_ng", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxw_ng);
                this.columnmaxw_ng_unc = new global::System.Data.DataColumn("maxw_ng_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxw_ng_unc);
                this.columnng = new global::System.Data.DataColumn("ng", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnng);
                this.columnng_unc = new global::System.Data.DataColumn("ng_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnng_unc);
                this.columnnel = new global::System.Data.DataColumn("nel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnel);
                this.columnnel_unc = new global::System.Data.DataColumn("nel_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnel_unc);
                this.columnna = new global::System.Data.DataColumn("na", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnna);
                this.columnna_unc = new global::System.Data.DataColumn("na_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnna_unc);
                this.columnnp = new global::System.Data.DataColumn("np", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnp);
                this.columnnp_unc = new global::System.Data.DataColumn("np_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnp_unc);
                this.columnnf = new global::System.Data.DataColumn("nf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnf);
                this.columnnf_unc = new global::System.Data.DataColumn("nf_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnf_unc);
                this.columnr = new global::System.Data.DataColumn("r", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnr);
                this.columnr_unc = new global::System.Data.DataColumn("r_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnr_unc);
                this.columndd0d1 = new global::System.Data.DataColumn("dd0d1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndd0d1);
                this.columndd0d1_unc = new global::System.Data.DataColumn("dd0d1_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndd0d1_unc);
                this.columnic = new global::System.Data.DataColumn("ic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnic);
                this.columnic_unc = new global::System.Data.DataColumn("ic_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnic_unc);
                this.columnia = new global::System.Data.DataColumn("ia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnia);
                this.columnia_unc = new global::System.Data.DataColumn("ia_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnia_unc);
                this.columnip = new global::System.Data.DataColumn("ip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnip);
                this.columnip_unc = new global::System.Data.DataColumn("ip_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnip_unc);
                this.columniff = new global::System.Data.DataColumn("iff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniff);
                this.columniff_unc = new global::System.Data.DataColumn("iff_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniff_unc);
                this.columniabs = new global::System.Data.DataColumn("iabs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniabs);
                this.columniabs_unc = new global::System.Data.DataColumn("iabs_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniabs_unc);
                this.columnmacs30 = new global::System.Data.DataColumn("macs30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmacs30);
                this.columnmacs30_unc = new global::System.Data.DataColumn("macs30_unc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmacs30_unc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnucid,
                                this.columniso}, true));
                this.columnnucid.AllowDBNull = false;
                this.columniso.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRow Newthermal_cross_sectRow() {
                return ((thermal_cross_sectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new thermal_cross_sectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(thermal_cross_sectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.thermal_cross_sectRowChanged != null)) {
                    this.thermal_cross_sectRowChanged(this, new thermal_cross_sectRowChangeEvent(((thermal_cross_sectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.thermal_cross_sectRowChanging != null)) {
                    this.thermal_cross_sectRowChanging(this, new thermal_cross_sectRowChangeEvent(((thermal_cross_sectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.thermal_cross_sectRowDeleted != null)) {
                    this.thermal_cross_sectRowDeleted(this, new thermal_cross_sectRowChangeEvent(((thermal_cross_sectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.thermal_cross_sectRowDeleting != null)) {
                    this.thermal_cross_sectRowDeleting(this, new thermal_cross_sectRowChangeEvent(((thermal_cross_sectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removethermal_cross_sectRow(thermal_cross_sectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NucBaseDataSet ds = new NucBaseDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "thermal_cross_sectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class cumulative_fissionRow : global::System.Data.DataRow {
            
            private cumulative_fissionDataTable tablecumulative_fission;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal cumulative_fissionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecumulative_fission = ((cumulative_fissionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string parent_nucid {
                get {
                    return ((string)(this[this.tablecumulative_fission.parent_nucidColumn]));
                }
                set {
                    this[this.tablecumulative_fission.parent_nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nucid {
                get {
                    return ((string)(this[this.tablecumulative_fission.nucidColumn]));
                }
                set {
                    this[this.tablecumulative_fission.nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long l_seqno {
                get {
                    return ((long)(this[this.tablecumulative_fission.l_seqnoColumn]));
                }
                set {
                    this[this.tablecumulative_fission.l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ther_yield_num {
                get {
                    try {
                        return ((string)(this[this.tablecumulative_fission.ther_yield_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ther_yield_num\' in table \'cumulative_fission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecumulative_fission.ther_yield_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ther_yield_unc {
                get {
                    try {
                        return ((string)(this[this.tablecumulative_fission.ther_yield_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ther_yield_unc\' in table \'cumulative_fission\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecumulative_fission.ther_yield_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isther_yield_numNull() {
                return this.IsNull(this.tablecumulative_fission.ther_yield_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setther_yield_numNull() {
                this[this.tablecumulative_fission.ther_yield_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isther_yield_uncNull() {
                return this.IsNull(this.tablecumulative_fission.ther_yield_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setther_yield_uncNull() {
                this[this.tablecumulative_fission.ther_yield_uncColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class decay_chainRow : global::System.Data.DataRow {
            
            private decay_chainDataTable tabledecay_chain;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal decay_chainRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledecay_chain = ((decay_chainDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nucid {
                get {
                    return ((string)(this[this.tabledecay_chain.nucidColumn]));
                }
                set {
                    this[this.tabledecay_chain.nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long l_seqno {
                get {
                    return ((long)(this[this.tabledecay_chain.l_seqnoColumn]));
                }
                set {
                    this[this.tabledecay_chain.l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string daughter_nucid {
                get {
                    return ((string)(this[this.tabledecay_chain.daughter_nucidColumn]));
                }
                set {
                    this[this.tabledecay_chain.daughter_nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string dec_type {
                get {
                    return ((string)(this[this.tabledecay_chain.dec_typeColumn]));
                }
                set {
                    this[this.tabledecay_chain.dec_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string perc {
                get {
                    try {
                        return ((string)(this[this.tabledecay_chain.percColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'perc\' in table \'decay_chain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_chain.percColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspercNull() {
                return this.IsNull(this.tabledecay_chain.percColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpercNull() {
                this[this.tabledecay_chain.percColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class decay_radiationsRow : global::System.Data.DataRow {
            
            private decay_radiationsDataTable tabledecay_radiations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal decay_radiationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledecay_radiations = ((decay_radiationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long parent_l_seqno {
                get {
                    try {
                        return ((long)(this[this.tabledecay_radiations.parent_l_seqnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parent_l_seqno\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.parent_l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string parent_nucid {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.parent_nucidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parent_nucid\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.parent_nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string dec_type {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.dec_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dec_type\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.dec_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string type_a {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.type_aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_a\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.type_aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string type_c {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.type_cColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_c\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.type_cColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string logft {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.logftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logft\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.logftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string logft_unc {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.logft_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logft_unc\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.logft_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double logft_num {
                get {
                    try {
                        return ((double)(this[this.tabledecay_radiations.logft_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logft_num\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.logft_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string intensity {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.intensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intensity\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.intensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string intensity_unc {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.intensity_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intensity_unc\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.intensity_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double intensity_num {
                get {
                    try {
                        return ((double)(this[this.tabledecay_radiations.intensity_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intensity_num\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.intensity_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double energy_num {
                get {
                    try {
                        return ((double)(this[this.tabledecay_radiations.energy_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'energy_num\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.energy_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string energy {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.energyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'energy\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.energyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string energy_unc {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.energy_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'energy_unc\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.energy_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string endpoint {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.endpointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'endpoint\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.endpointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string endpoint_unc {
                get {
                    try {
                        return ((string)(this[this.tabledecay_radiations.endpoint_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'endpoint_unc\' in table \'decay_radiations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledecay_radiations.endpoint_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long dr_pk {
                get {
                    return ((long)(this[this.tabledecay_radiations.dr_pkColumn]));
                }
                set {
                    this[this.tabledecay_radiations.dr_pkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isparent_l_seqnoNull() {
                return this.IsNull(this.tabledecay_radiations.parent_l_seqnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setparent_l_seqnoNull() {
                this[this.tabledecay_radiations.parent_l_seqnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isparent_nucidNull() {
                return this.IsNull(this.tabledecay_radiations.parent_nucidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setparent_nucidNull() {
                this[this.tabledecay_radiations.parent_nucidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isdec_typeNull() {
                return this.IsNull(this.tabledecay_radiations.dec_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setdec_typeNull() {
                this[this.tabledecay_radiations.dec_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Istype_aNull() {
                return this.IsNull(this.tabledecay_radiations.type_aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Settype_aNull() {
                this[this.tabledecay_radiations.type_aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Istype_cNull() {
                return this.IsNull(this.tabledecay_radiations.type_cColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Settype_cNull() {
                this[this.tabledecay_radiations.type_cColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IslogftNull() {
                return this.IsNull(this.tabledecay_radiations.logftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetlogftNull() {
                this[this.tabledecay_radiations.logftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Islogft_uncNull() {
                return this.IsNull(this.tabledecay_radiations.logft_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setlogft_uncNull() {
                this[this.tabledecay_radiations.logft_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Islogft_numNull() {
                return this.IsNull(this.tabledecay_radiations.logft_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setlogft_numNull() {
                this[this.tabledecay_radiations.logft_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsintensityNull() {
                return this.IsNull(this.tabledecay_radiations.intensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetintensityNull() {
                this[this.tabledecay_radiations.intensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isintensity_uncNull() {
                return this.IsNull(this.tabledecay_radiations.intensity_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setintensity_uncNull() {
                this[this.tabledecay_radiations.intensity_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isintensity_numNull() {
                return this.IsNull(this.tabledecay_radiations.intensity_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setintensity_numNull() {
                this[this.tabledecay_radiations.intensity_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isenergy_numNull() {
                return this.IsNull(this.tabledecay_radiations.energy_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setenergy_numNull() {
                this[this.tabledecay_radiations.energy_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsenergyNull() {
                return this.IsNull(this.tabledecay_radiations.energyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetenergyNull() {
                this[this.tabledecay_radiations.energyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isenergy_uncNull() {
                return this.IsNull(this.tabledecay_radiations.energy_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setenergy_uncNull() {
                this[this.tabledecay_radiations.energy_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsendpointNull() {
                return this.IsNull(this.tabledecay_radiations.endpointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetendpointNull() {
                this[this.tabledecay_radiations.endpointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isendpoint_uncNull() {
                return this.IsNull(this.tabledecay_radiations.endpoint_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setendpoint_uncNull() {
                this[this.tabledecay_radiations.endpoint_uncColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class l_decaysRow : global::System.Data.DataRow {
            
            private l_decaysDataTable tablel_decays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal l_decaysRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablel_decays = ((l_decaysDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nucid {
                get {
                    return ((string)(this[this.tablel_decays.nucidColumn]));
                }
                set {
                    this[this.tablel_decays.nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long l_seqno {
                get {
                    return ((long)(this[this.tablel_decays.l_seqnoColumn]));
                }
                set {
                    this[this.tablel_decays.l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string perc {
                get {
                    try {
                        return ((string)(this[this.tablel_decays.percColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'perc\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.percColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double perc_num {
                get {
                    try {
                        return ((double)(this[this.tablel_decays.perc_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'perc_num\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.perc_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string unc {
                get {
                    try {
                        return ((string)(this[this.tablel_decays.uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unc\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string perc_oper {
                get {
                    try {
                        return ((string)(this[this.tablel_decays.perc_operColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'perc_oper\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.perc_operColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long dec_type {
                get {
                    return ((long)(this[this.tablel_decays.dec_typeColumn]));
                }
                set {
                    this[this.tablel_decays.dec_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string daughter_nucid {
                get {
                    try {
                        return ((string)(this[this.tablel_decays.daughter_nucidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daughter_nucid\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.daughter_nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string decay_label {
                get {
                    try {
                        return ((string)(this[this.tablel_decays.decay_labelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'decay_label\' in table \'l_decays\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablel_decays.decay_labelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspercNull() {
                return this.IsNull(this.tablel_decays.percColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpercNull() {
                this[this.tablel_decays.percColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isperc_numNull() {
                return this.IsNull(this.tablel_decays.perc_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setperc_numNull() {
                this[this.tablel_decays.perc_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsuncNull() {
                return this.IsNull(this.tablel_decays.uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetuncNull() {
                this[this.tablel_decays.uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isperc_operNull() {
                return this.IsNull(this.tablel_decays.perc_operColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setperc_operNull() {
                this[this.tablel_decays.perc_operColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isdaughter_nucidNull() {
                return this.IsNull(this.tablel_decays.daughter_nucidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setdaughter_nucidNull() {
                this[this.tablel_decays.daughter_nucidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isdecay_labelNull() {
                return this.IsNull(this.tablel_decays.decay_labelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setdecay_labelNull() {
                this[this.tablel_decays.decay_labelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class nuclidesRow : global::System.Data.DataRow {
            
            private nuclidesDataTable tablenuclides;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal nuclidesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenuclides = ((nuclidesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nucid {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.nucidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nucid\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long z {
                get {
                    try {
                        return ((long)(this[this.tablenuclides.zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'z\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long n {
                get {
                    try {
                        return ((long)(this[this.tablenuclides.nColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'n\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.nColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string symbol {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.symbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'symbol\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.symbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long l_seqno {
                get {
                    try {
                        return ((long)(this[this.tablenuclides.l_seqnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'l_seqno\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string jp {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.jpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jp\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.jpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string half_life {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.half_lifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'half_life\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.half_lifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string half_life_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.half_life_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'half_life_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.half_life_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string half_life_unit {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.half_life_unitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'half_life_unit\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.half_life_unitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double half_life_sec {
                get {
                    try {
                        return ((double)(this[this.tablenuclides.half_life_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'half_life_sec\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.half_life_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string mass_excess {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.mass_excessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mass_excess\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.mass_excessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string mass_excess_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.mass_excess_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mass_excess_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.mass_excess_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string binding {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.bindingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'binding\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.bindingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string binding_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.binding_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'binding_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.binding_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string atomic_mass {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.atomic_massColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'atomic_mass\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.atomic_massColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string atomic_mass_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.atomic_mass_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'atomic_mass_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.atomic_mass_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string beta_decay_en {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.beta_decay_enColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'beta_decay_en\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.beta_decay_enColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string beta_decay_en_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.beta_decay_en_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'beta_decay_en_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.beta_decay_en_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string qa {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.qaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qa\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.qaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string qa_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.qa_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qa_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.qa_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string qec {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.qecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qec\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.qecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long qec_unc {
                get {
                    try {
                        return ((long)(this[this.tablenuclides.qec_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qec_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.qec_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sn {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.snColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sn\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.snColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sn_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.sn_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sn_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.sn_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sp {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.spColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sp\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.spColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sp_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.sp_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sp_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.sp_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string radii_val {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.radii_valColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'radii_val\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.radii_valColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string radii_del {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.radii_delColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'radii_del\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.radii_delColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string el_mom {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.el_momColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'el_mom\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.el_momColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string mag_mom {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.mag_momColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mag_mom\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.mag_momColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string abundance {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.abundanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abundance\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.abundanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string abundance_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.abundance_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abundance_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.abundance_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ther_capture {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.ther_captureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ther_capture\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.ther_captureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ther_capture_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.ther_capture_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ther_capture_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.ther_capture_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string westcott_g {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.westcott_gColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'westcott_g\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.westcott_gColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string resonance_integ {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.resonance_integColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'resonance_integ\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.resonance_integColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string resonance_integ_unc {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.resonance_integ_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'resonance_integ_unc\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.resonance_integ_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tentative {
                get {
                    try {
                        return ((string)(this[this.tablenuclides.tentativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tentative\' in table \'nuclides\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenuclides.tentativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string pk {
                get {
                    return ((string)(this[this.tablenuclides.pkColumn]));
                }
                set {
                    this[this.tablenuclides.pkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnucidNull() {
                return this.IsNull(this.tablenuclides.nucidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnucidNull() {
                this[this.tablenuclides.nucidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IszNull() {
                return this.IsNull(this.tablenuclides.zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetzNull() {
                this[this.tablenuclides.zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnNull() {
                return this.IsNull(this.tablenuclides.nColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnNull() {
                this[this.tablenuclides.nColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IssymbolNull() {
                return this.IsNull(this.tablenuclides.symbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetsymbolNull() {
                this[this.tablenuclides.symbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isl_seqnoNull() {
                return this.IsNull(this.tablenuclides.l_seqnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setl_seqnoNull() {
                this[this.tablenuclides.l_seqnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsjpNull() {
                return this.IsNull(this.tablenuclides.jpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetjpNull() {
                this[this.tablenuclides.jpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishalf_lifeNull() {
                return this.IsNull(this.tablenuclides.half_lifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethalf_lifeNull() {
                this[this.tablenuclides.half_lifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishalf_life_uncNull() {
                return this.IsNull(this.tablenuclides.half_life_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethalf_life_uncNull() {
                this[this.tablenuclides.half_life_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishalf_life_unitNull() {
                return this.IsNull(this.tablenuclides.half_life_unitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethalf_life_unitNull() {
                this[this.tablenuclides.half_life_unitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishalf_life_secNull() {
                return this.IsNull(this.tablenuclides.half_life_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethalf_life_secNull() {
                this[this.tablenuclides.half_life_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismass_excessNull() {
                return this.IsNull(this.tablenuclides.mass_excessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmass_excessNull() {
                this[this.tablenuclides.mass_excessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismass_excess_uncNull() {
                return this.IsNull(this.tablenuclides.mass_excess_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmass_excess_uncNull() {
                this[this.tablenuclides.mass_excess_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsbindingNull() {
                return this.IsNull(this.tablenuclides.bindingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetbindingNull() {
                this[this.tablenuclides.bindingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isbinding_uncNull() {
                return this.IsNull(this.tablenuclides.binding_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setbinding_uncNull() {
                this[this.tablenuclides.binding_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isatomic_massNull() {
                return this.IsNull(this.tablenuclides.atomic_massColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setatomic_massNull() {
                this[this.tablenuclides.atomic_massColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isatomic_mass_uncNull() {
                return this.IsNull(this.tablenuclides.atomic_mass_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setatomic_mass_uncNull() {
                this[this.tablenuclides.atomic_mass_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isbeta_decay_enNull() {
                return this.IsNull(this.tablenuclides.beta_decay_enColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setbeta_decay_enNull() {
                this[this.tablenuclides.beta_decay_enColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isbeta_decay_en_uncNull() {
                return this.IsNull(this.tablenuclides.beta_decay_en_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setbeta_decay_en_uncNull() {
                this[this.tablenuclides.beta_decay_en_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsqaNull() {
                return this.IsNull(this.tablenuclides.qaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetqaNull() {
                this[this.tablenuclides.qaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isqa_uncNull() {
                return this.IsNull(this.tablenuclides.qa_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setqa_uncNull() {
                this[this.tablenuclides.qa_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsqecNull() {
                return this.IsNull(this.tablenuclides.qecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetqecNull() {
                this[this.tablenuclides.qecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isqec_uncNull() {
                return this.IsNull(this.tablenuclides.qec_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setqec_uncNull() {
                this[this.tablenuclides.qec_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IssnNull() {
                return this.IsNull(this.tablenuclides.snColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetsnNull() {
                this[this.tablenuclides.snColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Issn_uncNull() {
                return this.IsNull(this.tablenuclides.sn_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setsn_uncNull() {
                this[this.tablenuclides.sn_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsspNull() {
                return this.IsNull(this.tablenuclides.spColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetspNull() {
                this[this.tablenuclides.spColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Issp_uncNull() {
                return this.IsNull(this.tablenuclides.sp_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setsp_uncNull() {
                this[this.tablenuclides.sp_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isradii_valNull() {
                return this.IsNull(this.tablenuclides.radii_valColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setradii_valNull() {
                this[this.tablenuclides.radii_valColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isradii_delNull() {
                return this.IsNull(this.tablenuclides.radii_delColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setradii_delNull() {
                this[this.tablenuclides.radii_delColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isel_momNull() {
                return this.IsNull(this.tablenuclides.el_momColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setel_momNull() {
                this[this.tablenuclides.el_momColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismag_momNull() {
                return this.IsNull(this.tablenuclides.mag_momColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmag_momNull() {
                this[this.tablenuclides.mag_momColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsabundanceNull() {
                return this.IsNull(this.tablenuclides.abundanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetabundanceNull() {
                this[this.tablenuclides.abundanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isabundance_uncNull() {
                return this.IsNull(this.tablenuclides.abundance_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setabundance_uncNull() {
                this[this.tablenuclides.abundance_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isther_captureNull() {
                return this.IsNull(this.tablenuclides.ther_captureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setther_captureNull() {
                this[this.tablenuclides.ther_captureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isther_capture_uncNull() {
                return this.IsNull(this.tablenuclides.ther_capture_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setther_capture_uncNull() {
                this[this.tablenuclides.ther_capture_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iswestcott_gNull() {
                return this.IsNull(this.tablenuclides.westcott_gColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setwestcott_gNull() {
                this[this.tablenuclides.westcott_gColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isresonance_integNull() {
                return this.IsNull(this.tablenuclides.resonance_integColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setresonance_integNull() {
                this[this.tablenuclides.resonance_integColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isresonance_integ_uncNull() {
                return this.IsNull(this.tablenuclides.resonance_integ_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setresonance_integ_uncNull() {
                this[this.tablenuclides.resonance_integ_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IstentativeNull() {
                return this.IsNull(this.tablenuclides.tentativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SettentativeNull() {
                this[this.tablenuclides.tentativeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class thermal_cross_sectRow : global::System.Data.DataRow {
            
            private thermal_cross_sectDataTable tablethermal_cross_sect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal thermal_cross_sectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablethermal_cross_sect = ((thermal_cross_sectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nucid {
                get {
                    return ((string)(this[this.tablethermal_cross_sect.nucidColumn]));
                }
                set {
                    this[this.tablethermal_cross_sect.nucidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long z {
                get {
                    try {
                        return ((long)(this[this.tablethermal_cross_sect.zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'z\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long n {
                get {
                    try {
                        return ((long)(this[this.tablethermal_cross_sect.nColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'n\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.nColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long iso {
                get {
                    return ((long)(this[this.tablethermal_cross_sect.isoColumn]));
                }
                set {
                    this[this.tablethermal_cross_sect.isoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long l_seqno {
                get {
                    try {
                        return ((long)(this[this.tablethermal_cross_sect.l_seqnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'l_seqno\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.l_seqnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string jp {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.jpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jp\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.jpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string maxw_ng {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.maxw_ngColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxw_ng\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.maxw_ngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string maxw_ng_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.maxw_ng_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxw_ng_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.maxw_ng_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ng {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ngColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ng\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ngColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ng_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ng_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ng_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ng_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nel {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.nelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nel\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.nelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nel_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.nel_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nel_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.nel_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string na {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.naColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'na\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.naColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string na_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.na_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'na_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.na_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string np {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.npColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'np\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.npColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string np_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.np_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'np_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.np_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nf {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.nfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nf\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.nfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nf_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.nf_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nf_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.nf_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string r {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.rColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'r\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.rColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string r_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.r_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'r_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.r_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string dd0d1 {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.dd0d1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dd0d1\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.dd0d1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string dd0d1_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.dd0d1_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dd0d1_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.dd0d1_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ic {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.icColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ic\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.icColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ic_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ic_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ic_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ic_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ia {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.iaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ia\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.iaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ia_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ia_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ia_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ia_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ip {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ip\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ip_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.ip_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ip_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.ip_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string iff {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.iffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iff\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.iffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string iff_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.iff_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iff_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.iff_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string iabs {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.iabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iabs\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.iabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string iabs_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.iabs_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iabs_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.iabs_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string macs30 {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.macs30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'macs30\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.macs30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string macs30_unc {
                get {
                    try {
                        return ((string)(this[this.tablethermal_cross_sect.macs30_uncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'macs30_unc\' in table \'thermal_cross_sect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablethermal_cross_sect.macs30_uncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IszNull() {
                return this.IsNull(this.tablethermal_cross_sect.zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetzNull() {
                this[this.tablethermal_cross_sect.zColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnNull() {
                return this.IsNull(this.tablethermal_cross_sect.nColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnNull() {
                this[this.tablethermal_cross_sect.nColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isl_seqnoNull() {
                return this.IsNull(this.tablethermal_cross_sect.l_seqnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setl_seqnoNull() {
                this[this.tablethermal_cross_sect.l_seqnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsjpNull() {
                return this.IsNull(this.tablethermal_cross_sect.jpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetjpNull() {
                this[this.tablethermal_cross_sect.jpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismaxw_ngNull() {
                return this.IsNull(this.tablethermal_cross_sect.maxw_ngColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmaxw_ngNull() {
                this[this.tablethermal_cross_sect.maxw_ngColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismaxw_ng_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.maxw_ng_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmaxw_ng_uncNull() {
                this[this.tablethermal_cross_sect.maxw_ng_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsngNull() {
                return this.IsNull(this.tablethermal_cross_sect.ngColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetngNull() {
                this[this.tablethermal_cross_sect.ngColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isng_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.ng_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setng_uncNull() {
                this[this.tablethermal_cross_sect.ng_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnelNull() {
                return this.IsNull(this.tablethermal_cross_sect.nelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnelNull() {
                this[this.tablethermal_cross_sect.nelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnel_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.nel_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnel_uncNull() {
                this[this.tablethermal_cross_sect.nel_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnaNull() {
                return this.IsNull(this.tablethermal_cross_sect.naColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnaNull() {
                this[this.tablethermal_cross_sect.naColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isna_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.na_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setna_uncNull() {
                this[this.tablethermal_cross_sect.na_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnpNull() {
                return this.IsNull(this.tablethermal_cross_sect.npColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnpNull() {
                this[this.tablethermal_cross_sect.npColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnp_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.np_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnp_uncNull() {
                this[this.tablethermal_cross_sect.np_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsnfNull() {
                return this.IsNull(this.tablethermal_cross_sect.nfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetnfNull() {
                this[this.tablethermal_cross_sect.nfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnf_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.nf_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnf_uncNull() {
                this[this.tablethermal_cross_sect.nf_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsrNull() {
                return this.IsNull(this.tablethermal_cross_sect.rColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetrNull() {
                this[this.tablethermal_cross_sect.rColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isr_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.r_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setr_uncNull() {
                this[this.tablethermal_cross_sect.r_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isdd0d1Null() {
                return this.IsNull(this.tablethermal_cross_sect.dd0d1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setdd0d1Null() {
                this[this.tablethermal_cross_sect.dd0d1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isdd0d1_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.dd0d1_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setdd0d1_uncNull() {
                this[this.tablethermal_cross_sect.dd0d1_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsicNull() {
                return this.IsNull(this.tablethermal_cross_sect.icColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SeticNull() {
                this[this.tablethermal_cross_sect.icColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isic_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.ic_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setic_uncNull() {
                this[this.tablethermal_cross_sect.ic_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsiaNull() {
                return this.IsNull(this.tablethermal_cross_sect.iaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetiaNull() {
                this[this.tablethermal_cross_sect.iaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isia_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.ia_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setia_uncNull() {
                this[this.tablethermal_cross_sect.ia_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsipNull() {
                return this.IsNull(this.tablethermal_cross_sect.ipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetipNull() {
                this[this.tablethermal_cross_sect.ipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isip_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.ip_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setip_uncNull() {
                this[this.tablethermal_cross_sect.ip_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsiffNull() {
                return this.IsNull(this.tablethermal_cross_sect.iffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetiffNull() {
                this[this.tablethermal_cross_sect.iffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isiff_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.iff_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setiff_uncNull() {
                this[this.tablethermal_cross_sect.iff_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsiabsNull() {
                return this.IsNull(this.tablethermal_cross_sect.iabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetiabsNull() {
                this[this.tablethermal_cross_sect.iabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isiabs_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.iabs_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setiabs_uncNull() {
                this[this.tablethermal_cross_sect.iabs_uncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismacs30Null() {
                return this.IsNull(this.tablethermal_cross_sect.macs30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmacs30Null() {
                this[this.tablethermal_cross_sect.macs30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ismacs30_uncNull() {
                return this.IsNull(this.tablethermal_cross_sect.macs30_uncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setmacs30_uncNull() {
                this[this.tablethermal_cross_sect.macs30_uncColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class cumulative_fissionRowChangeEvent : global::System.EventArgs {
            
            private cumulative_fissionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRowChangeEvent(cumulative_fissionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public cumulative_fissionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class decay_chainRowChangeEvent : global::System.EventArgs {
            
            private decay_chainRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRowChangeEvent(decay_chainRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_chainRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class decay_radiationsRowChangeEvent : global::System.EventArgs {
            
            private decay_radiationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRowChangeEvent(decay_radiationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decay_radiationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class l_decaysRowChangeEvent : global::System.EventArgs {
            
            private l_decaysRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRowChangeEvent(l_decaysRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public l_decaysRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class nuclidesRowChangeEvent : global::System.EventArgs {
            
            private nuclidesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRowChangeEvent(nuclidesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public nuclidesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class thermal_cross_sectRowChangeEvent : global::System.EventArgs {
            
            private thermal_cross_sectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRowChangeEvent(thermal_cross_sectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public thermal_cross_sectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BecquerelMonitor.NucBaseDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class cumulative_fissionTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public cumulative_fissionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "cumulative_fission";
            tableMapping.ColumnMappings.Add("parent_nucid", "parent_nucid");
            tableMapping.ColumnMappings.Add("nucid", "nucid");
            tableMapping.ColumnMappings.Add("l_seqno", "l_seqno");
            tableMapping.ColumnMappings.Add("ther_yield_num", "ther_yield_num");
            tableMapping.ColumnMappings.Add("ther_yield_unc", "ther_yield_unc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""cumulative_fission"" WHERE ((""parent_nucid"" = :Original_parent_nucid) AND (""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND ((:IsNull_ther_yield_num = 1 AND ""ther_yield_num"" IS NULL) OR (""ther_yield_num"" = :Original_ther_yield_num)) AND ((:IsNull_ther_yield_unc = 1 AND ""ther_yield_unc"" IS NULL) OR (""ther_yield_unc"" = :Original_ther_yield_unc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_yield_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_yield_num";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_yield_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_yield_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"cumulative_fission\" (\"parent_nucid\", \"nucid\", \"l_seqno\", \"the" +
                "r_yield_num\", \"ther_yield_unc\") VALUES (:parent_nucid, :nucid, :l_seqno, :ther_y" +
                "ield_num, :ther_yield_unc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_yield_num";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_yield_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""cumulative_fission"" SET ""parent_nucid"" = :parent_nucid, ""nucid"" = :nucid, ""l_seqno"" = :l_seqno, ""ther_yield_num"" = :ther_yield_num, ""ther_yield_unc"" = :ther_yield_unc WHERE ((""parent_nucid"" = :Original_parent_nucid) AND (""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND ((:IsNull_ther_yield_num = 1 AND ""ther_yield_num"" IS NULL) OR (""ther_yield_num"" = :Original_ther_yield_num)) AND ((:IsNull_ther_yield_unc = 1 AND ""ther_yield_unc"" IS NULL) OR (""ther_yield_unc"" = :Original_ther_yield_unc)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_yield_num";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_yield_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_yield_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_yield_num";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_yield_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_yield_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_yield_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT parent_nucid, nucid, l_seqno, ther_yield_num, ther_yield_unc FROM \"main\".c" +
                "umulative_fission";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.cumulative_fissionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.cumulative_fissionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.cumulative_fissionDataTable dataTable = new NucBaseDataSet.cumulative_fissionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.cumulative_fissionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "cumulative_fission");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_parent_nucid, string Original_nucid, long Original_l_seqno, string Original_ther_yield_num, string Original_ther_yield_unc) {
            if ((Original_parent_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_parent_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_parent_nucid));
            }
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nucid));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_l_seqno));
            if ((Original_ther_yield_num == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ther_yield_num));
            }
            if ((Original_ther_yield_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ther_yield_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string parent_nucid, string nucid, long l_seqno, string ther_yield_num, string ther_yield_unc) {
            if ((parent_nucid == null)) {
                throw new global::System.ArgumentNullException("parent_nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(parent_nucid));
            }
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nucid));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(l_seqno));
            if ((ther_yield_num == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ther_yield_num));
            }
            if ((ther_yield_unc == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ther_yield_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string parent_nucid, string nucid, long l_seqno, string ther_yield_num, string ther_yield_unc, string Original_parent_nucid, string Original_nucid, long Original_l_seqno, string Original_ther_yield_num, string Original_ther_yield_unc) {
            if ((parent_nucid == null)) {
                throw new global::System.ArgumentNullException("parent_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(parent_nucid));
            }
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nucid));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(l_seqno));
            if ((ther_yield_num == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ther_yield_num));
            }
            if ((ther_yield_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ther_yield_unc));
            }
            if ((Original_parent_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_parent_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_parent_nucid));
            }
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_nucid));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_l_seqno));
            if ((Original_ther_yield_num == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ther_yield_num));
            }
            if ((Original_ther_yield_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ther_yield_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ther_yield_num, string ther_yield_unc, string Original_parent_nucid, string Original_nucid, long Original_l_seqno, string Original_ther_yield_num, string Original_ther_yield_unc) {
            return this.Update(Original_parent_nucid, Original_nucid, Original_l_seqno, ther_yield_num, ther_yield_unc, Original_parent_nucid, Original_nucid, Original_l_seqno, Original_ther_yield_num, Original_ther_yield_unc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class decay_chainTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public decay_chainTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "decay_chain";
            tableMapping.ColumnMappings.Add("nucid", "nucid");
            tableMapping.ColumnMappings.Add("l_seqno", "l_seqno");
            tableMapping.ColumnMappings.Add("daughter_nucid", "daughter_nucid");
            tableMapping.ColumnMappings.Add("dec_type", "dec_type");
            tableMapping.ColumnMappings.Add("perc", "perc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""decay_chain"" WHERE ((""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND (""daughter_nucid"" = :Original_daughter_nucid) AND (""dec_type"" = :Original_dec_type) AND ((:IsNull_perc = 1 AND ""perc"" IS NULL) OR (""perc"" = :Original_perc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"decay_chain\" (\"nucid\", \"l_seqno\", \"daughter_nucid\", \"dec_type" +
                "\", \"perc\") VALUES (:nucid, :l_seqno, :daughter_nucid, :dec_type, :perc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""decay_chain"" SET ""nucid"" = :nucid, ""l_seqno"" = :l_seqno, ""daughter_nucid"" = :daughter_nucid, ""dec_type"" = :dec_type, ""perc"" = :perc WHERE ((""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND (""daughter_nucid"" = :Original_daughter_nucid) AND (""dec_type"" = :Original_dec_type) AND ((:IsNull_perc = 1 AND ""perc"" IS NULL) OR (""perc"" = :Original_perc)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT nucid, l_seqno, daughter_nucid, dec_type, perc FROM \"main\".decay_chain";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.decay_chainDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.decay_chainDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.decay_chainDataTable dataTable = new NucBaseDataSet.decay_chainDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.decay_chainDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "decay_chain");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_nucid, long Original_l_seqno, string Original_daughter_nucid, string Original_dec_type, string Original_perc) {
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_nucid));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_l_seqno));
            if ((Original_daughter_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_daughter_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_daughter_nucid));
            }
            if ((Original_dec_type == null)) {
                throw new global::System.ArgumentNullException("Original_dec_type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dec_type));
            }
            if ((Original_perc == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_perc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nucid, long l_seqno, string daughter_nucid, string dec_type, string perc) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nucid));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(l_seqno));
            if ((daughter_nucid == null)) {
                throw new global::System.ArgumentNullException("daughter_nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(daughter_nucid));
            }
            if ((dec_type == null)) {
                throw new global::System.ArgumentNullException("dec_type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dec_type));
            }
            if ((perc == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(perc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nucid, long l_seqno, string daughter_nucid, string dec_type, string perc, string Original_nucid, long Original_l_seqno, string Original_daughter_nucid, string Original_dec_type, string Original_perc) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nucid));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(l_seqno));
            if ((daughter_nucid == null)) {
                throw new global::System.ArgumentNullException("daughter_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(daughter_nucid));
            }
            if ((dec_type == null)) {
                throw new global::System.ArgumentNullException("dec_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dec_type));
            }
            if ((perc == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(perc));
            }
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_nucid));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_l_seqno));
            if ((Original_daughter_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_daughter_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_daughter_nucid));
            }
            if ((Original_dec_type == null)) {
                throw new global::System.ArgumentNullException("Original_dec_type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_dec_type));
            }
            if ((Original_perc == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_perc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string perc, string Original_nucid, long Original_l_seqno, string Original_daughter_nucid, string Original_dec_type, string Original_perc) {
            return this.Update(Original_nucid, Original_l_seqno, Original_daughter_nucid, Original_dec_type, perc, Original_nucid, Original_l_seqno, Original_daughter_nucid, Original_dec_type, Original_perc);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class decay_radiationsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public decay_radiationsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "decay_radiations";
            tableMapping.ColumnMappings.Add("parent_l_seqno", "parent_l_seqno");
            tableMapping.ColumnMappings.Add("parent_nucid", "parent_nucid");
            tableMapping.ColumnMappings.Add("dec_type", "dec_type");
            tableMapping.ColumnMappings.Add("type_a", "type_a");
            tableMapping.ColumnMappings.Add("type_c", "type_c");
            tableMapping.ColumnMappings.Add("logft", "logft");
            tableMapping.ColumnMappings.Add("logft_unc", "logft_unc");
            tableMapping.ColumnMappings.Add("logft_num", "logft_num");
            tableMapping.ColumnMappings.Add("intensity", "intensity");
            tableMapping.ColumnMappings.Add("intensity_unc", "intensity_unc");
            tableMapping.ColumnMappings.Add("intensity_num", "intensity_num");
            tableMapping.ColumnMappings.Add("energy_num", "energy_num");
            tableMapping.ColumnMappings.Add("energy", "energy");
            tableMapping.ColumnMappings.Add("energy_unc", "energy_unc");
            tableMapping.ColumnMappings.Add("endpoint", "endpoint");
            tableMapping.ColumnMappings.Add("endpoint_unc", "endpoint_unc");
            tableMapping.ColumnMappings.Add("dr_pk", "dr_pk");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"decay_radiations\" WHERE (((:IsNull_parent_l_seqno = 1 AND \"pa" +
                "rent_l_seqno\" IS NULL) OR (\"parent_l_seqno\" = :Original_parent_l_seqno)) AND ((:" +
                "IsNull_parent_nucid = 1 AND \"parent_nucid\" IS NULL) OR (\"parent_nucid\" = :Origin" +
                "al_parent_nucid)) AND ((:IsNull_dec_type = 1 AND \"dec_type\" IS NULL) OR (\"dec_ty" +
                "pe\" = :Original_dec_type)) AND ((:IsNull_type_a = 1 AND \"type_a\" IS NULL) OR (\"t" +
                "ype_a\" = :Original_type_a)) AND ((:IsNull_type_c = 1 AND \"type_c\" IS NULL) OR (\"" +
                "type_c\" = :Original_type_c)) AND ((:IsNull_logft = 1 AND \"logft\" IS NULL) OR (\"l" +
                "ogft\" = :Original_logft)) AND ((:IsNull_logft_unc = 1 AND \"logft_unc\" IS NULL) O" +
                "R (\"logft_unc\" = :Original_logft_unc)) AND ((:IsNull_logft_num = 1 AND \"logft_nu" +
                "m\" IS NULL) OR (\"logft_num\" = :Original_logft_num)) AND ((:IsNull_intensity = 1 " +
                "AND \"intensity\" IS NULL) OR (\"intensity\" = :Original_intensity)) AND ((:IsNull_i" +
                "ntensity_unc = 1 AND \"intensity_unc\" IS NULL) OR (\"intensity_unc\" = :Original_in" +
                "tensity_unc)) AND ((:IsNull_intensity_num = 1 AND \"intensity_num\" IS NULL) OR (\"" +
                "intensity_num\" = :Original_intensity_num)) AND ((:IsNull_energy_num = 1 AND \"ene" +
                "rgy_num\" IS NULL) OR (\"energy_num\" = :Original_energy_num)) AND ((:IsNull_energy" +
                " = 1 AND \"energy\" IS NULL) OR (\"energy\" = :Original_energy)) AND ((:IsNull_energ" +
                "y_unc = 1 AND \"energy_unc\" IS NULL) OR (\"energy_unc\" = :Original_energy_unc)) AN" +
                "D ((:IsNull_endpoint = 1 AND \"endpoint\" IS NULL) OR (\"endpoint\" = :Original_endp" +
                "oint)) AND ((:IsNull_endpoint_unc = 1 AND \"endpoint_unc\" IS NULL) OR (\"endpoint_" +
                "unc\" = :Original_endpoint_unc)) AND (\"dr_pk\" = :Original_dr_pk))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_parent_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dec_type";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_type_a";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_a";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_type_c";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_c";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_endpoint";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_endpoint";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_endpoint_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_endpoint_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dr_pk";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dr_pk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""decay_radiations"" (""parent_l_seqno"", ""parent_nucid"", ""dec_type"", ""type_a"", ""type_c"", ""logft"", ""logft_unc"", ""logft_num"", ""intensity"", ""intensity_unc"", ""intensity_num"", ""energy_num"", ""energy"", ""energy_unc"", ""endpoint"", ""endpoint_unc"", ""dr_pk"") VALUES (:parent_l_seqno, :parent_nucid, :dec_type, :type_a, :type_c, :logft, :logft_unc, :logft_num, :intensity, :intensity_unc, :intensity_num, :energy_num, :energy, :energy_unc, :endpoint, :endpoint_unc, :dr_pk)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_a";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_c";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "endpoint";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "endpoint_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dr_pk";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dr_pk";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"decay_radiations\" SET \"parent_l_seqno\" = :parent_l_seqno, \"parent_" +
                "nucid\" = :parent_nucid, \"dec_type\" = :dec_type, \"type_a\" = :type_a, \"type_c\" = :" +
                "type_c, \"logft\" = :logft, \"logft_unc\" = :logft_unc, \"logft_num\" = :logft_num, \"i" +
                "ntensity\" = :intensity, \"intensity_unc\" = :intensity_unc, \"intensity_num\" = :int" +
                "ensity_num, \"energy_num\" = :energy_num, \"energy\" = :energy, \"energy_unc\" = :ener" +
                "gy_unc, \"endpoint\" = :endpoint, \"endpoint_unc\" = :endpoint_unc, \"dr_pk\" = :dr_pk" +
                " WHERE (((:IsNull_parent_l_seqno = 1 AND \"parent_l_seqno\" IS NULL) OR (\"parent_l" +
                "_seqno\" = :Original_parent_l_seqno)) AND ((:IsNull_parent_nucid = 1 AND \"parent_" +
                "nucid\" IS NULL) OR (\"parent_nucid\" = :Original_parent_nucid)) AND ((:IsNull_dec_" +
                "type = 1 AND \"dec_type\" IS NULL) OR (\"dec_type\" = :Original_dec_type)) AND ((:Is" +
                "Null_type_a = 1 AND \"type_a\" IS NULL) OR (\"type_a\" = :Original_type_a)) AND ((:I" +
                "sNull_type_c = 1 AND \"type_c\" IS NULL) OR (\"type_c\" = :Original_type_c)) AND ((:" +
                "IsNull_logft = 1 AND \"logft\" IS NULL) OR (\"logft\" = :Original_logft)) AND ((:IsN" +
                "ull_logft_unc = 1 AND \"logft_unc\" IS NULL) OR (\"logft_unc\" = :Original_logft_unc" +
                ")) AND ((:IsNull_logft_num = 1 AND \"logft_num\" IS NULL) OR (\"logft_num\" = :Origi" +
                "nal_logft_num)) AND ((:IsNull_intensity = 1 AND \"intensity\" IS NULL) OR (\"intens" +
                "ity\" = :Original_intensity)) AND ((:IsNull_intensity_unc = 1 AND \"intensity_unc\"" +
                " IS NULL) OR (\"intensity_unc\" = :Original_intensity_unc)) AND ((:IsNull_intensit" +
                "y_num = 1 AND \"intensity_num\" IS NULL) OR (\"intensity_num\" = :Original_intensity" +
                "_num)) AND ((:IsNull_energy_num = 1 AND \"energy_num\" IS NULL) OR (\"energy_num\" =" +
                " :Original_energy_num)) AND ((:IsNull_energy = 1 AND \"energy\" IS NULL) OR (\"ener" +
                "gy\" = :Original_energy)) AND ((:IsNull_energy_unc = 1 AND \"energy_unc\" IS NULL) " +
                "OR (\"energy_unc\" = :Original_energy_unc)) AND ((:IsNull_endpoint = 1 AND \"endpoi" +
                "nt\" IS NULL) OR (\"endpoint\" = :Original_endpoint)) AND ((:IsNull_endpoint_unc = " +
                "1 AND \"endpoint_unc\" IS NULL) OR (\"endpoint_unc\" = :Original_endpoint_unc)) AND " +
                "(\"dr_pk\" = :Original_dr_pk))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_a";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "type_c";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "logft_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "intensity_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "energy_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "endpoint";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "endpoint_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dr_pk";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dr_pk";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "parent_l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_parent_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_parent_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "parent_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dec_type";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_type_a";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_a";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_a";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_type_c";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_type_c";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "type_c";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "logft_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_logft_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_logft_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "logft_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "intensity_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_intensity_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_intensity_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "intensity_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "energy_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_energy_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_energy_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "energy_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_endpoint";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_endpoint";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_endpoint_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_endpoint_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "endpoint_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dr_pk";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dr_pk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT parent_l_seqno, parent_nucid, dec_type, type_a, type_c, logft, logft_unc, " +
                "logft_num, intensity, intensity_unc, intensity_num, energy_num, energy, energy_u" +
                "nc, endpoint, endpoint_unc, dr_pk FROM \"main\".decay_radiations";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.decay_radiationsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.decay_radiationsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.decay_radiationsDataTable dataTable = new NucBaseDataSet.decay_radiationsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.decay_radiationsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "decay_radiations");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    global::System.Nullable<long> Original_parent_l_seqno, 
                    string Original_parent_nucid, 
                    string Original_dec_type, 
                    string Original_type_a, 
                    string Original_type_c, 
                    string Original_logft, 
                    string Original_logft_unc, 
                    global::System.Nullable<double> Original_logft_num, 
                    string Original_intensity, 
                    string Original_intensity_unc, 
                    global::System.Nullable<double> Original_intensity_num, 
                    global::System.Nullable<double> Original_energy_num, 
                    string Original_energy, 
                    string Original_energy_unc, 
                    string Original_endpoint, 
                    string Original_endpoint_unc, 
                    long Original_dr_pk) {
            if ((Original_parent_l_seqno.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_parent_l_seqno.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Original_parent_nucid == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_parent_nucid));
            }
            if ((Original_dec_type == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dec_type));
            }
            if ((Original_type_a == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_type_a));
            }
            if ((Original_type_c == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_type_c));
            }
            if ((Original_logft == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_logft));
            }
            if ((Original_logft_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_logft_unc));
            }
            if ((Original_logft_num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_logft_num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_intensity == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_intensity));
            }
            if ((Original_intensity_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_intensity_unc));
            }
            if ((Original_intensity_num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_intensity_num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_energy_num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_energy_num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_energy == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_energy));
            }
            if ((Original_energy_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_energy_unc));
            }
            if ((Original_endpoint == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_endpoint));
            }
            if ((Original_endpoint_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_endpoint_unc));
            }
            this.Adapter.DeleteCommand.Parameters[32].Value = ((long)(Original_dr_pk));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<long> parent_l_seqno, 
                    string parent_nucid, 
                    string dec_type, 
                    string type_a, 
                    string type_c, 
                    string logft, 
                    string logft_unc, 
                    global::System.Nullable<double> logft_num, 
                    string intensity, 
                    string intensity_unc, 
                    global::System.Nullable<double> intensity_num, 
                    global::System.Nullable<double> energy_num, 
                    string energy, 
                    string energy_unc, 
                    string endpoint, 
                    string endpoint_unc, 
                    long dr_pk) {
            if ((parent_l_seqno.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(parent_l_seqno.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((parent_nucid == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(parent_nucid));
            }
            if ((dec_type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dec_type));
            }
            if ((type_a == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(type_a));
            }
            if ((type_c == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(type_c));
            }
            if ((logft == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(logft));
            }
            if ((logft_unc == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(logft_unc));
            }
            if ((logft_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(logft_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((intensity == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(intensity));
            }
            if ((intensity_unc == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(intensity_unc));
            }
            if ((intensity_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(intensity_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((energy_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(energy_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((energy == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(energy));
            }
            if ((energy_unc == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(energy_unc));
            }
            if ((endpoint == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(endpoint));
            }
            if ((endpoint_unc == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(endpoint_unc));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((long)(dr_pk));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> parent_l_seqno, 
                    string parent_nucid, 
                    string dec_type, 
                    string type_a, 
                    string type_c, 
                    string logft, 
                    string logft_unc, 
                    global::System.Nullable<double> logft_num, 
                    string intensity, 
                    string intensity_unc, 
                    global::System.Nullable<double> intensity_num, 
                    global::System.Nullable<double> energy_num, 
                    string energy, 
                    string energy_unc, 
                    string endpoint, 
                    string endpoint_unc, 
                    long dr_pk, 
                    global::System.Nullable<long> Original_parent_l_seqno, 
                    string Original_parent_nucid, 
                    string Original_dec_type, 
                    string Original_type_a, 
                    string Original_type_c, 
                    string Original_logft, 
                    string Original_logft_unc, 
                    global::System.Nullable<double> Original_logft_num, 
                    string Original_intensity, 
                    string Original_intensity_unc, 
                    global::System.Nullable<double> Original_intensity_num, 
                    global::System.Nullable<double> Original_energy_num, 
                    string Original_energy, 
                    string Original_energy_unc, 
                    string Original_endpoint, 
                    string Original_endpoint_unc, 
                    long Original_dr_pk) {
            if ((parent_l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(parent_l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((parent_nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(parent_nucid));
            }
            if ((dec_type == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dec_type));
            }
            if ((type_a == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(type_a));
            }
            if ((type_c == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(type_c));
            }
            if ((logft == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(logft));
            }
            if ((logft_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(logft_unc));
            }
            if ((logft_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(logft_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((intensity == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(intensity));
            }
            if ((intensity_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(intensity_unc));
            }
            if ((intensity_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(intensity_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((energy_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(energy_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((energy == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(energy));
            }
            if ((energy_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(energy_unc));
            }
            if ((endpoint == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(endpoint));
            }
            if ((endpoint_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(endpoint_unc));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(dr_pk));
            if ((Original_parent_l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((long)(Original_parent_l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_parent_nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_parent_nucid));
            }
            if ((Original_dec_type == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_dec_type));
            }
            if ((Original_type_a == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_type_a));
            }
            if ((Original_type_c == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_type_c));
            }
            if ((Original_logft == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_logft));
            }
            if ((Original_logft_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_logft_unc));
            }
            if ((Original_logft_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_logft_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_intensity == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_intensity));
            }
            if ((Original_intensity_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_intensity_unc));
            }
            if ((Original_intensity_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_intensity_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_energy_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_energy_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_energy == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_energy));
            }
            if ((Original_energy_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_energy_unc));
            }
            if ((Original_endpoint == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_endpoint));
            }
            if ((Original_endpoint_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_endpoint_unc));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((long)(Original_dr_pk));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> parent_l_seqno, 
                    string parent_nucid, 
                    string dec_type, 
                    string type_a, 
                    string type_c, 
                    string logft, 
                    string logft_unc, 
                    global::System.Nullable<double> logft_num, 
                    string intensity, 
                    string intensity_unc, 
                    global::System.Nullable<double> intensity_num, 
                    global::System.Nullable<double> energy_num, 
                    string energy, 
                    string energy_unc, 
                    string endpoint, 
                    string endpoint_unc, 
                    global::System.Nullable<long> Original_parent_l_seqno, 
                    string Original_parent_nucid, 
                    string Original_dec_type, 
                    string Original_type_a, 
                    string Original_type_c, 
                    string Original_logft, 
                    string Original_logft_unc, 
                    global::System.Nullable<double> Original_logft_num, 
                    string Original_intensity, 
                    string Original_intensity_unc, 
                    global::System.Nullable<double> Original_intensity_num, 
                    global::System.Nullable<double> Original_energy_num, 
                    string Original_energy, 
                    string Original_energy_unc, 
                    string Original_endpoint, 
                    string Original_endpoint_unc, 
                    long Original_dr_pk) {
            return this.Update(parent_l_seqno, parent_nucid, dec_type, type_a, type_c, logft, logft_unc, logft_num, intensity, intensity_unc, intensity_num, energy_num, energy, energy_unc, endpoint, endpoint_unc, Original_dr_pk, Original_parent_l_seqno, Original_parent_nucid, Original_dec_type, Original_type_a, Original_type_c, Original_logft, Original_logft_unc, Original_logft_num, Original_intensity, Original_intensity_unc, Original_intensity_num, Original_energy_num, Original_energy, Original_energy_unc, Original_endpoint, Original_endpoint_unc, Original_dr_pk);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class l_decaysTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public l_decaysTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "l_decays";
            tableMapping.ColumnMappings.Add("nucid", "nucid");
            tableMapping.ColumnMappings.Add("l_seqno", "l_seqno");
            tableMapping.ColumnMappings.Add("perc", "perc");
            tableMapping.ColumnMappings.Add("perc_num", "perc_num");
            tableMapping.ColumnMappings.Add("unc", "unc");
            tableMapping.ColumnMappings.Add("perc_oper", "perc_oper");
            tableMapping.ColumnMappings.Add("dec_type", "dec_type");
            tableMapping.ColumnMappings.Add("daughter_nucid", "daughter_nucid");
            tableMapping.ColumnMappings.Add("decay_label", "decay_label");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""l_decays"" WHERE ((""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND ((:IsNull_perc = 1 AND ""perc"" IS NULL) OR (""perc"" = :Original_perc)) AND ((:IsNull_perc_num = 1 AND ""perc_num"" IS NULL) OR (""perc_num"" = :Original_perc_num)) AND ((:IsNull_unc = 1 AND ""unc"" IS NULL) OR (""unc"" = :Original_unc)) AND ((:IsNull_perc_oper = 1 AND ""perc_oper"" IS NULL) OR (""perc_oper"" = :Original_perc_oper)) AND (""dec_type"" = :Original_dec_type) AND ((:IsNull_daughter_nucid = 1 AND ""daughter_nucid"" IS NULL) OR (""daughter_nucid"" = :Original_daughter_nucid)) AND ((:IsNull_decay_label = 1 AND ""decay_label"" IS NULL) OR (""decay_label"" = :Original_decay_label)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc_oper";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc_oper";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_daughter_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_decay_label";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_decay_label";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"l_decays\" (\"nucid\", \"l_seqno\", \"perc\", \"perc_num\", \"unc\", \"pe" +
                "rc_oper\", \"dec_type\", \"daughter_nucid\", \"decay_label\") VALUES (:nucid, :l_seqno," +
                " :perc, :perc_num, :unc, :perc_oper, :dec_type, :daughter_nucid, :decay_label)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc_oper";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "decay_label";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""l_decays"" SET ""nucid"" = :nucid, ""l_seqno"" = :l_seqno, ""perc"" = :perc, ""perc_num"" = :perc_num, ""unc"" = :unc, ""perc_oper"" = :perc_oper, ""dec_type"" = :dec_type, ""daughter_nucid"" = :daughter_nucid, ""decay_label"" = :decay_label WHERE ((""nucid"" = :Original_nucid) AND (""l_seqno"" = :Original_l_seqno) AND ((:IsNull_perc = 1 AND ""perc"" IS NULL) OR (""perc"" = :Original_perc)) AND ((:IsNull_perc_num = 1 AND ""perc_num"" IS NULL) OR (""perc_num"" = :Original_perc_num)) AND ((:IsNull_unc = 1 AND ""unc"" IS NULL) OR (""unc"" = :Original_unc)) AND ((:IsNull_perc_oper = 1 AND ""perc_oper"" IS NULL) OR (""perc_oper"" = :Original_perc_oper)) AND (""dec_type"" = :Original_dec_type) AND ((:IsNull_daughter_nucid = 1 AND ""daughter_nucid"" IS NULL) OR (""daughter_nucid"" = :Original_daughter_nucid)) AND ((:IsNull_decay_label = 1 AND ""decay_label"" IS NULL) OR (""decay_label"" = :Original_decay_label)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "perc_oper";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dec_type";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "decay_label";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc_num";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc_num";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "perc_num";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_perc_oper";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_perc_oper";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "perc_oper";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dec_type";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "dec_type";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_daughter_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_daughter_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "daughter_nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_decay_label";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_decay_label";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "decay_label";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT nucid, l_seqno, perc, perc_num, unc, perc_oper, dec_type, daughter_nucid, " +
                "decay_label FROM \"main\".l_decays";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.l_decaysDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.l_decaysDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.l_decaysDataTable dataTable = new NucBaseDataSet.l_decaysDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.l_decaysDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "l_decays");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_nucid, long Original_l_seqno, string Original_perc, global::System.Nullable<double> Original_perc_num, string Original_unc, string Original_perc_oper, long Original_dec_type, string Original_daughter_nucid, string Original_decay_label) {
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_nucid));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_l_seqno));
            if ((Original_perc == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_perc));
            }
            if ((Original_perc_num.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_perc_num.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_unc));
            }
            if ((Original_perc_oper == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_perc_oper));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_dec_type));
            if ((Original_daughter_nucid == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_daughter_nucid));
            }
            if ((Original_decay_label == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_decay_label));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nucid, long l_seqno, string perc, global::System.Nullable<double> perc_num, string unc, string perc_oper, long dec_type, string daughter_nucid, string decay_label) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nucid));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(l_seqno));
            if ((perc == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(perc));
            }
            if ((perc_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(perc_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((unc == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(unc));
            }
            if ((perc_oper == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(perc_oper));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(dec_type));
            if ((daughter_nucid == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(daughter_nucid));
            }
            if ((decay_label == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(decay_label));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nucid, 
                    long l_seqno, 
                    string perc, 
                    global::System.Nullable<double> perc_num, 
                    string unc, 
                    string perc_oper, 
                    long dec_type, 
                    string daughter_nucid, 
                    string decay_label, 
                    string Original_nucid, 
                    long Original_l_seqno, 
                    string Original_perc, 
                    global::System.Nullable<double> Original_perc_num, 
                    string Original_unc, 
                    string Original_perc_oper, 
                    long Original_dec_type, 
                    string Original_daughter_nucid, 
                    string Original_decay_label) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nucid));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(l_seqno));
            if ((perc == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(perc));
            }
            if ((perc_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(perc_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((unc == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(unc));
            }
            if ((perc_oper == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(perc_oper));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(dec_type));
            if ((daughter_nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(daughter_nucid));
            }
            if ((decay_label == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(decay_label));
            }
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_nucid));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_l_seqno));
            if ((Original_perc == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_perc));
            }
            if ((Original_perc_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_perc_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_unc));
            }
            if ((Original_perc_oper == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_perc_oper));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_dec_type));
            if ((Original_daughter_nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_daughter_nucid));
            }
            if ((Original_decay_label == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_decay_label));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string perc, global::System.Nullable<double> perc_num, string unc, string perc_oper, string daughter_nucid, string decay_label, string Original_nucid, long Original_l_seqno, string Original_perc, global::System.Nullable<double> Original_perc_num, string Original_unc, string Original_perc_oper, long Original_dec_type, string Original_daughter_nucid, string Original_decay_label) {
            return this.Update(Original_nucid, Original_l_seqno, perc, perc_num, unc, perc_oper, Original_dec_type, daughter_nucid, decay_label, Original_nucid, Original_l_seqno, Original_perc, Original_perc_num, Original_unc, Original_perc_oper, Original_dec_type, Original_daughter_nucid, Original_decay_label);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class nuclidesTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public nuclidesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "nuclides";
            tableMapping.ColumnMappings.Add("nucid", "nucid");
            tableMapping.ColumnMappings.Add("z", "z");
            tableMapping.ColumnMappings.Add("n", "n");
            tableMapping.ColumnMappings.Add("symbol", "symbol");
            tableMapping.ColumnMappings.Add("l_seqno", "l_seqno");
            tableMapping.ColumnMappings.Add("jp", "jp");
            tableMapping.ColumnMappings.Add("half_life", "half_life");
            tableMapping.ColumnMappings.Add("half_life_unc", "half_life_unc");
            tableMapping.ColumnMappings.Add("half_life_unit", "half_life_unit");
            tableMapping.ColumnMappings.Add("half_life_sec", "half_life_sec");
            tableMapping.ColumnMappings.Add("mass_excess", "mass_excess");
            tableMapping.ColumnMappings.Add("mass_excess_unc", "mass_excess_unc");
            tableMapping.ColumnMappings.Add("binding", "binding");
            tableMapping.ColumnMappings.Add("binding_unc", "binding_unc");
            tableMapping.ColumnMappings.Add("atomic_mass", "atomic_mass");
            tableMapping.ColumnMappings.Add("atomic_mass_unc", "atomic_mass_unc");
            tableMapping.ColumnMappings.Add("beta_decay_en", "beta_decay_en");
            tableMapping.ColumnMappings.Add("beta_decay_en_unc", "beta_decay_en_unc");
            tableMapping.ColumnMappings.Add("qa", "qa");
            tableMapping.ColumnMappings.Add("qa_unc", "qa_unc");
            tableMapping.ColumnMappings.Add("qec", "qec");
            tableMapping.ColumnMappings.Add("qec_unc", "qec_unc");
            tableMapping.ColumnMappings.Add("sn", "sn");
            tableMapping.ColumnMappings.Add("sn_unc", "sn_unc");
            tableMapping.ColumnMappings.Add("sp", "sp");
            tableMapping.ColumnMappings.Add("sp_unc", "sp_unc");
            tableMapping.ColumnMappings.Add("radii_val", "radii_val");
            tableMapping.ColumnMappings.Add("radii_del", "radii_del");
            tableMapping.ColumnMappings.Add("el_mom", "el_mom");
            tableMapping.ColumnMappings.Add("mag_mom", "mag_mom");
            tableMapping.ColumnMappings.Add("abundance", "abundance");
            tableMapping.ColumnMappings.Add("abundance_unc", "abundance_unc");
            tableMapping.ColumnMappings.Add("ther_capture", "ther_capture");
            tableMapping.ColumnMappings.Add("ther_capture_unc", "ther_capture_unc");
            tableMapping.ColumnMappings.Add("westcott_g", "westcott_g");
            tableMapping.ColumnMappings.Add("resonance_integ", "resonance_integ");
            tableMapping.ColumnMappings.Add("resonance_integ_unc", "resonance_integ_unc");
            tableMapping.ColumnMappings.Add("tentative", "tentative");
            tableMapping.ColumnMappings.Add("pk", "pk");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"nuclides\" WHERE (((:IsNull_nucid = 1 AND \"nucid\" IS NULL) OR " +
                "(\"nucid\" = :Original_nucid)) AND ((:IsNull_z = 1 AND \"z\" IS NULL) OR (\"z\" = :Ori" +
                "ginal_z)) AND ((:IsNull_n = 1 AND \"n\" IS NULL) OR (\"n\" = :Original_n)) AND ((:Is" +
                "Null_symbol = 1 AND \"symbol\" IS NULL) OR (\"symbol\" = :Original_symbol)) AND ((:I" +
                "sNull_l_seqno = 1 AND \"l_seqno\" IS NULL) OR (\"l_seqno\" = :Original_l_seqno)) AND" +
                " ((:IsNull_jp = 1 AND \"jp\" IS NULL) OR (\"jp\" = :Original_jp)) AND ((:IsNull_half" +
                "_life = 1 AND \"half_life\" IS NULL) OR (\"half_life\" = :Original_half_life)) AND (" +
                "(:IsNull_half_life_unc = 1 AND \"half_life_unc\" IS NULL) OR (\"half_life_unc\" = :O" +
                "riginal_half_life_unc)) AND ((:IsNull_half_life_unit = 1 AND \"half_life_unit\" IS" +
                " NULL) OR (\"half_life_unit\" = :Original_half_life_unit)) AND ((:IsNull_half_life" +
                "_sec = 1 AND \"half_life_sec\" IS NULL) OR (\"half_life_sec\" = :Original_half_life_" +
                "sec)) AND ((:IsNull_mass_excess = 1 AND \"mass_excess\" IS NULL) OR (\"mass_excess\"" +
                " = :Original_mass_excess)) AND ((:IsNull_mass_excess_unc = 1 AND \"mass_excess_un" +
                "c\" IS NULL) OR (\"mass_excess_unc\" = :Original_mass_excess_unc)) AND ((:IsNull_bi" +
                "nding = 1 AND \"binding\" IS NULL) OR (\"binding\" = :Original_binding)) AND ((:IsNu" +
                "ll_binding_unc = 1 AND \"binding_unc\" IS NULL) OR (\"binding_unc\" = :Original_bind" +
                "ing_unc)) AND ((:IsNull_atomic_mass = 1 AND \"atomic_mass\" IS NULL) OR (\"atomic_m" +
                "ass\" = :Original_atomic_mass)) AND ((:IsNull_atomic_mass_unc = 1 AND \"atomic_mas" +
                "s_unc\" IS NULL) OR (\"atomic_mass_unc\" = :Original_atomic_mass_unc)) AND ((:IsNul" +
                "l_beta_decay_en = 1 AND \"beta_decay_en\" IS NULL) OR (\"beta_decay_en\" = :Original" +
                "_beta_decay_en)) AND ((:IsNull_beta_decay_en_unc = 1 AND \"beta_decay_en_unc\" IS " +
                "NULL) OR (\"beta_decay_en_unc\" = :Original_beta_decay_en_unc)) AND ((:IsNull_qa =" +
                " 1 AND \"qa\" IS NULL) OR (\"qa\" = :Original_qa)) AND ((:IsNull_qa_unc = 1 AND \"qa_" +
                "unc\" IS NULL) OR (\"qa_unc\" = :Original_qa_unc)) AND ((:IsNull_qec = 1 AND \"qec\" " +
                "IS NULL) OR (\"qec\" = :Original_qec)) AND ((:IsNull_qec_unc = 1 AND \"qec_unc\" IS " +
                "NULL) OR (\"qec_unc\" = :Original_qec_unc)) AND ((:IsNull_sn = 1 AND \"sn\" IS NULL)" +
                " OR (\"sn\" = :Original_sn)) AND ((:IsNull_sn_unc = 1 AND \"sn_unc\" IS NULL) OR (\"s" +
                "n_unc\" = :Original_sn_unc)) AND ((:IsNull_sp = 1 AND \"sp\" IS NULL) OR (\"sp\" = :O" +
                "riginal_sp)) AND ((:IsNull_sp_unc = 1 AND \"sp_unc\" IS NULL) OR (\"sp_unc\" = :Orig" +
                "inal_sp_unc)) AND ((:IsNull_radii_val = 1 AND \"radii_val\" IS NULL) OR (\"radii_va" +
                "l\" = :Original_radii_val)) AND ((:IsNull_radii_del = 1 AND \"radii_del\" IS NULL) " +
                "OR (\"radii_del\" = :Original_radii_del)) AND ((:IsNull_el_mom = 1 AND \"el_mom\" IS" +
                " NULL) OR (\"el_mom\" = :Original_el_mom)) AND ((:IsNull_mag_mom = 1 AND \"mag_mom\"" +
                " IS NULL) OR (\"mag_mom\" = :Original_mag_mom)) AND ((:IsNull_abundance = 1 AND \"a" +
                "bundance\" IS NULL) OR (\"abundance\" = :Original_abundance)) AND ((:IsNull_abundan" +
                "ce_unc = 1 AND \"abundance_unc\" IS NULL) OR (\"abundance_unc\" = :Original_abundanc" +
                "e_unc)) AND ((:IsNull_ther_capture = 1 AND \"ther_capture\" IS NULL) OR (\"ther_cap" +
                "ture\" = :Original_ther_capture)) AND ((:IsNull_ther_capture_unc = 1 AND \"ther_ca" +
                "pture_unc\" IS NULL) OR (\"ther_capture_unc\" = :Original_ther_capture_unc)) AND ((" +
                ":IsNull_westcott_g = 1 AND \"westcott_g\" IS NULL) OR (\"westcott_g\" = :Original_we" +
                "stcott_g)) AND ((:IsNull_resonance_integ = 1 AND \"resonance_integ\" IS NULL) OR (" +
                "\"resonance_integ\" = :Original_resonance_integ)) AND ((:IsNull_resonance_integ_un" +
                "c = 1 AND \"resonance_integ_unc\" IS NULL) OR (\"resonance_integ_unc\" = :Original_r" +
                "esonance_integ_unc)) AND ((:IsNull_tentative = 1 AND \"tentative\" IS NULL) OR (\"t" +
                "entative\" = :Original_tentative)) AND (\"pk\" = :Original_pk))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_z";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_n";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_symbol";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_symbol";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_jp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_unit";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_unit";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_sec";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_sec";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mass_excess";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mass_excess";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mass_excess_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mass_excess_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_binding";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_binding";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_binding_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_binding_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_atomic_mass";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_atomic_mass";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_atomic_mass_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_atomic_mass_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_beta_decay_en";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_beta_decay_en";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_beta_decay_en_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_beta_decay_en_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qa";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qa";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qa_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qa_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qec";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qec";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qec_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qec_unc";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sn";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sn_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sn_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sp_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sp_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_radii_val";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_radii_val";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_radii_del";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_radii_del";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_el_mom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_el_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mag_mom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mag_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abundance";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abundance";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abundance_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abundance_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_capture";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_capture";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_capture_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_capture_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_westcott_g";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_westcott_g";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_resonance_integ";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_resonance_integ";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_resonance_integ_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_resonance_integ_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_tentative";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_tentative";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_pk";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""nuclides"" (""nucid"", ""z"", ""n"", ""symbol"", ""l_seqno"", ""jp"", ""half_life"", ""half_life_unc"", ""half_life_unit"", ""half_life_sec"", ""mass_excess"", ""mass_excess_unc"", ""binding"", ""binding_unc"", ""atomic_mass"", ""atomic_mass_unc"", ""beta_decay_en"", ""beta_decay_en_unc"", ""qa"", ""qa_unc"", ""qec"", ""qec_unc"", ""sn"", ""sn_unc"", ""sp"", ""sp_unc"", ""radii_val"", ""radii_del"", ""el_mom"", ""mag_mom"", ""abundance"", ""abundance_unc"", ""ther_capture"", ""ther_capture_unc"", ""westcott_g"", ""resonance_integ"", ""resonance_integ_unc"", ""tentative"", ""pk"") VALUES (:nucid, :z, :n, :symbol, :l_seqno, :jp, :half_life, :half_life_unc, :half_life_unit, :half_life_sec, :mass_excess, :mass_excess_unc, :binding, :binding_unc, :atomic_mass, :atomic_mass_unc, :beta_decay_en, :beta_decay_en_unc, :qa, :qa_unc, :qec, :qec_unc, :sn, :sn_unc, :sp, :sp_unc, :radii_val, :radii_del, :el_mom, :mag_mom, :abundance, :abundance_unc, :ther_capture, :ther_capture_unc, :westcott_g, :resonance_integ, :resonance_integ_unc, :tentative, :pk)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "symbol";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_unit";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_sec";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mass_excess";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mass_excess_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "binding";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "binding_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "atomic_mass";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "atomic_mass_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "beta_decay_en";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "beta_decay_en_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qa";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qa_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qec";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qec_unc";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sn_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sp_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "radii_val";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "radii_del";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "el_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mag_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abundance";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abundance_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_capture";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_capture_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "westcott_g";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "resonance_integ";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "resonance_integ_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "tentative";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "pk";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pk";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"nuclides\" SET \"nucid\" = :nucid, \"z\" = :z, \"n\" = :n, \"symbol\" = :sy" +
                "mbol, \"l_seqno\" = :l_seqno, \"jp\" = :jp, \"half_life\" = :half_life, \"half_life_unc" +
                "\" = :half_life_unc, \"half_life_unit\" = :half_life_unit, \"half_life_sec\" = :half_" +
                "life_sec, \"mass_excess\" = :mass_excess, \"mass_excess_unc\" = :mass_excess_unc, \"b" +
                "inding\" = :binding, \"binding_unc\" = :binding_unc, \"atomic_mass\" = :atomic_mass, " +
                "\"atomic_mass_unc\" = :atomic_mass_unc, \"beta_decay_en\" = :beta_decay_en, \"beta_de" +
                "cay_en_unc\" = :beta_decay_en_unc, \"qa\" = :qa, \"qa_unc\" = :qa_unc, \"qec\" = :qec, " +
                "\"qec_unc\" = :qec_unc, \"sn\" = :sn, \"sn_unc\" = :sn_unc, \"sp\" = :sp, \"sp_unc\" = :sp" +
                "_unc, \"radii_val\" = :radii_val, \"radii_del\" = :radii_del, \"el_mom\" = :el_mom, \"m" +
                "ag_mom\" = :mag_mom, \"abundance\" = :abundance, \"abundance_unc\" = :abundance_unc, " +
                "\"ther_capture\" = :ther_capture, \"ther_capture_unc\" = :ther_capture_unc, \"westcot" +
                "t_g\" = :westcott_g, \"resonance_integ\" = :resonance_integ, \"resonance_integ_unc\" " +
                "= :resonance_integ_unc, \"tentative\" = :tentative, \"pk\" = :pk WHERE (((:IsNull_nu" +
                "cid = 1 AND \"nucid\" IS NULL) OR (\"nucid\" = :Original_nucid)) AND ((:IsNull_z = 1" +
                " AND \"z\" IS NULL) OR (\"z\" = :Original_z)) AND ((:IsNull_n = 1 AND \"n\" IS NULL) O" +
                "R (\"n\" = :Original_n)) AND ((:IsNull_symbol = 1 AND \"symbol\" IS NULL) OR (\"symbo" +
                "l\" = :Original_symbol)) AND ((:IsNull_l_seqno = 1 AND \"l_seqno\" IS NULL) OR (\"l_" +
                "seqno\" = :Original_l_seqno)) AND ((:IsNull_jp = 1 AND \"jp\" IS NULL) OR (\"jp\" = :" +
                "Original_jp)) AND ((:IsNull_half_life = 1 AND \"half_life\" IS NULL) OR (\"half_lif" +
                "e\" = :Original_half_life)) AND ((:IsNull_half_life_unc = 1 AND \"half_life_unc\" I" +
                "S NULL) OR (\"half_life_unc\" = :Original_half_life_unc)) AND ((:IsNull_half_life_" +
                "unit = 1 AND \"half_life_unit\" IS NULL) OR (\"half_life_unit\" = :Original_half_lif" +
                "e_unit)) AND ((:IsNull_half_life_sec = 1 AND \"half_life_sec\" IS NULL) OR (\"half_" +
                "life_sec\" = :Original_half_life_sec)) AND ((:IsNull_mass_excess = 1 AND \"mass_ex" +
                "cess\" IS NULL) OR (\"mass_excess\" = :Original_mass_excess)) AND ((:IsNull_mass_ex" +
                "cess_unc = 1 AND \"mass_excess_unc\" IS NULL) OR (\"mass_excess_unc\" = :Original_ma" +
                "ss_excess_unc)) AND ((:IsNull_binding = 1 AND \"binding\" IS NULL) OR (\"binding\" =" +
                " :Original_binding)) AND ((:IsNull_binding_unc = 1 AND \"binding_unc\" IS NULL) OR" +
                " (\"binding_unc\" = :Original_binding_unc)) AND ((:IsNull_atomic_mass = 1 AND \"ato" +
                "mic_mass\" IS NULL) OR (\"atomic_mass\" = :Original_atomic_mass)) AND ((:IsNull_ato" +
                "mic_mass_unc = 1 AND \"atomic_mass_unc\" IS NULL) OR (\"atomic_mass_unc\" = :Origina" +
                "l_atomic_mass_unc)) AND ((:IsNull_beta_decay_en = 1 AND \"beta_decay_en\" IS NULL)" +
                " OR (\"beta_decay_en\" = :Original_beta_decay_en)) AND ((:IsNull_beta_decay_en_unc" +
                " = 1 AND \"beta_decay_en_unc\" IS NULL) OR (\"beta_decay_en_unc\" = :Original_beta_d" +
                "ecay_en_unc)) AND ((:IsNull_qa = 1 AND \"qa\" IS NULL) OR (\"qa\" = :Original_qa)) A" +
                "ND ((:IsNull_qa_unc = 1 AND \"qa_unc\" IS NULL) OR (\"qa_unc\" = :Original_qa_unc)) " +
                "AND ((:IsNull_qec = 1 AND \"qec\" IS NULL) OR (\"qec\" = :Original_qec)) AND ((:IsNu" +
                "ll_qec_unc = 1 AND \"qec_unc\" IS NULL) OR (\"qec_unc\" = :Original_qec_unc)) AND ((" +
                ":IsNull_sn = 1 AND \"sn\" IS NULL) OR (\"sn\" = :Original_sn)) AND ((:IsNull_sn_unc " +
                "= 1 AND \"sn_unc\" IS NULL) OR (\"sn_unc\" = :Original_sn_unc)) AND ((:IsNull_sp = 1" +
                " AND \"sp\" IS NULL) OR (\"sp\" = :Original_sp)) AND ((:IsNull_sp_unc = 1 AND \"sp_un" +
                "c\" IS NULL) OR (\"sp_unc\" = :Original_sp_unc)) AND ((:IsNull_radii_val = 1 AND \"r" +
                "adii_val\" IS NULL) OR (\"radii_val\" = :Original_radii_val)) AND ((:IsNull_radii_d" +
                "el = 1 AND \"radii_del\" IS NULL) OR (\"radii_del\" = :Original_radii_del)) AND ((:I" +
                "sNull_el_mom = 1 AND \"el_mom\" IS NULL) OR (\"el_mom\" = :Original_el_mom)) AND ((:" +
                "IsNull_mag_mom = 1 AND \"mag_mom\" IS NULL) OR (\"mag_mom\" = :Original_mag_mom)) AN" +
                "D ((:IsNull_abundance = 1 AND \"abundance\" IS NULL) OR (\"abundance\" = :Original_a" +
                "bundance)) AND ((:IsNull_abundance_unc = 1 AND \"abundance_unc\" IS NULL) OR (\"abu" +
                "ndance_unc\" = :Original_abundance_unc)) AND ((:IsNull_ther_capture = 1 AND \"ther" +
                "_capture\" IS NULL) OR (\"ther_capture\" = :Original_ther_capture)) AND ((:IsNull_t" +
                "her_capture_unc = 1 AND \"ther_capture_unc\" IS NULL) OR (\"ther_capture_unc\" = :Or" +
                "iginal_ther_capture_unc)) AND ((:IsNull_westcott_g = 1 AND \"westcott_g\" IS NULL)" +
                " OR (\"westcott_g\" = :Original_westcott_g)) AND ((:IsNull_resonance_integ = 1 AND" +
                " \"resonance_integ\" IS NULL) OR (\"resonance_integ\" = :Original_resonance_integ)) " +
                "AND ((:IsNull_resonance_integ_unc = 1 AND \"resonance_integ_unc\" IS NULL) OR (\"re" +
                "sonance_integ_unc\" = :Original_resonance_integ_unc)) AND ((:IsNull_tentative = 1" +
                " AND \"tentative\" IS NULL) OR (\"tentative\" = :Original_tentative)) AND (\"pk\" = :O" +
                "riginal_pk))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "symbol";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_unit";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "half_life_sec";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mass_excess";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mass_excess_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "binding";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "binding_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "atomic_mass";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "atomic_mass_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "beta_decay_en";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "beta_decay_en_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qa";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qa_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qec";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "qec_unc";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sn_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "sp_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "radii_val";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "radii_del";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "el_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "mag_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abundance";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "abundance_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_capture";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ther_capture_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "westcott_g";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "resonance_integ";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "resonance_integ_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "tentative";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "pk";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pk";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nucid";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_z";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_n";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_symbol";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_symbol";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "symbol";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_jp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_unit";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_unit";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "half_life_unit";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_half_life_sec";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_half_life_sec";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "half_life_sec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mass_excess";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mass_excess";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mass_excess_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mass_excess_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mass_excess_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_binding";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_binding";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_binding_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_binding_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "binding_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_atomic_mass";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_atomic_mass";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_atomic_mass_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_atomic_mass_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "atomic_mass_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_beta_decay_en";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_beta_decay_en";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_beta_decay_en_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_beta_decay_en_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "beta_decay_en_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qa";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qa";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qa_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qa_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qa_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qec";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qec";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "qec";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_qec_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_qec_unc";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "qec_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sn";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sn";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sn_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sn_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sn_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_sp_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_sp_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "sp_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_radii_val";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_radii_val";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_val";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_radii_del";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_radii_del";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "radii_del";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_el_mom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_el_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "el_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_mag_mom";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_mag_mom";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "mag_mom";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abundance";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abundance";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_abundance_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_abundance_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "abundance_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_capture";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_capture";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ther_capture_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ther_capture_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ther_capture_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_westcott_g";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_westcott_g";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "westcott_g";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_resonance_integ";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_resonance_integ";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_resonance_integ_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_resonance_integ_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "resonance_integ_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_tentative";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_tentative";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "tentative";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_pk";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "pk";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT nucid, z, n, symbol, l_seqno, jp, half_life, half_life_unc, half_life_unit, half_life_sec, mass_excess, mass_excess_unc, binding, binding_unc, atomic_mass, atomic_mass_unc, beta_decay_en, beta_decay_en_unc, qa, qa_unc, qec, qec_unc, sn, sn_unc, sp, sp_unc, radii_val, radii_del, el_mom, mag_mom, abundance, abundance_unc, ther_capture, ther_capture_unc, westcott_g, resonance_integ, resonance_integ_unc, tentative, pk FROM ""main"".nuclides";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.nuclidesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.nuclidesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.nuclidesDataTable dataTable = new NucBaseDataSet.nuclidesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.nuclidesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "nuclides");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    string Original_symbol, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_half_life, 
                    string Original_half_life_unc, 
                    string Original_half_life_unit, 
                    global::System.Nullable<double> Original_half_life_sec, 
                    string Original_mass_excess, 
                    string Original_mass_excess_unc, 
                    string Original_binding, 
                    string Original_binding_unc, 
                    string Original_atomic_mass, 
                    string Original_atomic_mass_unc, 
                    string Original_beta_decay_en, 
                    string Original_beta_decay_en_unc, 
                    string Original_qa, 
                    string Original_qa_unc, 
                    string Original_qec, 
                    global::System.Nullable<long> Original_qec_unc, 
                    string Original_sn, 
                    string Original_sn_unc, 
                    string Original_sp, 
                    string Original_sp_unc, 
                    string Original_radii_val, 
                    string Original_radii_del, 
                    string Original_el_mom, 
                    string Original_mag_mom, 
                    string Original_abundance, 
                    string Original_abundance_unc, 
                    string Original_ther_capture, 
                    string Original_ther_capture_unc, 
                    string Original_westcott_g, 
                    string Original_resonance_integ, 
                    string Original_resonance_integ_unc, 
                    string Original_tentative, 
                    string Original_pk) {
            if ((Original_nucid == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nucid));
            }
            if ((Original_z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_n.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_n.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_symbol == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_symbol));
            }
            if ((Original_l_seqno.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_l_seqno.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_jp == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_jp));
            }
            if ((Original_half_life == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_half_life));
            }
            if ((Original_half_life_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_half_life_unc));
            }
            if ((Original_half_life_unit == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_half_life_unit));
            }
            if ((Original_half_life_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_half_life_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_mass_excess == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_mass_excess));
            }
            if ((Original_mass_excess_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_mass_excess_unc));
            }
            if ((Original_binding == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_binding));
            }
            if ((Original_binding_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_binding_unc));
            }
            if ((Original_atomic_mass == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_atomic_mass));
            }
            if ((Original_atomic_mass_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_atomic_mass_unc));
            }
            if ((Original_beta_decay_en == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_beta_decay_en));
            }
            if ((Original_beta_decay_en_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_beta_decay_en_unc));
            }
            if ((Original_qa == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_qa));
            }
            if ((Original_qa_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_qa_unc));
            }
            if ((Original_qec == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_qec));
            }
            if ((Original_qec_unc.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((long)(Original_qec_unc.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_sn == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_sn));
            }
            if ((Original_sn_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_sn_unc));
            }
            if ((Original_sp == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_sp));
            }
            if ((Original_sp_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_sp_unc));
            }
            if ((Original_radii_val == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_radii_val));
            }
            if ((Original_radii_del == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_radii_del));
            }
            if ((Original_el_mom == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_el_mom));
            }
            if ((Original_mag_mom == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_mag_mom));
            }
            if ((Original_abundance == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_abundance));
            }
            if ((Original_abundance_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_abundance_unc));
            }
            if ((Original_ther_capture == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_ther_capture));
            }
            if ((Original_ther_capture_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_ther_capture_unc));
            }
            if ((Original_westcott_g == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_westcott_g));
            }
            if ((Original_resonance_integ == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_resonance_integ));
            }
            if ((Original_resonance_integ_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_resonance_integ_unc));
            }
            if ((Original_tentative == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_tentative));
            }
            if ((Original_pk == null)) {
                throw new global::System.ArgumentNullException("Original_pk");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((string)(Original_pk));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string nucid, 
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    string symbol, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string half_life, 
                    string half_life_unc, 
                    string half_life_unit, 
                    global::System.Nullable<double> half_life_sec, 
                    string mass_excess, 
                    string mass_excess_unc, 
                    string binding, 
                    string binding_unc, 
                    string atomic_mass, 
                    string atomic_mass_unc, 
                    string beta_decay_en, 
                    string beta_decay_en_unc, 
                    string qa, 
                    string qa_unc, 
                    string qec, 
                    global::System.Nullable<long> qec_unc, 
                    string sn, 
                    string sn_unc, 
                    string sp, 
                    string sp_unc, 
                    string radii_val, 
                    string radii_del, 
                    string el_mom, 
                    string mag_mom, 
                    string abundance, 
                    string abundance_unc, 
                    string ther_capture, 
                    string ther_capture_unc, 
                    string westcott_g, 
                    string resonance_integ, 
                    string resonance_integ_unc, 
                    string tentative, 
                    string pk) {
            if ((nucid == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nucid));
            }
            if ((z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((n.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(n.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((symbol == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(symbol));
            }
            if ((l_seqno.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(l_seqno.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((jp == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(jp));
            }
            if ((half_life == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(half_life));
            }
            if ((half_life_unc == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(half_life_unc));
            }
            if ((half_life_unit == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(half_life_unit));
            }
            if ((half_life_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(half_life_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mass_excess == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(mass_excess));
            }
            if ((mass_excess_unc == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(mass_excess_unc));
            }
            if ((binding == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(binding));
            }
            if ((binding_unc == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(binding_unc));
            }
            if ((atomic_mass == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(atomic_mass));
            }
            if ((atomic_mass_unc == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(atomic_mass_unc));
            }
            if ((beta_decay_en == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(beta_decay_en));
            }
            if ((beta_decay_en_unc == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(beta_decay_en_unc));
            }
            if ((qa == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(qa));
            }
            if ((qa_unc == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(qa_unc));
            }
            if ((qec == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(qec));
            }
            if ((qec_unc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((long)(qec_unc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((sn == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(sn));
            }
            if ((sn_unc == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(sn_unc));
            }
            if ((sp == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(sp));
            }
            if ((sp_unc == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(sp_unc));
            }
            if ((radii_val == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(radii_val));
            }
            if ((radii_del == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(radii_del));
            }
            if ((el_mom == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(el_mom));
            }
            if ((mag_mom == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(mag_mom));
            }
            if ((abundance == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(abundance));
            }
            if ((abundance_unc == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(abundance_unc));
            }
            if ((ther_capture == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(ther_capture));
            }
            if ((ther_capture_unc == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ther_capture_unc));
            }
            if ((westcott_g == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(westcott_g));
            }
            if ((resonance_integ == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(resonance_integ));
            }
            if ((resonance_integ_unc == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(resonance_integ_unc));
            }
            if ((tentative == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(tentative));
            }
            if ((pk == null)) {
                throw new global::System.ArgumentNullException("pk");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(pk));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nucid, 
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    string symbol, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string half_life, 
                    string half_life_unc, 
                    string half_life_unit, 
                    global::System.Nullable<double> half_life_sec, 
                    string mass_excess, 
                    string mass_excess_unc, 
                    string binding, 
                    string binding_unc, 
                    string atomic_mass, 
                    string atomic_mass_unc, 
                    string beta_decay_en, 
                    string beta_decay_en_unc, 
                    string qa, 
                    string qa_unc, 
                    string qec, 
                    global::System.Nullable<long> qec_unc, 
                    string sn, 
                    string sn_unc, 
                    string sp, 
                    string sp_unc, 
                    string radii_val, 
                    string radii_del, 
                    string el_mom, 
                    string mag_mom, 
                    string abundance, 
                    string abundance_unc, 
                    string ther_capture, 
                    string ther_capture_unc, 
                    string westcott_g, 
                    string resonance_integ, 
                    string resonance_integ_unc, 
                    string tentative, 
                    string pk, 
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    string Original_symbol, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_half_life, 
                    string Original_half_life_unc, 
                    string Original_half_life_unit, 
                    global::System.Nullable<double> Original_half_life_sec, 
                    string Original_mass_excess, 
                    string Original_mass_excess_unc, 
                    string Original_binding, 
                    string Original_binding_unc, 
                    string Original_atomic_mass, 
                    string Original_atomic_mass_unc, 
                    string Original_beta_decay_en, 
                    string Original_beta_decay_en_unc, 
                    string Original_qa, 
                    string Original_qa_unc, 
                    string Original_qec, 
                    global::System.Nullable<long> Original_qec_unc, 
                    string Original_sn, 
                    string Original_sn_unc, 
                    string Original_sp, 
                    string Original_sp_unc, 
                    string Original_radii_val, 
                    string Original_radii_del, 
                    string Original_el_mom, 
                    string Original_mag_mom, 
                    string Original_abundance, 
                    string Original_abundance_unc, 
                    string Original_ther_capture, 
                    string Original_ther_capture_unc, 
                    string Original_westcott_g, 
                    string Original_resonance_integ, 
                    string Original_resonance_integ_unc, 
                    string Original_tentative, 
                    string Original_pk) {
            if ((nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nucid));
            }
            if ((z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((n.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(n.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((symbol == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(symbol));
            }
            if ((l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((jp == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(jp));
            }
            if ((half_life == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(half_life));
            }
            if ((half_life_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(half_life_unc));
            }
            if ((half_life_unit == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(half_life_unit));
            }
            if ((half_life_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(half_life_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mass_excess == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(mass_excess));
            }
            if ((mass_excess_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(mass_excess_unc));
            }
            if ((binding == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(binding));
            }
            if ((binding_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(binding_unc));
            }
            if ((atomic_mass == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(atomic_mass));
            }
            if ((atomic_mass_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(atomic_mass_unc));
            }
            if ((beta_decay_en == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(beta_decay_en));
            }
            if ((beta_decay_en_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(beta_decay_en_unc));
            }
            if ((qa == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(qa));
            }
            if ((qa_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(qa_unc));
            }
            if ((qec == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(qec));
            }
            if ((qec_unc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(qec_unc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((sn == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(sn));
            }
            if ((sn_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(sn_unc));
            }
            if ((sp == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(sp));
            }
            if ((sp_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(sp_unc));
            }
            if ((radii_val == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(radii_val));
            }
            if ((radii_del == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(radii_del));
            }
            if ((el_mom == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(el_mom));
            }
            if ((mag_mom == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(mag_mom));
            }
            if ((abundance == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(abundance));
            }
            if ((abundance_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(abundance_unc));
            }
            if ((ther_capture == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(ther_capture));
            }
            if ((ther_capture_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ther_capture_unc));
            }
            if ((westcott_g == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(westcott_g));
            }
            if ((resonance_integ == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(resonance_integ));
            }
            if ((resonance_integ_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(resonance_integ_unc));
            }
            if ((tentative == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(tentative));
            }
            if ((pk == null)) {
                throw new global::System.ArgumentNullException("pk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(pk));
            }
            if ((Original_nucid == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_nucid));
            }
            if ((Original_z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((long)(Original_z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_n.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((long)(Original_n.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_symbol == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_symbol));
            }
            if ((Original_l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((long)(Original_l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_jp == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_jp));
            }
            if ((Original_half_life == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_half_life));
            }
            if ((Original_half_life_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_half_life_unc));
            }
            if ((Original_half_life_unit == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_half_life_unit));
            }
            if ((Original_half_life_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_half_life_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_mass_excess == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_mass_excess));
            }
            if ((Original_mass_excess_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_mass_excess_unc));
            }
            if ((Original_binding == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_binding));
            }
            if ((Original_binding_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_binding_unc));
            }
            if ((Original_atomic_mass == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_atomic_mass));
            }
            if ((Original_atomic_mass_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_atomic_mass_unc));
            }
            if ((Original_beta_decay_en == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_beta_decay_en));
            }
            if ((Original_beta_decay_en_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_beta_decay_en_unc));
            }
            if ((Original_qa == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_qa));
            }
            if ((Original_qa_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_qa_unc));
            }
            if ((Original_qec == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_qec));
            }
            if ((Original_qec_unc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((long)(Original_qec_unc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_sn == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_sn));
            }
            if ((Original_sn_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_sn_unc));
            }
            if ((Original_sp == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_sp));
            }
            if ((Original_sp_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_sp_unc));
            }
            if ((Original_radii_val == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_radii_val));
            }
            if ((Original_radii_del == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_radii_del));
            }
            if ((Original_el_mom == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_el_mom));
            }
            if ((Original_mag_mom == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_mag_mom));
            }
            if ((Original_abundance == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_abundance));
            }
            if ((Original_abundance_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_abundance_unc));
            }
            if ((Original_ther_capture == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_ther_capture));
            }
            if ((Original_ther_capture_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_ther_capture_unc));
            }
            if ((Original_westcott_g == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_westcott_g));
            }
            if ((Original_resonance_integ == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_resonance_integ));
            }
            if ((Original_resonance_integ_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_resonance_integ_unc));
            }
            if ((Original_tentative == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_tentative));
            }
            if ((Original_pk == null)) {
                throw new global::System.ArgumentNullException("Original_pk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_pk));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nucid, 
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    string symbol, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string half_life, 
                    string half_life_unc, 
                    string half_life_unit, 
                    global::System.Nullable<double> half_life_sec, 
                    string mass_excess, 
                    string mass_excess_unc, 
                    string binding, 
                    string binding_unc, 
                    string atomic_mass, 
                    string atomic_mass_unc, 
                    string beta_decay_en, 
                    string beta_decay_en_unc, 
                    string qa, 
                    string qa_unc, 
                    string qec, 
                    global::System.Nullable<long> qec_unc, 
                    string sn, 
                    string sn_unc, 
                    string sp, 
                    string sp_unc, 
                    string radii_val, 
                    string radii_del, 
                    string el_mom, 
                    string mag_mom, 
                    string abundance, 
                    string abundance_unc, 
                    string ther_capture, 
                    string ther_capture_unc, 
                    string westcott_g, 
                    string resonance_integ, 
                    string resonance_integ_unc, 
                    string tentative, 
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    string Original_symbol, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_half_life, 
                    string Original_half_life_unc, 
                    string Original_half_life_unit, 
                    global::System.Nullable<double> Original_half_life_sec, 
                    string Original_mass_excess, 
                    string Original_mass_excess_unc, 
                    string Original_binding, 
                    string Original_binding_unc, 
                    string Original_atomic_mass, 
                    string Original_atomic_mass_unc, 
                    string Original_beta_decay_en, 
                    string Original_beta_decay_en_unc, 
                    string Original_qa, 
                    string Original_qa_unc, 
                    string Original_qec, 
                    global::System.Nullable<long> Original_qec_unc, 
                    string Original_sn, 
                    string Original_sn_unc, 
                    string Original_sp, 
                    string Original_sp_unc, 
                    string Original_radii_val, 
                    string Original_radii_del, 
                    string Original_el_mom, 
                    string Original_mag_mom, 
                    string Original_abundance, 
                    string Original_abundance_unc, 
                    string Original_ther_capture, 
                    string Original_ther_capture_unc, 
                    string Original_westcott_g, 
                    string Original_resonance_integ, 
                    string Original_resonance_integ_unc, 
                    string Original_tentative, 
                    string Original_pk) {
            return this.Update(nucid, z, n, symbol, l_seqno, jp, half_life, half_life_unc, half_life_unit, half_life_sec, mass_excess, mass_excess_unc, binding, binding_unc, atomic_mass, atomic_mass_unc, beta_decay_en, beta_decay_en_unc, qa, qa_unc, qec, qec_unc, sn, sn_unc, sp, sp_unc, radii_val, radii_del, el_mom, mag_mom, abundance, abundance_unc, ther_capture, ther_capture_unc, westcott_g, resonance_integ, resonance_integ_unc, tentative, Original_pk, Original_nucid, Original_z, Original_n, Original_symbol, Original_l_seqno, Original_jp, Original_half_life, Original_half_life_unc, Original_half_life_unit, Original_half_life_sec, Original_mass_excess, Original_mass_excess_unc, Original_binding, Original_binding_unc, Original_atomic_mass, Original_atomic_mass_unc, Original_beta_decay_en, Original_beta_decay_en_unc, Original_qa, Original_qa_unc, Original_qec, Original_qec_unc, Original_sn, Original_sn_unc, Original_sp, Original_sp_unc, Original_radii_val, Original_radii_del, Original_el_mom, Original_mag_mom, Original_abundance, Original_abundance_unc, Original_ther_capture, Original_ther_capture_unc, Original_westcott_g, Original_resonance_integ, Original_resonance_integ_unc, Original_tentative, Original_pk);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class thermal_cross_sectTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public thermal_cross_sectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "thermal_cross_sect";
            tableMapping.ColumnMappings.Add("nucid", "nucid");
            tableMapping.ColumnMappings.Add("z", "z");
            tableMapping.ColumnMappings.Add("n", "n");
            tableMapping.ColumnMappings.Add("iso", "iso");
            tableMapping.ColumnMappings.Add("l_seqno", "l_seqno");
            tableMapping.ColumnMappings.Add("jp", "jp");
            tableMapping.ColumnMappings.Add("maxw_ng", "maxw_ng");
            tableMapping.ColumnMappings.Add("maxw_ng_unc", "maxw_ng_unc");
            tableMapping.ColumnMappings.Add("ng", "ng");
            tableMapping.ColumnMappings.Add("ng_unc", "ng_unc");
            tableMapping.ColumnMappings.Add("nel", "nel");
            tableMapping.ColumnMappings.Add("nel_unc", "nel_unc");
            tableMapping.ColumnMappings.Add("na", "na");
            tableMapping.ColumnMappings.Add("na_unc", "na_unc");
            tableMapping.ColumnMappings.Add("np", "np");
            tableMapping.ColumnMappings.Add("np_unc", "np_unc");
            tableMapping.ColumnMappings.Add("nf", "nf");
            tableMapping.ColumnMappings.Add("nf_unc", "nf_unc");
            tableMapping.ColumnMappings.Add("r", "r");
            tableMapping.ColumnMappings.Add("r_unc", "r_unc");
            tableMapping.ColumnMappings.Add("dd0d1", "dd0d1");
            tableMapping.ColumnMappings.Add("dd0d1_unc", "dd0d1_unc");
            tableMapping.ColumnMappings.Add("ic", "ic");
            tableMapping.ColumnMappings.Add("ic_unc", "ic_unc");
            tableMapping.ColumnMappings.Add("ia", "ia");
            tableMapping.ColumnMappings.Add("ia_unc", "ia_unc");
            tableMapping.ColumnMappings.Add("ip", "ip");
            tableMapping.ColumnMappings.Add("ip_unc", "ip_unc");
            tableMapping.ColumnMappings.Add("iff", "iff");
            tableMapping.ColumnMappings.Add("iff_unc", "iff_unc");
            tableMapping.ColumnMappings.Add("iabs", "iabs");
            tableMapping.ColumnMappings.Add("iabs_unc", "iabs_unc");
            tableMapping.ColumnMappings.Add("macs30", "macs30");
            tableMapping.ColumnMappings.Add("macs30_unc", "macs30_unc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"thermal_cross_sect\" WHERE ((\"nucid\" = :Original_nucid) AND ((" +
                ":IsNull_z = 1 AND \"z\" IS NULL) OR (\"z\" = :Original_z)) AND ((:IsNull_n = 1 AND \"" +
                "n\" IS NULL) OR (\"n\" = :Original_n)) AND (\"iso\" = :Original_iso) AND ((:IsNull_l_" +
                "seqno = 1 AND \"l_seqno\" IS NULL) OR (\"l_seqno\" = :Original_l_seqno)) AND ((:IsNu" +
                "ll_jp = 1 AND \"jp\" IS NULL) OR (\"jp\" = :Original_jp)) AND ((:IsNull_maxw_ng = 1 " +
                "AND \"maxw_ng\" IS NULL) OR (\"maxw_ng\" = :Original_maxw_ng)) AND ((:IsNull_maxw_ng" +
                "_unc = 1 AND \"maxw_ng_unc\" IS NULL) OR (\"maxw_ng_unc\" = :Original_maxw_ng_unc)) " +
                "AND ((:IsNull_ng = 1 AND \"ng\" IS NULL) OR (\"ng\" = :Original_ng)) AND ((:IsNull_n" +
                "g_unc = 1 AND \"ng_unc\" IS NULL) OR (\"ng_unc\" = :Original_ng_unc)) AND ((:IsNull_" +
                "nel = 1 AND \"nel\" IS NULL) OR (\"nel\" = :Original_nel)) AND ((:IsNull_nel_unc = 1" +
                " AND \"nel_unc\" IS NULL) OR (\"nel_unc\" = :Original_nel_unc)) AND ((:IsNull_na = 1" +
                " AND \"na\" IS NULL) OR (\"na\" = :Original_na)) AND ((:IsNull_na_unc = 1 AND \"na_un" +
                "c\" IS NULL) OR (\"na_unc\" = :Original_na_unc)) AND ((:IsNull_np = 1 AND \"np\" IS N" +
                "ULL) OR (\"np\" = :Original_np)) AND ((:IsNull_np_unc = 1 AND \"np_unc\" IS NULL) OR" +
                " (\"np_unc\" = :Original_np_unc)) AND ((:IsNull_nf = 1 AND \"nf\" IS NULL) OR (\"nf\" " +
                "= :Original_nf)) AND ((:IsNull_nf_unc = 1 AND \"nf_unc\" IS NULL) OR (\"nf_unc\" = :" +
                "Original_nf_unc)) AND ((:IsNull_r = 1 AND \"r\" IS NULL) OR (\"r\" = :Original_r)) A" +
                "ND ((:IsNull_r_unc = 1 AND \"r_unc\" IS NULL) OR (\"r_unc\" = :Original_r_unc)) AND " +
                "((:IsNull_dd0d1 = 1 AND \"dd0d1\" IS NULL) OR (\"dd0d1\" = :Original_dd0d1)) AND ((:" +
                "IsNull_dd0d1_unc = 1 AND \"dd0d1_unc\" IS NULL) OR (\"dd0d1_unc\" = :Original_dd0d1_" +
                "unc)) AND ((:IsNull_ic = 1 AND \"ic\" IS NULL) OR (\"ic\" = :Original_ic)) AND ((:Is" +
                "Null_ic_unc = 1 AND \"ic_unc\" IS NULL) OR (\"ic_unc\" = :Original_ic_unc)) AND ((:I" +
                "sNull_ia = 1 AND \"ia\" IS NULL) OR (\"ia\" = :Original_ia)) AND ((:IsNull_ia_unc = " +
                "1 AND \"ia_unc\" IS NULL) OR (\"ia_unc\" = :Original_ia_unc)) AND ((:IsNull_ip = 1 A" +
                "ND \"ip\" IS NULL) OR (\"ip\" = :Original_ip)) AND ((:IsNull_ip_unc = 1 AND \"ip_unc\"" +
                " IS NULL) OR (\"ip_unc\" = :Original_ip_unc)) AND ((:IsNull_iff = 1 AND \"iff\" IS N" +
                "ULL) OR (\"iff\" = :Original_iff)) AND ((:IsNull_iff_unc = 1 AND \"iff_unc\" IS NULL" +
                ") OR (\"iff_unc\" = :Original_iff_unc)) AND ((:IsNull_iabs = 1 AND \"iabs\" IS NULL)" +
                " OR (\"iabs\" = :Original_iabs)) AND ((:IsNull_iabs_unc = 1 AND \"iabs_unc\" IS NULL" +
                ") OR (\"iabs_unc\" = :Original_iabs_unc)) AND ((:IsNull_macs30 = 1 AND \"macs30\" IS" +
                " NULL) OR (\"macs30\" = :Original_macs30)) AND ((:IsNull_macs30_unc = 1 AND \"macs3" +
                "0_unc\" IS NULL) OR (\"macs30_unc\" = :Original_macs30_unc)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_z";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_n";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iso";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "iso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_jp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_maxw_ng";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_maxw_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_maxw_ng_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_maxw_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ng";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ng_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nel";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nel_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nel_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_na";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "na";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_na";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_na_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_na_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_np";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "np";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_np";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_np_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_np_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nf";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nf";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nf_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nf_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_r";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "r";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_r";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_r_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_r_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dd0d1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dd0d1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dd0d1_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dd0d1_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ic";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ic";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ic_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ic_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ia";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ia";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ia_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ia_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ip";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ip";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ip_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ip_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iff";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iff";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iff_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iff_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iabs";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iabs_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iabs_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_macs30";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_macs30";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_macs30_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_macs30_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""thermal_cross_sect"" (""nucid"", ""z"", ""n"", ""iso"", ""l_seqno"", ""jp"", ""maxw_ng"", ""maxw_ng_unc"", ""ng"", ""ng_unc"", ""nel"", ""nel_unc"", ""na"", ""na_unc"", ""np"", ""np_unc"", ""nf"", ""nf_unc"", ""r"", ""r_unc"", ""dd0d1"", ""dd0d1_unc"", ""ic"", ""ic_unc"", ""ia"", ""ia_unc"", ""ip"", ""ip_unc"", ""iff"", ""iff_unc"", ""iabs"", ""iabs_unc"", ""macs30"", ""macs30_unc"") VALUES (:nucid, :z, :n, :iso, :l_seqno, :jp, :maxw_ng, :maxw_ng_unc, :ng, :ng_unc, :nel, :nel_unc, :na, :na_unc, :np, :np_unc, :nf, :nf_unc, :r, :r_unc, :dd0d1, :dd0d1_unc, :ic, :ic_unc, :ia, :ia_unc, :ip, :ip_unc, :iff, :iff_unc, :iabs, :iabs_unc, :macs30, :macs30_unc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iso";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "iso";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "maxw_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "maxw_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nel_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "na";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "na_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "np";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "np_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nf";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nf_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "r";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "r_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dd0d1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dd0d1_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ic";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ic_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ia";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ia_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ip";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ip_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iff";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iff_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iabs";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iabs_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "macs30";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "macs30_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"thermal_cross_sect\" SET \"nucid\" = :nucid, \"z\" = :z, \"n\" = :n, \"iso" +
                "\" = :iso, \"l_seqno\" = :l_seqno, \"jp\" = :jp, \"maxw_ng\" = :maxw_ng, \"maxw_ng_unc\" " +
                "= :maxw_ng_unc, \"ng\" = :ng, \"ng_unc\" = :ng_unc, \"nel\" = :nel, \"nel_unc\" = :nel_u" +
                "nc, \"na\" = :na, \"na_unc\" = :na_unc, \"np\" = :np, \"np_unc\" = :np_unc, \"nf\" = :nf, " +
                "\"nf_unc\" = :nf_unc, \"r\" = :r, \"r_unc\" = :r_unc, \"dd0d1\" = :dd0d1, \"dd0d1_unc\" = " +
                ":dd0d1_unc, \"ic\" = :ic, \"ic_unc\" = :ic_unc, \"ia\" = :ia, \"ia_unc\" = :ia_unc, \"ip\"" +
                " = :ip, \"ip_unc\" = :ip_unc, \"iff\" = :iff, \"iff_unc\" = :iff_unc, \"iabs\" = :iabs, " +
                "\"iabs_unc\" = :iabs_unc, \"macs30\" = :macs30, \"macs30_unc\" = :macs30_unc WHERE ((\"" +
                "nucid\" = :Original_nucid) AND ((:IsNull_z = 1 AND \"z\" IS NULL) OR (\"z\" = :Origin" +
                "al_z)) AND ((:IsNull_n = 1 AND \"n\" IS NULL) OR (\"n\" = :Original_n)) AND (\"iso\" =" +
                " :Original_iso) AND ((:IsNull_l_seqno = 1 AND \"l_seqno\" IS NULL) OR (\"l_seqno\" =" +
                " :Original_l_seqno)) AND ((:IsNull_jp = 1 AND \"jp\" IS NULL) OR (\"jp\" = :Original" +
                "_jp)) AND ((:IsNull_maxw_ng = 1 AND \"maxw_ng\" IS NULL) OR (\"maxw_ng\" = :Original" +
                "_maxw_ng)) AND ((:IsNull_maxw_ng_unc = 1 AND \"maxw_ng_unc\" IS NULL) OR (\"maxw_ng" +
                "_unc\" = :Original_maxw_ng_unc)) AND ((:IsNull_ng = 1 AND \"ng\" IS NULL) OR (\"ng\" " +
                "= :Original_ng)) AND ((:IsNull_ng_unc = 1 AND \"ng_unc\" IS NULL) OR (\"ng_unc\" = :" +
                "Original_ng_unc)) AND ((:IsNull_nel = 1 AND \"nel\" IS NULL) OR (\"nel\" = :Original" +
                "_nel)) AND ((:IsNull_nel_unc = 1 AND \"nel_unc\" IS NULL) OR (\"nel_unc\" = :Origina" +
                "l_nel_unc)) AND ((:IsNull_na = 1 AND \"na\" IS NULL) OR (\"na\" = :Original_na)) AND" +
                " ((:IsNull_na_unc = 1 AND \"na_unc\" IS NULL) OR (\"na_unc\" = :Original_na_unc)) AN" +
                "D ((:IsNull_np = 1 AND \"np\" IS NULL) OR (\"np\" = :Original_np)) AND ((:IsNull_np_" +
                "unc = 1 AND \"np_unc\" IS NULL) OR (\"np_unc\" = :Original_np_unc)) AND ((:IsNull_nf" +
                " = 1 AND \"nf\" IS NULL) OR (\"nf\" = :Original_nf)) AND ((:IsNull_nf_unc = 1 AND \"n" +
                "f_unc\" IS NULL) OR (\"nf_unc\" = :Original_nf_unc)) AND ((:IsNull_r = 1 AND \"r\" IS" +
                " NULL) OR (\"r\" = :Original_r)) AND ((:IsNull_r_unc = 1 AND \"r_unc\" IS NULL) OR (" +
                "\"r_unc\" = :Original_r_unc)) AND ((:IsNull_dd0d1 = 1 AND \"dd0d1\" IS NULL) OR (\"dd" +
                "0d1\" = :Original_dd0d1)) AND ((:IsNull_dd0d1_unc = 1 AND \"dd0d1_unc\" IS NULL) OR" +
                " (\"dd0d1_unc\" = :Original_dd0d1_unc)) AND ((:IsNull_ic = 1 AND \"ic\" IS NULL) OR " +
                "(\"ic\" = :Original_ic)) AND ((:IsNull_ic_unc = 1 AND \"ic_unc\" IS NULL) OR (\"ic_un" +
                "c\" = :Original_ic_unc)) AND ((:IsNull_ia = 1 AND \"ia\" IS NULL) OR (\"ia\" = :Origi" +
                "nal_ia)) AND ((:IsNull_ia_unc = 1 AND \"ia_unc\" IS NULL) OR (\"ia_unc\" = :Original" +
                "_ia_unc)) AND ((:IsNull_ip = 1 AND \"ip\" IS NULL) OR (\"ip\" = :Original_ip)) AND (" +
                "(:IsNull_ip_unc = 1 AND \"ip_unc\" IS NULL) OR (\"ip_unc\" = :Original_ip_unc)) AND " +
                "((:IsNull_iff = 1 AND \"iff\" IS NULL) OR (\"iff\" = :Original_iff)) AND ((:IsNull_i" +
                "ff_unc = 1 AND \"iff_unc\" IS NULL) OR (\"iff_unc\" = :Original_iff_unc)) AND ((:IsN" +
                "ull_iabs = 1 AND \"iabs\" IS NULL) OR (\"iabs\" = :Original_iabs)) AND ((:IsNull_iab" +
                "s_unc = 1 AND \"iabs_unc\" IS NULL) OR (\"iabs_unc\" = :Original_iabs_unc)) AND ((:I" +
                "sNull_macs30 = 1 AND \"macs30\" IS NULL) OR (\"macs30\" = :Original_macs30)) AND ((:" +
                "IsNull_macs30_unc = 1 AND \"macs30_unc\" IS NULL) OR (\"macs30_unc\" = :Original_mac" +
                "s30_unc)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iso";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "iso";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "maxw_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "maxw_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nel_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "na";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "na_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "np";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "np_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nf";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "nf_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "r";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "r_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dd0d1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "dd0d1_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ic";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ic_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ia";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ia_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ip";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ip_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iff";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iff_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iabs";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "iabs_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "macs30";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "macs30_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nucid";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nucid";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_z";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_z";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "z";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_n";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_n";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "n";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iso";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "iso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_l_seqno";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_l_seqno";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "l_seqno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_jp";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_jp";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "jp";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_maxw_ng";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_maxw_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_maxw_ng_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_maxw_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "maxw_ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ng";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ng";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ng_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ng_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ng_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nel";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nel_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nel_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nel_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_na";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "na";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_na";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_na_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_na_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "na_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_np";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "np";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_np";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_np_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_np_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "np_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nf";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nf";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_nf_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_nf_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "nf_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_r";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "r";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_r";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_r_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_r_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "r_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dd0d1";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dd0d1";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_dd0d1_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_dd0d1_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "dd0d1_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ic";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ic";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ic_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ic_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ic_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ia";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ia";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ia_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ia_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ia_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ip";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ip";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ip_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ip_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ip_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iff";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iff";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iff_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iff_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iff_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iabs";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iabs";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_iabs_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_iabs_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "iabs_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_macs30";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_macs30";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_macs30_unc";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_macs30_unc";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "macs30_unc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::BecquerelMonitor.Properties.Settings.Default.NucBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT nucid, z, n, iso, l_seqno, jp, maxw_ng, maxw_ng_unc, ng, ng_unc, nel, nel_unc, na, na_unc, np, np_unc, nf, nf_unc, r, r_unc, dd0d1, dd0d1_unc, ic, ic_unc, ia, ia_unc, ip, ip_unc, iff, iff_unc, iabs, iabs_unc, macs30, macs30_unc FROM ""main"".thermal_cross_sect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NucBaseDataSet.thermal_cross_sectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NucBaseDataSet.thermal_cross_sectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NucBaseDataSet.thermal_cross_sectDataTable dataTable = new NucBaseDataSet.thermal_cross_sectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet.thermal_cross_sectDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NucBaseDataSet dataSet) {
            return this.Adapter.Update(dataSet, "thermal_cross_sect");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    long Original_iso, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_maxw_ng, 
                    string Original_maxw_ng_unc, 
                    string Original_ng, 
                    string Original_ng_unc, 
                    string Original_nel, 
                    string Original_nel_unc, 
                    string Original_na, 
                    string Original_na_unc, 
                    string Original_np, 
                    string Original_np_unc, 
                    string Original_nf, 
                    string Original_nf_unc, 
                    string Original_r, 
                    string Original_r_unc, 
                    string Original_dd0d1, 
                    string Original_dd0d1_unc, 
                    string Original_ic, 
                    string Original_ic_unc, 
                    string Original_ia, 
                    string Original_ia_unc, 
                    string Original_ip, 
                    string Original_ip_unc, 
                    string Original_iff, 
                    string Original_iff_unc, 
                    string Original_iabs, 
                    string Original_iabs_unc, 
                    string Original_macs30, 
                    string Original_macs30_unc) {
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_nucid));
            }
            if ((Original_z.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((long)(Original_z.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_n.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_n.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_iso));
            if ((Original_l_seqno.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((long)(Original_l_seqno.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_jp == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_jp));
            }
            if ((Original_maxw_ng == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_maxw_ng));
            }
            if ((Original_maxw_ng_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_maxw_ng_unc));
            }
            if ((Original_ng == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ng));
            }
            if ((Original_ng_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ng_unc));
            }
            if ((Original_nel == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_nel));
            }
            if ((Original_nel_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_nel_unc));
            }
            if ((Original_na == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_na));
            }
            if ((Original_na_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_na_unc));
            }
            if ((Original_np == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_np));
            }
            if ((Original_np_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_np_unc));
            }
            if ((Original_nf == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_nf));
            }
            if ((Original_nf_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_nf_unc));
            }
            if ((Original_r == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_r));
            }
            if ((Original_r_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_r_unc));
            }
            if ((Original_dd0d1 == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_dd0d1));
            }
            if ((Original_dd0d1_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_dd0d1_unc));
            }
            if ((Original_ic == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_ic));
            }
            if ((Original_ic_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_ic_unc));
            }
            if ((Original_ia == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_ia));
            }
            if ((Original_ia_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_ia_unc));
            }
            if ((Original_ip == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_ip));
            }
            if ((Original_ip_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_ip_unc));
            }
            if ((Original_iff == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_iff));
            }
            if ((Original_iff_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_iff_unc));
            }
            if ((Original_iabs == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_iabs));
            }
            if ((Original_iabs_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_iabs_unc));
            }
            if ((Original_macs30 == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_macs30));
            }
            if ((Original_macs30_unc == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_macs30_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string nucid, 
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    long iso, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string maxw_ng, 
                    string maxw_ng_unc, 
                    string ng, 
                    string ng_unc, 
                    string nel, 
                    string nel_unc, 
                    string na, 
                    string na_unc, 
                    string np, 
                    string np_unc, 
                    string nf, 
                    string nf_unc, 
                    string r, 
                    string r_unc, 
                    string dd0d1, 
                    string dd0d1_unc, 
                    string ic, 
                    string ic_unc, 
                    string ia, 
                    string ia_unc, 
                    string ip, 
                    string ip_unc, 
                    string iff, 
                    string iff_unc, 
                    string iabs, 
                    string iabs_unc, 
                    string macs30, 
                    string macs30_unc) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nucid));
            }
            if ((z.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(z.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((n.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(n.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(iso));
            if ((l_seqno.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(l_seqno.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((jp == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(jp));
            }
            if ((maxw_ng == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(maxw_ng));
            }
            if ((maxw_ng_unc == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(maxw_ng_unc));
            }
            if ((ng == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ng));
            }
            if ((ng_unc == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ng_unc));
            }
            if ((nel == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(nel));
            }
            if ((nel_unc == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(nel_unc));
            }
            if ((na == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(na));
            }
            if ((na_unc == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(na_unc));
            }
            if ((np == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(np));
            }
            if ((np_unc == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(np_unc));
            }
            if ((nf == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(nf));
            }
            if ((nf_unc == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(nf_unc));
            }
            if ((r == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(r));
            }
            if ((r_unc == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(r_unc));
            }
            if ((dd0d1 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(dd0d1));
            }
            if ((dd0d1_unc == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(dd0d1_unc));
            }
            if ((ic == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ic));
            }
            if ((ic_unc == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ic_unc));
            }
            if ((ia == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ia));
            }
            if ((ia_unc == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ia_unc));
            }
            if ((ip == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(ip));
            }
            if ((ip_unc == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ip_unc));
            }
            if ((iff == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(iff));
            }
            if ((iff_unc == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(iff_unc));
            }
            if ((iabs == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(iabs));
            }
            if ((iabs_unc == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(iabs_unc));
            }
            if ((macs30 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(macs30));
            }
            if ((macs30_unc == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(macs30_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nucid, 
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    long iso, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string maxw_ng, 
                    string maxw_ng_unc, 
                    string ng, 
                    string ng_unc, 
                    string nel, 
                    string nel_unc, 
                    string na, 
                    string na_unc, 
                    string np, 
                    string np_unc, 
                    string nf, 
                    string nf_unc, 
                    string r, 
                    string r_unc, 
                    string dd0d1, 
                    string dd0d1_unc, 
                    string ic, 
                    string ic_unc, 
                    string ia, 
                    string ia_unc, 
                    string ip, 
                    string ip_unc, 
                    string iff, 
                    string iff_unc, 
                    string iabs, 
                    string iabs_unc, 
                    string macs30, 
                    string macs30_unc, 
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    long Original_iso, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_maxw_ng, 
                    string Original_maxw_ng_unc, 
                    string Original_ng, 
                    string Original_ng_unc, 
                    string Original_nel, 
                    string Original_nel_unc, 
                    string Original_na, 
                    string Original_na_unc, 
                    string Original_np, 
                    string Original_np_unc, 
                    string Original_nf, 
                    string Original_nf_unc, 
                    string Original_r, 
                    string Original_r_unc, 
                    string Original_dd0d1, 
                    string Original_dd0d1_unc, 
                    string Original_ic, 
                    string Original_ic_unc, 
                    string Original_ia, 
                    string Original_ia_unc, 
                    string Original_ip, 
                    string Original_ip_unc, 
                    string Original_iff, 
                    string Original_iff_unc, 
                    string Original_iabs, 
                    string Original_iabs_unc, 
                    string Original_macs30, 
                    string Original_macs30_unc) {
            if ((nucid == null)) {
                throw new global::System.ArgumentNullException("nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nucid));
            }
            if ((z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((n.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(n.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(iso));
            if ((l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((jp == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(jp));
            }
            if ((maxw_ng == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(maxw_ng));
            }
            if ((maxw_ng_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(maxw_ng_unc));
            }
            if ((ng == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ng));
            }
            if ((ng_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ng_unc));
            }
            if ((nel == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(nel));
            }
            if ((nel_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(nel_unc));
            }
            if ((na == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(na));
            }
            if ((na_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(na_unc));
            }
            if ((np == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(np));
            }
            if ((np_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(np_unc));
            }
            if ((nf == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(nf));
            }
            if ((nf_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(nf_unc));
            }
            if ((r == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(r));
            }
            if ((r_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(r_unc));
            }
            if ((dd0d1 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(dd0d1));
            }
            if ((dd0d1_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(dd0d1_unc));
            }
            if ((ic == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ic));
            }
            if ((ic_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ic_unc));
            }
            if ((ia == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ia));
            }
            if ((ia_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ia_unc));
            }
            if ((ip == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(ip));
            }
            if ((ip_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ip_unc));
            }
            if ((iff == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(iff));
            }
            if ((iff_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(iff_unc));
            }
            if ((iabs == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(iabs));
            }
            if ((iabs_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(iabs_unc));
            }
            if ((macs30 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(macs30));
            }
            if ((macs30_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(macs30_unc));
            }
            if ((Original_nucid == null)) {
                throw new global::System.ArgumentNullException("Original_nucid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_nucid));
            }
            if ((Original_z.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((long)(Original_z.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_n.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((long)(Original_n.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((long)(Original_iso));
            if ((Original_l_seqno.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((long)(Original_l_seqno.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_jp == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_jp));
            }
            if ((Original_maxw_ng == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_maxw_ng));
            }
            if ((Original_maxw_ng_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_maxw_ng_unc));
            }
            if ((Original_ng == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_ng));
            }
            if ((Original_ng_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ng_unc));
            }
            if ((Original_nel == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_nel));
            }
            if ((Original_nel_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_nel_unc));
            }
            if ((Original_na == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_na));
            }
            if ((Original_na_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_na_unc));
            }
            if ((Original_np == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_np));
            }
            if ((Original_np_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_np_unc));
            }
            if ((Original_nf == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_nf));
            }
            if ((Original_nf_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_nf_unc));
            }
            if ((Original_r == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_r));
            }
            if ((Original_r_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_r_unc));
            }
            if ((Original_dd0d1 == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_dd0d1));
            }
            if ((Original_dd0d1_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_dd0d1_unc));
            }
            if ((Original_ic == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_ic));
            }
            if ((Original_ic_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_ic_unc));
            }
            if ((Original_ia == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(Original_ia));
            }
            if ((Original_ia_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_ia_unc));
            }
            if ((Original_ip == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_ip));
            }
            if ((Original_ip_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Original_ip_unc));
            }
            if ((Original_iff == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_iff));
            }
            if ((Original_iff_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_iff_unc));
            }
            if ((Original_iabs == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_iabs));
            }
            if ((Original_iabs_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_iabs_unc));
            }
            if ((Original_macs30 == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_macs30));
            }
            if ((Original_macs30_unc == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_macs30_unc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> z, 
                    global::System.Nullable<long> n, 
                    global::System.Nullable<long> l_seqno, 
                    string jp, 
                    string maxw_ng, 
                    string maxw_ng_unc, 
                    string ng, 
                    string ng_unc, 
                    string nel, 
                    string nel_unc, 
                    string na, 
                    string na_unc, 
                    string np, 
                    string np_unc, 
                    string nf, 
                    string nf_unc, 
                    string r, 
                    string r_unc, 
                    string dd0d1, 
                    string dd0d1_unc, 
                    string ic, 
                    string ic_unc, 
                    string ia, 
                    string ia_unc, 
                    string ip, 
                    string ip_unc, 
                    string iff, 
                    string iff_unc, 
                    string iabs, 
                    string iabs_unc, 
                    string macs30, 
                    string macs30_unc, 
                    string Original_nucid, 
                    global::System.Nullable<long> Original_z, 
                    global::System.Nullable<long> Original_n, 
                    long Original_iso, 
                    global::System.Nullable<long> Original_l_seqno, 
                    string Original_jp, 
                    string Original_maxw_ng, 
                    string Original_maxw_ng_unc, 
                    string Original_ng, 
                    string Original_ng_unc, 
                    string Original_nel, 
                    string Original_nel_unc, 
                    string Original_na, 
                    string Original_na_unc, 
                    string Original_np, 
                    string Original_np_unc, 
                    string Original_nf, 
                    string Original_nf_unc, 
                    string Original_r, 
                    string Original_r_unc, 
                    string Original_dd0d1, 
                    string Original_dd0d1_unc, 
                    string Original_ic, 
                    string Original_ic_unc, 
                    string Original_ia, 
                    string Original_ia_unc, 
                    string Original_ip, 
                    string Original_ip_unc, 
                    string Original_iff, 
                    string Original_iff_unc, 
                    string Original_iabs, 
                    string Original_iabs_unc, 
                    string Original_macs30, 
                    string Original_macs30_unc) {
            return this.Update(Original_nucid, z, n, Original_iso, l_seqno, jp, maxw_ng, maxw_ng_unc, ng, ng_unc, nel, nel_unc, na, na_unc, np, np_unc, nf, nf_unc, r, r_unc, dd0d1, dd0d1_unc, ic, ic_unc, ia, ia_unc, ip, ip_unc, iff, iff_unc, iabs, iabs_unc, macs30, macs30_unc, Original_nucid, Original_z, Original_n, Original_iso, Original_l_seqno, Original_jp, Original_maxw_ng, Original_maxw_ng_unc, Original_ng, Original_ng_unc, Original_nel, Original_nel_unc, Original_na, Original_na_unc, Original_np, Original_np_unc, Original_nf, Original_nf_unc, Original_r, Original_r_unc, Original_dd0d1, Original_dd0d1_unc, Original_ic, Original_ic_unc, Original_ia, Original_ia_unc, Original_ip, Original_ip_unc, Original_iff, Original_iff_unc, Original_iabs, Original_iabs_unc, Original_macs30, Original_macs30_unc);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private cumulative_fissionTableAdapter _cumulative_fissionTableAdapter;
        
        private decay_chainTableAdapter _decay_chainTableAdapter;
        
        private decay_radiationsTableAdapter _decay_radiationsTableAdapter;
        
        private l_decaysTableAdapter _l_decaysTableAdapter;
        
        private nuclidesTableAdapter _nuclidesTableAdapter;
        
        private thermal_cross_sectTableAdapter _thermal_cross_sectTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public cumulative_fissionTableAdapter cumulative_fissionTableAdapter {
            get {
                return this._cumulative_fissionTableAdapter;
            }
            set {
                this._cumulative_fissionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public decay_chainTableAdapter decay_chainTableAdapter {
            get {
                return this._decay_chainTableAdapter;
            }
            set {
                this._decay_chainTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public decay_radiationsTableAdapter decay_radiationsTableAdapter {
            get {
                return this._decay_radiationsTableAdapter;
            }
            set {
                this._decay_radiationsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public l_decaysTableAdapter l_decaysTableAdapter {
            get {
                return this._l_decaysTableAdapter;
            }
            set {
                this._l_decaysTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public nuclidesTableAdapter nuclidesTableAdapter {
            get {
                return this._nuclidesTableAdapter;
            }
            set {
                this._nuclidesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public thermal_cross_sectTableAdapter thermal_cross_sectTableAdapter {
            get {
                return this._thermal_cross_sectTableAdapter;
            }
            set {
                this._thermal_cross_sectTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cumulative_fissionTableAdapter != null) 
                            && (this._cumulative_fissionTableAdapter.Connection != null))) {
                    return this._cumulative_fissionTableAdapter.Connection;
                }
                if (((this._decay_chainTableAdapter != null) 
                            && (this._decay_chainTableAdapter.Connection != null))) {
                    return this._decay_chainTableAdapter.Connection;
                }
                if (((this._decay_radiationsTableAdapter != null) 
                            && (this._decay_radiationsTableAdapter.Connection != null))) {
                    return this._decay_radiationsTableAdapter.Connection;
                }
                if (((this._l_decaysTableAdapter != null) 
                            && (this._l_decaysTableAdapter.Connection != null))) {
                    return this._l_decaysTableAdapter.Connection;
                }
                if (((this._nuclidesTableAdapter != null) 
                            && (this._nuclidesTableAdapter.Connection != null))) {
                    return this._nuclidesTableAdapter.Connection;
                }
                if (((this._thermal_cross_sectTableAdapter != null) 
                            && (this._thermal_cross_sectTableAdapter.Connection != null))) {
                    return this._thermal_cross_sectTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cumulative_fissionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._decay_chainTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._decay_radiationsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._l_decaysTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nuclidesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._thermal_cross_sectTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(NucBaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cumulative_fissionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.cumulative_fission.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cumulative_fissionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._decay_chainTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.decay_chain.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._decay_chainTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._decay_radiationsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.decay_radiations.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._decay_radiationsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._l_decaysTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.l_decays.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._l_decaysTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nuclidesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.nuclides.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nuclidesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._thermal_cross_sectTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.thermal_cross_sect.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._thermal_cross_sectTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(NucBaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cumulative_fissionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.cumulative_fission.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cumulative_fissionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._decay_chainTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.decay_chain.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._decay_chainTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._decay_radiationsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.decay_radiations.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._decay_radiationsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._l_decaysTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.l_decays.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._l_decaysTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nuclidesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.nuclides.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nuclidesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._thermal_cross_sectTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.thermal_cross_sect.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._thermal_cross_sectTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(NucBaseDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._thermal_cross_sectTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.thermal_cross_sect.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._thermal_cross_sectTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nuclidesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.nuclides.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nuclidesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._l_decaysTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.l_decays.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._l_decaysTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._decay_radiationsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.decay_radiations.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._decay_radiationsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._decay_chainTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.decay_chain.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._decay_chainTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cumulative_fissionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.cumulative_fission.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cumulative_fissionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(NucBaseDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cumulative_fissionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cumulative_fissionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._decay_chainTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._decay_chainTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._decay_radiationsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._decay_radiationsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._l_decaysTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._l_decaysTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nuclidesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nuclidesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._thermal_cross_sectTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._thermal_cross_sectTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cumulative_fissionTableAdapter != null)) {
                    revertConnections.Add(this._cumulative_fissionTableAdapter, this._cumulative_fissionTableAdapter.Connection);
                    this._cumulative_fissionTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._cumulative_fissionTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._cumulative_fissionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cumulative_fissionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cumulative_fissionTableAdapter.Adapter);
                    }
                }
                if ((this._decay_chainTableAdapter != null)) {
                    revertConnections.Add(this._decay_chainTableAdapter, this._decay_chainTableAdapter.Connection);
                    this._decay_chainTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._decay_chainTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._decay_chainTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._decay_chainTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._decay_chainTableAdapter.Adapter);
                    }
                }
                if ((this._decay_radiationsTableAdapter != null)) {
                    revertConnections.Add(this._decay_radiationsTableAdapter, this._decay_radiationsTableAdapter.Connection);
                    this._decay_radiationsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._decay_radiationsTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._decay_radiationsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._decay_radiationsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._decay_radiationsTableAdapter.Adapter);
                    }
                }
                if ((this._l_decaysTableAdapter != null)) {
                    revertConnections.Add(this._l_decaysTableAdapter, this._l_decaysTableAdapter.Connection);
                    this._l_decaysTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._l_decaysTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._l_decaysTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._l_decaysTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._l_decaysTableAdapter.Adapter);
                    }
                }
                if ((this._nuclidesTableAdapter != null)) {
                    revertConnections.Add(this._nuclidesTableAdapter, this._nuclidesTableAdapter.Connection);
                    this._nuclidesTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._nuclidesTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._nuclidesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nuclidesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nuclidesTableAdapter.Adapter);
                    }
                }
                if ((this._thermal_cross_sectTableAdapter != null)) {
                    revertConnections.Add(this._thermal_cross_sectTableAdapter, this._thermal_cross_sectTableAdapter.Connection);
                    this._thermal_cross_sectTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._thermal_cross_sectTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._thermal_cross_sectTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._thermal_cross_sectTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._thermal_cross_sectTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cumulative_fissionTableAdapter != null)) {
                    this._cumulative_fissionTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._cumulative_fissionTableAdapter]));
                    this._cumulative_fissionTableAdapter.Transaction = null;
                }
                if ((this._decay_chainTableAdapter != null)) {
                    this._decay_chainTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._decay_chainTableAdapter]));
                    this._decay_chainTableAdapter.Transaction = null;
                }
                if ((this._decay_radiationsTableAdapter != null)) {
                    this._decay_radiationsTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._decay_radiationsTableAdapter]));
                    this._decay_radiationsTableAdapter.Transaction = null;
                }
                if ((this._l_decaysTableAdapter != null)) {
                    this._l_decaysTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._l_decaysTableAdapter]));
                    this._l_decaysTableAdapter.Transaction = null;
                }
                if ((this._nuclidesTableAdapter != null)) {
                    this._nuclidesTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._nuclidesTableAdapter]));
                    this._nuclidesTableAdapter.Transaction = null;
                }
                if ((this._thermal_cross_sectTableAdapter != null)) {
                    this._thermal_cross_sectTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._thermal_cross_sectTableAdapter]));
                    this._thermal_cross_sectTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591