<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InTheHand.BluetoothLE</name>
    </assembly>
    <members>
        <member name="T:InTheHand.Bluetooth.Bluetooth">
            <summary>
            Entry point to all Bluetooth LE functionality.
            </summary>
            <remarks>
            Several platforms require permissions for this functionality to work. See <see href="https://github.com/inthehand/32feet/wiki/Permissions">Permissions</see> for more details
            </remarks>
        </member>
        <member name="M:InTheHand.Bluetooth.Bluetooth.GetAvailabilityAsync">
            <summary>
            Returns true if Bluetooth is physically available and user has given the app permission.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.Bluetooth.RequestDeviceAsync(InTheHand.Bluetooth.RequestDeviceOptions)">
            <summary>
            Performs a device lookup and prompts the user for permission if required.
            </summary>
            <param name="options"></param>
            <returns>A BluetoothDevice or null if unsuccessful.</returns>
        </member>
        <member name="E:InTheHand.Bluetooth.Bluetooth.AvailabilityChanged">
            <summary>
            Bluetooth availability has changed, for example by disabling the radio or revoking user permission.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.Bluetooth.IInitializeWithWindow">
            <exclude/>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothAdvertisingEvent">
            <summary>
            Represents a received advertising packet.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.Device">
            <summary>
            The device that sent the advertisement.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.Uuids">
            <summary>
            List of UUIDs contained in the advertisement.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.Name">
            <summary>
            Name sent with the advertisement.
            </summary>
            <remarks>Could be a shortened or complete name.</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.Appearance">
            <summary>
            Appearance data describing the type of device sending the advertisement.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.TxPower">
            <summary>
            Transmit power.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.Rssi">
            <summary>
            Received Signal Strength.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.ManufacturerData">
            <summary>
            Manufacturer specific data in a dictionary with the manufacturer identifier as the key.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothAdvertisingEvent.ServiceData">
            <summary>
            Service data relating to each service UUID.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothDevice">
            <summary>
            A BluetoothDevice instance represents a remote Bluetooth device
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothDevice.Id">
            <summary>
            The unique identifier for the device.
            </summary>
            <remarks>On most platforms this will be the Bluetooth address, but some, such as iOS, will use a locally assigned unique id.</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothDevice.Name">
            <summary>
            The human-readable name of the device.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothDevice.Gatt">
            <summary>
            Provides a way to interact with this deviceâ€™s GATT server.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothDevice.IsPaired">
            <summary>
            Returns true if the device is paired.
            </summary>
            <remarks>Supported on Windows and Android only.</remarks>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothDevice.PairAsync">
            <summary>
            Initiate pairing. (Work in progress)
            </summary>
            <remarks>Supported on Windows and Android only.</remarks>
            <returns></returns>
        </member>
        <member name="E:InTheHand.Bluetooth.BluetoothDevice.GattServerDisconnected">
            <summary>
            Fired when an active GATT connection is lost.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothDevice.AddDisposableObject(System.Object,System.IDisposable)">
            <summary>Adds a native (IDisposable) object to the dispose list</summary>
            <param name="container">This is generally the managed object that contains the native object but it can be anything that can serve as a unique key.</param>
            <param name="disposableObject">The native object that we will disposed when the user requests a disconnect</param>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothDevice.DisposeAllNativeObjects">
            <summary>Called in RemoteServer.PlatformCleanup to dispose all of the native object that have been collected.</summary>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothDevice.CreateNativeInstance">
            <summary>
            Used to Recreate 'NativeDevice' if it is in a disposed state.
            </summary>
            <param name="deviceAddress">The bluetooth device address</param>
            <returns>True if 'NativeDevice' was recreated</returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothDevice.IsDisposedItem(System.Object)">
            <summary>Checks if the native object for this container has been disposed.</summary>
            <param name="container">This is generally the managed object that contains the native object but it can be anything that can serve as a unique key.</param>
            <returns>True if the container exists and it's native object has been disposed.</returns>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothLEAppearance">
            <summary>
            Represents the external appearance of a device.
            </summary>
            <remarks>Referenced from <see href="https://bitbucket.org/bluetooth-SIG/public/src/main/assigned_numbers/core/appearance_values.yaml"/></remarks>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothLEAppearanceCategory">
            <summary>
            Represents the external appearance of a device.
            </summary>
            <remarks>Referenced from <see href="https://bitbucket.org/bluetooth-SIG/public/src/main/assigned_numbers/core/appearance_values.yaml"/></remarks>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothLEScanFilter">
            <summary>
            Defines an individual filter to apply when requested devices.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothLEScanFilter.Services">
            <summary>
            List of service UUIDs which a device must expose to match the filter.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothLEScanFilter.Name">
            <summary>
            If present requires a device to exactly match the supplied name.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothLEScanFilter.NamePrefix">
            <summary>
            If present requires a device name to start with the supplied prefix.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothPhy">
            <summary>
            Bluetooth physical layer.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.BluetoothPhy.Le1m">
            <summary>
            LE 1M Physical Channel.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.BluetoothPhy.Le2m">
            <summary>
            LE 2M Physical Channel.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.BluetoothPhy.LeCoded">
            <summary>
            LE Coded Physical Channel.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothUtiAttribute">
            <summary>
            Attribute to attach a Uniform Type Identifier to a Bluetooth UUID.
            </summary>
            <remarks>
            Usage on a class indicates a namespace such as org.bluetooth.characteristic and on a field represents the individual name.</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothUtiAttribute.Uti">
            <summary>
            Uniform Type Identifier e.g. 'org.bluetooth.service.generic_access'.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.BluetoothUuid">
            <summary>
            Represents a Bluetooth UUID. Can be expressed as a Guid or a short ID for documented Bluetooth SIG definitions.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.op_Equality(InTheHand.Bluetooth.BluetoothUuid,InTheHand.Bluetooth.BluetoothUuid)">
            <summary>
            Returns true if both Uuids are equal.
            </summary>
            <param name="uuid1"></param>
            <param name="uuid2"></param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.op_Equality(InTheHand.Bluetooth.BluetoothUuid,System.Guid)">
            <summary>
            Returns true if both Uuids are equal.
            </summary>
            <param name="uuid1"></param>
            <param name="uuid2"></param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.op_Inequality(InTheHand.Bluetooth.BluetoothUuid,InTheHand.Bluetooth.BluetoothUuid)">
            <summary>
            Returns true if both Uuids are unequal.
            </summary>
            <param name="uuid1"></param>
            <param name="uuid2"></param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.op_Inequality(InTheHand.Bluetooth.BluetoothUuid,System.Guid)">
            <summary>
            Returns true if both Uuids are unequal.
            </summary>
            <param name="uuid1"></param>
            <param name="uuid2"></param>
            <returns></returns>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothUuid.Value">
            <summary>
            The full underlying value as a <see cref="T:System.Guid"/>.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.ToString">
            <summary>
            Returns the UUID as a string using the short id if possible.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InTheHand.Bluetooth.BluetoothUuid.Empty">
            <summary>
            A default Uuid containing a zero Guid.
            </summary>
            <value>This is not a valid value so be careful passing this to any native function.</value>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.FromShortId(System.UInt16)">
            <summary>
            Returns the bluetooth device UUID from a short ID.
            </summary>
            <param name="shortId">The short ID.</param>
            <returns>Returns the UUID.</returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.TryGetShortId(System.Guid)">
            <summary>
            Attempts to get the short Bluetooth ID from a UUID.
            </summary>
            <param name="uuid">The UUID.</param>
            <returns>Returns the short ID.</returns>
        </member>
        <member name="M:InTheHand.Bluetooth.BluetoothUuid.FromId(System.String)">
            <summary>
            Returns the Uuid for a given Bluetooth SIG name.
            Names must beging with the "org.bluetooth" prefix.
            </summary>
            <param name="uuidName"></param>
            <returns></returns>
        </member>
        <member name="T:InTheHand.Bluetooth.ClientCharacteristicDescriptorValue">
            <summary>
            Indicates the state of the Client Characteristic Configuration descriptor.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.ClientCharacteristicDescriptorValue.None">
            <summary>
            Neither notification nor indications are enabled.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.ClientCharacteristicDescriptorValue.Notify">
            <summary>
            Characteristic notifications are enabled.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.ClientCharacteristicDescriptorValue.Indicate">
            <summary>
            Characteristic indications are enabled.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.GattCharacteristic">
            <summary>
            Represents a GATT Characteristic, which is a basic data element that provides further information about a peripheralâ€™s service.
            </summary>
            <remarks>Equivalent to <b>BluetoothRemoteGATTCharacteristic</b> in WebBluetooth.</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristic.Service">
            <summary>
            The GATT service this characteristic belongs to.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristic.Uuid">
            <summary>
            The UUID of the characteristic.
            </summary>
            <seealso cref="T:InTheHand.Bluetooth.BluetoothUuid"/>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristic.Properties">
            <summary>
            The properties of this characteristic.
            </summary>
            <seealso cref="T:InTheHand.Bluetooth.GattCharacteristicProperties"/>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristic.Value">
            <summary>
            The currently cached characteristic value. 
            This value gets updated when the value of the characteristic is read or updated via a notification or indication.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.GattCharacteristic.ReadValueAsync">
            <summary>
            Performs a Characteristic Value read from the Bluetooth LE device.
            </summary>
            <returns>The object required to manage the asynchronous operation, which, upon completion, returns the data read from the device.</returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattCharacteristic.WriteValueWithResponseAsync(System.Byte[])">
            <summary>
            Performs a Characteristic Value write to the Bluetooth LE device.
            </summary>
            <param name="value">The data to be written to the Bluetooth LE device.</param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattCharacteristic.WriteValueWithoutResponseAsync(System.Byte[])">
            <summary>
            Performs a Characteristic Value write to the Bluetooth LE device.
            </summary>
            <param name="value">The data to be written to the Bluetooth LE device.</param>
            <returns></returns>
        </member>
        <member name="E:InTheHand.Bluetooth.GattCharacteristic.CharacteristicValueChanged">
            <summary>
            Fired when the value changes, as a result of a value change notification/indication.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.GattCharacteristic.StartNotificationsAsync">
            <summary>
            Registers to start receiving value changed notifications.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Characteristic must support either Notify or Indicate properties.</exception>
        </member>
        <member name="M:InTheHand.Bluetooth.GattCharacteristic.StopNotificationsAsync">
            <summary>
            Unregisters for value changed notifications.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristic.UserDescription">
            <summary>
            Get the user friendly description for this GattCharacteristic, if the User Description <see cref="T:InTheHand.Bluetooth.GattDescriptor">Descriptor</see> is present, otherwise this will be an empty string.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.GattCharacteristicProperties">
            <summary>
            Specifies the values for the GATT characteristic properties as well as the GATT Extended Characteristic Properties Descriptor.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.None">
            <summary>
            The characteristic doesnâ€™t have any properties that apply.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.Broadcast">
            <summary>
            The characteristic supports broadcasting
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.Read">
            <summary>
            The characteristic is readable
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.WriteWithoutResponse">
            <summary>
            The characteristic supports Write Without Response
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.Write">
            <summary>
            The characteristic is writable
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.Notify">
            <summary>
            The characteristic is notifiable
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.Indicate">
            <summary>
            The characteristic is indicatable
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.AuthenticatedSignedWrites">
            <summary>
            The characteristic supports signed writes
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.ExtendedProperties">
            <summary>
            The ExtendedProperties Descriptor is present
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.ReliableWrites">
            <summary>
            The characteristic supports reliable writes
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicProperties.WriteableAuxiliaries">
            <summary>
            The characteristic has writable auxiliaries
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:InTheHand.Bluetooth.GattCharacteristicUuids" -->
        <member name="M:InTheHand.Bluetooth.GattCharacteristicUuids.FromBluetoothUti(System.String)">
            <summary>
            Returns the Uuid for a characteristic given the Uniform Type Identifier.
            </summary>
            <param name="bluetoothUti">Uniform Type Identifier of the characteristic e.g. aerobic_heart_rate_lower_limit</param>
            <returns>The characteristic Uuid on success else Guid.Empty.</returns>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AerobicHeartRateLowerLimit">
            <summary>
            Lower limit of the heart rate where the user enhances his endurance while exercising.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AlertCategoryId">
            <summary>
            Gets the Bluetooth SIG-defined Alert Category ID characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AlertCategoryIdBitMask">
            <summary>
            Gets the Bluetooth SIG-Defined Alert Category ID Bit Mask characteristic UUID
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AlertLevel">
            <summary>
            Gets the Bluetooth SIG-defined Alert Level characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AlertNotificationControlPoint">
            <summary>
            Gets the Bluetooth SIG-defined Alert Notification Control Point characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.AlertStatus">
            <summary>
            Gets the Bluetooth SIG-defined Alert Status characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BatteryLevel">
            <summary>
            Gets the Bluetooth SIG-defined Battery Level characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BatteryLevelState">
            <summary>
            Gets the Bluetooth SIG-defined Battery Level State characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BatteryPowerState">
            <summary>
            Gets the Bluetooth SIG-defined Battery Level State characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BloodPressureFeature">
            <summary>
            Gets the Bluetooth SIG-defined Blood Pressure Feature characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BloodPressureMeasurement">
            <summary>
            Gets the Bluetooth SIG-defined Blood Pressure Measurement Characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BodySensorLocation">
            <summary>
            Gets the Bluetooth SIG-defined Body Sensor Location characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BootKeyboardInputReport">
            <summary>
            Gets the Bluetooth SIG-defined Boot Keyboard Input Report characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BootKeyboardOutputReport">
            <summary>
            Gets the Bluetooth SIG-defined Boot Keyboard Output Report characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.BootMouseInputReport">
            <summary>
            Gets the Bluetooth SIG-defined Boot Mouse Input Report characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CscFeature">
            <summary>
            Gets the Bluetooth SIG-defined CSC Feature characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CscMeasurement">
            <summary>
            Gets the Bluetooth SIG-defined CSC Measurement characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CurrentTime">
            <summary>
            Gets the Bluetooth SIG-defined Current Time characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CyclingPowerControlPoint">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Power Control Point characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CyclingPowerFeature">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Power Feature characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CyclingPowerMeasurement">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Power Measurement characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.CyclingPowerVector">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Power Vector characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.DateOfBirth">
            <summary>
            Gets the Bluetooth SIG-defined Date of Birth characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.DateTime">
            <summary>
            Gets the Bluetooth SIG-defined Date Time characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.DayDateTime">
            <summary>
            Gets the Bluetooth SIG-defined Day Date Time characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.DayOfWeek">
            <summary>
            Gets the Bluetooth SIG-defined Day Of Week characteristic UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattCharacteristicUuids.DstOffset">
            <summary>
            Gets the Bluetooth SIG-defined DST Offset characteristic UUID.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.GattCharacteristicValueChangedEventArgs">
            <summary>
            Contains the characteristic value whenever a change notification is raised.
            </summary>
            <seealso cref="T:InTheHand.Bluetooth.GattCharacteristic"/>
        </member>
        <member name="P:InTheHand.Bluetooth.GattCharacteristicValueChangedEventArgs.Value">
            <summary>
            The new value of the <see cref="T:InTheHand.Bluetooth.GattCharacteristic"/>.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.GattDescriptor">
            <summary>
            Represents a GATT Descriptor, which provides further information about a <see cref="T:InTheHand.Bluetooth.GattCharacteristic"/>â€™s value.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattDescriptor.Characteristic">
            <summary>
            The GATT characteristic this descriptor belongs to.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattDescriptor.Uuid">
            <summary>
            The UUID of the characteristic descriptor.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattDescriptor.Value">
            <summary>
            The currently cached descriptor value. 
            This value gets updated when the value of the descriptor is read.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.GattDescriptor.ReadValueAsync">
            <summary>
            Retrieve the current descriptor value from the remote device.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattDescriptor.WriteValueAsync(System.Byte[])">
            <summary>
            Writes a new value to the descriptor on the remote device.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:InTheHand.Bluetooth.GattDescriptorUuids" -->
        <member name="M:InTheHand.Bluetooth.GattDescriptorUuids.FromBluetoothUti(System.String)">
            <summary>
            Returns the Uuid for a descriptor given the Uniform Type Identifier.
            </summary>
            <param name="bluetoothUti">Uniform Type Identifier of the service e.g. org.bluetooth.descriptor.gatt.characteristic_aggregate_format</param>
            <returns>The descriptor Uuid on success else an empty <see cref="T:InTheHand.Bluetooth.BluetoothUuid"/>.</returns>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.CharacteristicExtendedProperties">
            <summary>
            Gets the Bluetooth SIG-defined Characteristic Extended Properties descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.CharacteristicUserDescription">
            <summary>
            Gets the Bluetooth SIG-defined Characteristic User Description descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ClientCharacteristicConfiguration">
            <summary>
            Gets the Bluetooth SIG-defined Client Characteristic Configuration descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ServerCharacteristicConfiguration">
            <summary>
            Gets the Bluetooth SIG-defined Server Characteristic Configuration descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.CharacteristicPresentationFormat">
            <summary>
            Gets the Bluetooth SIG-defined Characteristic Presentation Format descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.CharacteristicAggregateFormat">
            <summary>
            Gets the Bluetooth SIG-defined Characteristic Aggregate Format descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ValidRange">
            <summary>
            Gets the Bluetooth SIG-defined Valid Range descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ExternalReportReference">
            <summary>
            Gets the Bluetooth SIG-defined External Report Reference descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ReportReference">
            <summary>
            Gets the Bluetooth SIG-defined Report Reference descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.NumberOfDigitals">
            <summary>
            Gets the Bluetooth SIG-defined Number of Digitals descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ValueTriggerSetting">
            <summary>
            Gets the Bluetooth SIG-defined Value Trigger Setting descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.EnvironmentalSensingConfiguration">
            <summary>
            Gets the Bluetooth SIG-defined Environmental Sensing Configuration descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.EnvironmentalSensingMeasurement">
            <summary>
            Gets the Bluetooth SIG-defined Environmental Sensing Measurement descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.EnvironmentalSensingTriggerSetting">
            <summary>
            Gets the Bluetooth SIG-defined Environmental Sensing Trigger Setting descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.TimeTriggerSetting">
            <summary>
            Gets the Bluetooth SIG-defined Time Trigger Setting descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.CompleteBREDRTransportBlockData">
            <summary>
            Gets the Bluetooth SIG-defined Complete BRÂ­EDR Transport Block Data descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ObservationSchedule">
            <summary>
            Gets the Bluetooth SIG-defined Observation Schedule descriptor UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattDescriptorUuids.ValidRangeAndAccuracy">
            <summary>
            Gets the Bluetooth SIG-defined Valid Range and Accuracy descriptor UUID.
            </summary>
        </member>
        <member name="T:InTheHand.Bluetooth.GattService">
            <summary>
            Represents a GATT Service, a collection of characteristics and relationships to other services that encapsulate the behavior of part of a device.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattService.Device">
            <summary>
            The <see cref="T:InTheHand.Bluetooth.BluetoothDevice"/> representing the remote peripheral that the GATT service belongs to.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattService.Uuid">
            <summary>
            The UUID of the service, e.g. '0000180d-0000-1000-8000-00805f9b34fb' for the Heart Rate service.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.GattService.IsPrimary">
            <summary>
            Indicates whether the type of this service is primary or secondary.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.GattService.GetCharacteristicAsync(InTheHand.Bluetooth.BluetoothUuid)">
            <summary>
            Retrieves a Characteristic inside this Service.
            </summary>
            <param name="characteristic"></param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattService.GetCharacteristicsAsync">
            <summary>
            Retrieves a list of Characteristics inside this Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattService.GetIncludedServiceAsync(InTheHand.Bluetooth.BluetoothUuid)">
            <summary>
            Retrieves an Included Service inside this Service.
            </summary>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.GattService.GetIncludedServicesAsync">
            <summary>
            Retrieves a list of Included Services inside this Service.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:InTheHand.Bluetooth.GattServiceUuids" -->
        <member name="M:InTheHand.Bluetooth.GattServiceUuids.FromBluetoothUti(System.String)">
            <summary>
            Returns the Uuid for a service given the Uniform Type Identifier.
            </summary>
            <param name="bluetoothUti">Uniform Type Identifier of the service e.g. org.bluetooth.service.generic_access</param>
            <returns>The service Uuid on success else Guid.Empty.</returns>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.GenericAccess">
            <summary>
            Gets the Bluetooth SIG-defined UUID for the Generic Access service.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.AlertNotification">
            <summary>
            Gets the Bluetooth SIG-defined Alert Notification service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.AudioInputControl">
            <summary>
            Gets the Bluetooth SIG-defined Audio Input Control service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.AudioStreamControl">
            <summary>
            Gets the Bluetooth SIG-defined Audio Stream Control service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.AuthorizationControl">
            <summary>
            Gets the Bluetooth SIG-defined Authorization Control service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.AutomationIO">
            <summary>
            The Automation IO service is used to expose the analog inputs/outputs and digital input/outputs of a generic IO module (IOM).
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BasicAudioAnnouncement">
            <summary>
            Gets the Bluetooth SIG-defined Basic Audio Announcement service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.Battery">
            <summary>
            The Battery Service exposes the state of a battery within a device. 
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BinarySensor">
            <summary>
            Gets the Bluetooth SIG-defined Binary Sensor service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BloodPressure">
            <summary>
            The Blood Pressure Service exposes blood pressure and other data related to a blood pressure monitor.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BodyComposition">
            <summary>
            Gets the Bluetooth SIG-defined Body Composition service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BondManagement">
            <summary>
            Gets the Bluetooth SIG-defined Bond Management service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BroadcastAudioAnnouncement">
            <summary>
            Gets the Bluetooth SIG-defined Broadcast Audio Announcement service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.BroadcastAudioScan">
            <summary>
            Gets the Bluetooth SIG-defined Broadcast Audio Scan service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.CommonAudio">
            <summary>
            Gets the Bluetooth SIG-defined Common Audio service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ConstantToneExtension">
            <summary>
            Gets the Bluetooth SIG-defined Constant Tone Extension service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ContinuousGlucoseMonitoring">
            <summary>
            Gets the Bluetooth SIG-defined Continuous Glucose Monitoring service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.CurrentTime">
            <summary>
            Gets the Bluetooth SIG-defined Current Time service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.CyclingPower">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Power service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.CyclingSpeedAndCadence">
            <summary>
            Gets the Bluetooth SIG-defined Cycling Speed and Cadence Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.DeviceInformation">
            <summary>
            Gets the Bluetooth SIG-defined Device Information service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.DeviceTime">
            <summary>
            Gets the Bluetooth SIG-defined Device Time service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ElectronicShelfLabel">
            <summary>
            Gets the Bluetooth SIG-defined Electronic Shelf Label service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.EnvironmentalSensing">
            <summary>
            Gets the Bluetooth SIG-defined Environmental Sensing service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.FitnessMachine">
            <summary>
            Gets the Bluetooth SIG-defined Fitness Machine service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.GenericAttribute">
            <summary>
            Gets the Bluetooth SIG-defined UUID for the Generic Attribute Service.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.Glucose">
            <summary>
            Gets the Bluetooth SIG-defined Glucose Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.HealthThermometer">
            <summary>
            Gets the Bluetooth SIG-defined Health Thermometer Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.HearingAccess">
            <summary>
            Gets the Bluetooth SIG-defined Hearing Access service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.HeartRate">
            <summary>
            Gets the Bluetooth SIG-defined Heart Rate Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.HttpProxy">
            <summary>
            Gets the Bluetooth SIG-defined HTTP Proxy Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.HumanInterfaceDevice">
            <summary>
            Gets the Bluetooth SIG-defined Human Interface Device service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ImmediateAlert">
            <summary>
            Gets the Bluetooth SIG-defined Immediate Alert service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.IndoorPositioning">
            <summary>
            Gets the Bluetooth SIG-defined Indoor Positioning service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.InsulinDelivery">
            <summary>
            Gets the Bluetooth SIG-defined Insulin Delivery service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.InternetProtocolSupport">
            <summary>
            Gets the Bluetooth SIG-defined Internet Protocol Support service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.LinkLoss">
            <summary>
            Gets the Bluetooth SIG-defined Link Loss service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.LocationAndNavigation">
            <summary>
            Gets the Bluetooth SIG-defined Location and Navigation service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.MeshProvisioning">
            <summary>
            Gets the Bluetooth SIG-defined Mesh Provisioning service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.MeshProxy">
            <summary>
            Gets the Bluetooth SIG-defined Mesh Proxy service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.MeshProxySolicitation">
            <summary>
            Gets the Bluetooth SIG-defined Mesh Proxy Solicitation service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.NextDstChange">
            <summary>
            Gets the Bluetooth SIG-defined Next DST Change service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ObjectTransfer">
            <summary>
            Gets the Bluetooth SIG-defined Object Transfer service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.PhoneAlertStatus">
            <summary>
            Gets the Bluetooth SIG-defined Phone Alert Status service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.PulseOximeter">
            <summary>
            Gets the Bluetooth SIG-defined Pulse Oximeter service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.PublicBroadcastAnnouncement">
            <summary>
            Gets the Bluetooth SIG-defined Public Broadcast Announcement service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ReconnectionConfiguration">
            <summary>
            Gets the Bluetooth SIG-defined Reconnection Configuration service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ReferenceTimeUpdate">
            <summary>
            Gets the Bluetooth SIG-defined Reference Time Update service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.RunningSpeedAndCadence">
            <summary>
            Gets the Bluetooth SIG-defined Running Speed and Cadence Service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.ScanParameters">
            <summary>
            Gets the Bluetooth SIG-defined Scan Parameters service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.TelephonyAndMediaAudio">
            <summary>
            Gets the Bluetooth SIG-defined Telephony and Media Audio service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.TransportDiscovery">
            <summary>
            Gets the Bluetooth SIG-defined Transport Discovery service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.TxPower">
            <summary>
            Gets the Bluetooth SIG-defined Tx Power service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.UserData">
            <summary>
            Gets the Bluetooth SIG-defined User Data service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.VolumeControl">
            <summary>
            Gets the Bluetooth SIG-defined Volume Control service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.VolumeOffsetControl">
            <summary>
            Gets the Bluetooth SIG-defined Volume Offset Control service UUID.
            </summary>
        </member>
        <member name="F:InTheHand.Bluetooth.GattServiceUuids.WeightScale">
            <summary>
            Gets the Bluetooth SIG-defined Weight Scale service UUID.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.RemoteGattServer.AutoConnect">
            <summary>
            Permit to manage autoconnect in GattServer
            </summary>
            <remarks>Available only on Android</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.RemoteGattServer.Device">
            <summary>
            Gets the parent remote device.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.RemoteGattServer.IsConnected">
            <summary>
            Gets a value indicating if there is an active connection with the remote GATT server.
            </summary>
            <value>True if connected, else False.</value>
        </member>
        <member name="P:InTheHand.Bluetooth.RemoteGattServer.Mtu">
            <summary>
            Gets the maximum transmission unit (MTU) size.
            </summary>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.ConnectAsync">
            <summary>
            Open a connection to the remote GATT server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.Disconnect">
            <summary>
            Disconnects the remote GATT server.
            </summary>
            <remarks>Some platforms do not have an explicit Disconnect and will keep the connection open until there are no references to associated services and characteristics.</remarks>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.GetPrimaryServiceAsync(InTheHand.Bluetooth.BluetoothUuid)">
            <summary>
            Returns the primary service matching the specified UUID.
            </summary>
            <param name="service">The requested service or null if not present.</param>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.GetPrimaryServicesAsync(System.Nullable{InTheHand.Bluetooth.BluetoothUuid})">
            <summary>
            Returns primary services, optionally filtering to the supplied UUID.
            </summary>
            <param name="service">Optional service UUID.</param>
            <returns>A list of matching primary services.</returns>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.ReadRssi">
            <summary>
            Requests the Received Signal Strength Indication (RSSI) from the remote device.
            </summary>
            <returns>RSSI or Zero if unavailable.</returns>
        </member>
        <member name="P:InTheHand.Bluetooth.RemoteGattServer.PreferredPhy">
            <summary>
            Sets the preferred Physical Layer (PHY) if supported.
            </summary>
            <remarks>Currently only supported on Android.</remarks>
            <returns></returns>
        </member>
        <member name="M:InTheHand.Bluetooth.RemoteGattServer.RequestMtuAsync(System.Int32)">
            <summary>
            Request the maximum transmission unit (MTU) size.
            </summary>
            <param name="mtu">mtu size from 0 to 512</param>
            <returns>true if succesful.</returns>
            <remarks>Currently supported only on Android.</remarks>
        </member>
        <member name="T:InTheHand.Bluetooth.RequestDeviceOptions">
            <summary>
            Specifies options to use when requesting access to a device.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.RequestDeviceOptions.Filters">
            <summary>
            Filters which define the services or attributes the remote device must support.
            </summary>
        </member>
        <member name="P:InTheHand.Bluetooth.RequestDeviceOptions.OptionalServices">
            <summary>
            Additional services which are not required but the client will have access to.
            </summary>
            <remarks>Not used as unlike the web we do not restrict which services are accessible.</remarks>
        </member>
        <member name="P:InTheHand.Bluetooth.RequestDeviceOptions.AcceptAllDevices">
            <summary>
            If set the request returns all available devices with no filters applied.
            </summary>
        </member>
    </members>
</doc>
